name: 'Konnect Resources'
description: 'Provision or destroy Konnect resources'
inputs:
  config:
    description: 'Path to the provisioning config file'
    required: true
  action:
    description: 'Action to perform'
    required: true
    default: 'provision'
  vault_address:
    description: 'Vault address'
    required: false
    default: 'http://localhost:8300'
  vault_token:
    description: 'Vault token'
    required: true
  s3_endpoint_url:
    description: 'S3 endpoint URL'
    required: true
    default: 'http://localhost:9000'
  s3_access_key:
    description: 'S3 access key'
    required: true
  s3_secret_key:
    description: 'S3 secret key'
    required: true
  konnect_region:
    description: "Konnect region"
    required: false
    default: "eu"
  konnect_token:
    description: 'Konnect API token'
    required: true
  konnect_team_name:
    description: 'Team name to provision resources for'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 'latest'

    - name: Validate config
      shell: bash
      run: |
        ${{ github.action_path }}/scripts/validate-config.sh "${{ inputs.config }}"

    - name: Setup Terraform Environment
      shell: bash
      run: |
        echo "VAULT_ADDR=${{ inputs.vault_address }}" >> $GITHUB_ENV
        echo "VAULT_TOKEN=${{ inputs.vault_token }}" >> $GITHUB_ENV
        echo "AWS_ENDPOINT_URL=${{ inputs.s3_endpoint_url }}" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=${{ inputs.s3_access_key }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ inputs.s3_secret_key }}" >> $GITHUB_ENV
        echo "TF_VAR_konnect_access_token=${{ inputs.konnect_token }}" >> $GITHUB_ENV
        echo "TF_VAR_config_file=${{ inputs.config }}" >> $GITHUB_ENV
        echo "TF_VAR_konnect_server_url=https://${{ inputs.konnect_region }}.api.konghq.com" >> $GITHUB_ENV
        echo "TF_VAR_gh_workspace_path=${{ github.workspace }}" >> $GITHUB_ENV
        echo "TF_VAR_team_name=${{ inputs.konnect_team_name }}" >> $GITHUB_ENV

    - name: Terraform Init
      shell: bash
      run: |
        terraform init -upgrade \
          -backend-config=config.s3.tfbackend \
          -backend-config="bucket=konnect.team.resources.${{ inputs.konnect_team_name }}" \
          -backend-config="key=tfstate" \
          -backend-config="region=main" \
          -backend-config="access_key=${{ inputs.s3_access_key }}" \
          -backend-config="secret_key=${{ inputs.s3_secret_key }}"
      working-directory: ${{ github.action_path }}/terraform

    - name: Terraform Plan
      shell: bash
      if: ${{ inputs.action == 'provision' }}
      run: |
        terraform plan -out=tfplan
      working-directory: ${{ github.action_path }}/terraform

    - name: Terraform Apply
      shell: bash
      if: ${{ inputs.action == 'provision' }}
      id: tfapply
      run: |
        terraform apply -auto-approve tfplan
      working-directory: ${{ github.action_path }}/terraform

    - name: Terraform destroy
      shell: bash
      if: ${{ inputs.action == 'destroy' }}
      run: |
        terraform destroy -auto-approve
      working-directory: ${{ github.action_path }}/terraform
