{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/devops-rob/terracurl": {
      "provider": {
        "version": 0,
        "block": {
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "terracurl_request": {
          "version": 0,
          "block": {
            "attributes": {
              "ca_cert_directory": {
                "type": "string",
                "description": "Path to a directory on local disk that contains one or more certificate files that will be used to validate the certificate presented by the server",
                "description_kind": "plain",
                "optional": true
              },
              "ca_cert_file": {
                "type": "string",
                "description": "Path to a file on local disk that will be used to validate the certificate presented by the server",
                "description_kind": "plain",
                "optional": true
              },
              "cert_file": {
                "type": "string",
                "description": "Path to a file on local disk that contains the PEM-encoded certificate to present to the server",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_ca_cert_directory": {
                "type": "string",
                "description": "Path to a directory on local disk that contains one or more certificate files that will be used to validate the certificate presented by the server",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_ca_cert_file": {
                "type": "string",
                "description": "Path to a file on local disk that will be used to validate the certificate presented by the server",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_cert_file": {
                "type": "string",
                "description": "Path to a file on local disk that contains the PEM-encoded certificate to present to the server",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_headers": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "List of headers to attach to the API call",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_key_file": {
                "type": "string",
                "description": "Path to a file on local disk that contains the PEM-encoded private key for which the authentication certificate was issued",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_max_retry": {
                "type": "number",
                "description": "Maximum number of tries until it is marked as failed",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_method": {
                "type": "string",
                "description": "HTTP method to use in the API call",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_request_body": {
                "type": "string",
                "description": "A request body to attach to the API call",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_response_codes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of expected response codes for destroy operations",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_retry_interval": {
                "type": "number",
                "description": "Interval between each attempt",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_skip_tls_verify": {
                "type": "bool",
                "description": "Set this to true to disable verification of the Vault server's TLS certificate",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_url": {
                "type": "string",
                "description": "Api endpoint to call",
                "description_kind": "plain",
                "optional": true
              },
              "headers": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of headers to attach to the API call",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_file": {
                "type": "string",
                "description": "Path to a file on local disk that contains the PEM-encoded private key for which the authentication certificate was issued",
                "description_kind": "plain",
                "optional": true
              },
              "max_retry": {
                "type": "number",
                "description": "Maximum number of tries until it is marked as failed",
                "description_kind": "plain",
                "optional": true
              },
              "method": {
                "type": "string",
                "description": "HTTP method to use in the API call",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Friendly name for this API call",
                "description_kind": "plain",
                "required": true
              },
              "request_body": {
                "type": "string",
                "description": "A request body to attach to the API call",
                "description_kind": "plain",
                "optional": true
              },
              "response": {
                "type": "string",
                "description": "JSON response received from request",
                "description_kind": "plain",
                "computed": true
              },
              "response_codes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of expected response codes",
                "description_kind": "plain",
                "required": true
              },
              "retry_interval": {
                "type": "number",
                "description": "Interval between each attempt",
                "description_kind": "plain",
                "optional": true
              },
              "skip_tls_verify": {
                "type": "bool",
                "description": "Set this to true to disable verification of the Vault server's TLS certificate",
                "description_kind": "plain",
                "optional": true
              },
              "url": {
                "type": "string",
                "description": "Api endpoint to call",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "A flexible Terraform provider for making API calls",
            "description_kind": "plain"
          }
        }
      },
      "data_source_schemas": {
        "terracurl_request": {
          "version": 0,
          "block": {
            "attributes": {
              "ca_cert_directory": {
                "type": "string",
                "description": "Path to a directory on local disk that contains one or more certificate files that will be used to validate the certificate presented by the server",
                "description_kind": "plain",
                "optional": true
              },
              "ca_cert_file": {
                "type": "string",
                "description": "Path to a file on local disk that will be used to validate the certificate presented by the server",
                "description_kind": "plain",
                "optional": true
              },
              "cert_file": {
                "type": "string",
                "description": "Path to a file on local disk that contains the PEM-encoded certificate to present to the server",
                "description_kind": "plain",
                "optional": true
              },
              "headers": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of headers to attach to the API call",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_file": {
                "type": "string",
                "description": "Path to a file on local disk that contains the PEM-encoded private key for which the authentication certificate was issued",
                "description_kind": "plain",
                "optional": true
              },
              "max_retry": {
                "type": "number",
                "description": "Maximum number of tries until it is marked as failed",
                "description_kind": "plain",
                "optional": true
              },
              "method": {
                "type": "string",
                "description": "HTTP method to use in the API call",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Friendly name for this API call",
                "description_kind": "plain",
                "required": true
              },
              "request_body": {
                "type": "string",
                "description": "A request body to attach to the API call",
                "description_kind": "plain",
                "optional": true
              },
              "response": {
                "type": "string",
                "description": "JSON response received from request",
                "description_kind": "plain",
                "computed": true
              },
              "response_codes": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of expected response codes",
                "description_kind": "plain",
                "required": true
              },
              "retry_interval": {
                "type": "number",
                "description": "Interval between each attempt",
                "description_kind": "plain",
                "optional": true
              },
              "skip_tls_verify": {
                "type": "bool",
                "description": "Set this to true to disable verification of the Vault server's TLS certificate",
                "description_kind": "plain",
                "optional": true
              },
              "url": {
                "type": "string",
                "description": "Api endpoint to call",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "Sample data source in the Terraform provider scaffolding.",
            "description_kind": "plain"
          }
        }
      }
    },
    "registry.terraform.io/hashicorp/time": {
      "provider": {
        "version": 0,
        "block": {
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "time_offset": {
          "version": 0,
          "block": {
            "attributes": {
              "base_rfc3339": {
                "type": "string",
                "description": "Base timestamp in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (see [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) e.g., `YYYY-MM-DDTHH:MM:SSZ`). Defaults to the current time.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "day": {
                "type": "number",
                "description": "Number day of offset timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "hour": {
                "type": "number",
                "description": "Number hour of offset timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "RFC3339 format of the offset timestamp, e.g. `2020-02-12T06:36:13Z`.",
                "description_kind": "plain",
                "computed": true
              },
              "minute": {
                "type": "number",
                "description": "Number minute of offset timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "month": {
                "type": "number",
                "description": "Number month of offset timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "offset_days": {
                "type": "number",
                "description": "Number of days to offset the base timestamp. At least one of the 'offset_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "offset_hours": {
                "type": "number",
                "description": " Number of hours to offset the base timestamp. At least one of the 'offset_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "offset_minutes": {
                "type": "number",
                "description": "Number of minutes to offset the base timestamp. At least one of the 'offset_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "offset_months": {
                "type": "number",
                "description": "Number of months to offset the base timestamp. At least one of the 'offset_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "offset_seconds": {
                "type": "number",
                "description": "Number of seconds to offset the base timestamp. At least one of the 'offset_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "offset_years": {
                "type": "number",
                "description": "Number of years to offset the base timestamp. At least one of the 'offset_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "rfc3339": {
                "type": "string",
                "description": "RFC3339 format of the offset timestamp, e.g. `2020-02-12T06:36:13Z`.",
                "description_kind": "plain",
                "computed": true
              },
              "second": {
                "type": "number",
                "description": "Number second of offset timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "triggers": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Arbitrary map of values that, when changed, will trigger a new base timestamp value to be saved. See [the main provider documentation](../index.md) for more information.",
                "description_kind": "plain",
                "optional": true
              },
              "unix": {
                "type": "number",
                "description": "Number of seconds since epoch time, e.g. `1581489373`.",
                "description_kind": "plain",
                "computed": true
              },
              "year": {
                "type": "number",
                "description": "Number year of offset timestamp.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Manages an offset time resource, which keeps an UTC timestamp stored in the Terraform state that is offset from a locally sourced base timestamp. This prevents perpetual differences caused by using the [`timestamp()` function](https://www.terraform.io/docs/configuration/functions/timestamp.html).",
            "description_kind": "plain"
          }
        },
        "time_rotating": {
          "version": 0,
          "block": {
            "attributes": {
              "day": {
                "type": "number",
                "description": "Number day of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "hour": {
                "type": "number",
                "description": "Number hour of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "RFC3339 format of the timestamp, e.g. `2020-02-12T06:36:13Z`.",
                "description_kind": "plain",
                "computed": true
              },
              "minute": {
                "type": "number",
                "description": "Number minute of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "month": {
                "type": "number",
                "description": "Number month of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "rfc3339": {
                "type": "string",
                "description": "Base timestamp in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (see [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) e.g., `YYYY-MM-DDTHH:MM:SSZ`). Defaults to the current time.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "rotation_days": {
                "type": "number",
                "description": "Number of days to add to the base timestamp to configure the rotation timestamp. When the current time has passed the rotation timestamp, the resource will trigger recreation. At least one of the 'rotation_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_hours": {
                "type": "number",
                "description": "Number of hours to add to the base timestamp to configure the rotation timestamp. When the current time has passed the rotation timestamp, the resource will trigger recreation. At least one of the 'rotation_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_minutes": {
                "type": "number",
                "description": "Number of minutes to add to the base timestamp to configure the rotation timestamp. When the current time has passed the rotation timestamp, the resource will trigger recreation. At least one of the 'rotation_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_months": {
                "type": "number",
                "description": "Number of months to add to the base timestamp to configure the rotation timestamp. When the current time has passed the rotation timestamp, the resource will trigger recreation. At least one of the 'rotation_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_rfc3339": {
                "type": "string",
                "description": "Configure the rotation timestamp with an [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format of the offset timestamp. When the current time has passed the rotation timestamp, the resource will trigger recreation. At least one of the 'rotation_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "rotation_years": {
                "type": "number",
                "description": "Number of years to add to the base timestamp to configure the rotation timestamp. When the current time has passed the rotation timestamp, the resource will trigger recreation. At least one of the 'rotation_' arguments must be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "second": {
                "type": "number",
                "description": "Number second of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "triggers": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Arbitrary map of values that, when changed, will trigger a new base timestamp value to be saved. These conditions recreate the resource in addition to other rotation arguments. See [the main provider documentation](../index.md) for more information.",
                "description_kind": "plain",
                "optional": true
              },
              "unix": {
                "type": "number",
                "description": "Number of seconds since epoch time, e.g. `1581489373`.",
                "description_kind": "plain",
                "computed": true
              },
              "year": {
                "type": "number",
                "description": "Number year of timestamp.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Manages a rotating time resource, which keeps a rotating UTC timestamp stored in the Terraform state and proposes resource recreation when the locally sourced current time is beyond the rotation time. This rotation only occurs when Terraform is executed, meaning there will be drift between the rotation timestamp and actual rotation. The new rotation timestamp offset includes this drift. This prevents perpetual differences caused by using the [`timestamp()` function](https://www.terraform.io/docs/configuration/functions/timestamp.html) by only forcing a new value on the set cadence.",
            "description_kind": "plain"
          }
        },
        "time_sleep": {
          "version": 0,
          "block": {
            "attributes": {
              "create_duration": {
                "type": "string",
                "description": "[Time duration](https://golang.org/pkg/time/#ParseDuration) to delay resource creation. For example, `30s` for 30 seconds or `5m` for 5 minutes. Updating this value by itself will not trigger a delay.",
                "description_kind": "plain",
                "optional": true
              },
              "destroy_duration": {
                "type": "string",
                "description": "[Time duration](https://golang.org/pkg/time/#ParseDuration) to delay resource destroy. For example, `30s` for 30 seconds or `5m` for 5 minutes. Updating this value by itself will not trigger a delay. This value or any updates to it must be successfully applied into the Terraform state before destroying this resource to take effect.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "RFC3339 format of the offset timestamp, e.g. `2020-02-12T06:36:13Z`.",
                "description_kind": "plain",
                "computed": true
              },
              "triggers": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "(Optional) Arbitrary map of values that, when changed, will run any creation or destroy delays again. See [the main provider documentation](../index.md) for more information.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Manages a resource that delays creation and/or destruction, typically for further resources. This prevents cross-platform compatibility and destroy-time issues with using the [`local-exec` provisioner](https://www.terraform.io/docs/provisioners/local-exec.html).",
            "description_kind": "plain"
          }
        },
        "time_static": {
          "version": 0,
          "block": {
            "attributes": {
              "day": {
                "type": "number",
                "description": "Number day of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "hour": {
                "type": "number",
                "description": "Number hour of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "RFC3339 format of the offset timestamp, e.g. `2020-02-12T06:36:13Z`.",
                "description_kind": "plain",
                "computed": true
              },
              "minute": {
                "type": "number",
                "description": "Number minute of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "month": {
                "type": "number",
                "description": "Number month of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "rfc3339": {
                "type": "string",
                "description": "Base timestamp in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (see [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) e.g., `YYYY-MM-DDTHH:MM:SSZ`). Defaults to the current time.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "second": {
                "type": "number",
                "description": "Number second of timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "triggers": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Arbitrary map of values that, when changed, will trigger a new base timestamp value to be saved. See [the main provider documentation](../index.md) for more information.",
                "description_kind": "plain",
                "optional": true
              },
              "unix": {
                "type": "number",
                "description": "Number of seconds since epoch time, e.g. `1581489373`.",
                "description_kind": "plain",
                "computed": true
              },
              "year": {
                "type": "number",
                "description": "Number year of timestamp.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Manages a static time resource, which keeps a locally sourced UTC timestamp stored in the Terraform state. This prevents perpetual differences caused by using the [`timestamp()` function](https://www.terraform.io/docs/configuration/functions/timestamp.html).",
            "description_kind": "plain"
          }
        }
      },
      "functions": {
        "duration_parse": {
          "description": "Given a [Go duration string](https://pkg.go.dev/time#ParseDuration), will parse and return an object representation of that duration.",
          "summary": "Parse a [Go duration string](https://pkg.go.dev/time#ParseDuration) into an object",
          "return_type": [
            "object",
            {
              "hours": "number",
              "microseconds": "number",
              "milliseconds": "number",
              "minutes": "number",
              "nanoseconds": "number",
              "seconds": "number"
            }
          ],
          "parameters": [
            {
              "name": "duration",
              "description": "Go time package duration string to parse",
              "type": "string"
            }
          ]
        },
        "rfc3339_parse": {
          "description": "Given an RFC3339 timestamp string, will parse and return an object representation of that date and time.",
          "summary": "Parse an RFC3339 timestamp string into an object",
          "return_type": [
            "object",
            {
              "day": "number",
              "hour": "number",
              "iso_week": "number",
              "iso_year": "number",
              "minute": "number",
              "month": "number",
              "month_name": "string",
              "second": "number",
              "unix": "number",
              "weekday": "number",
              "weekday_name": "string",
              "year": "number",
              "year_day": "number"
            }
          ],
          "parameters": [
            {
              "name": "timestamp",
              "description": "RFC3339 timestamp string to parse",
              "type": "string"
            }
          ]
        },
        "unix_timestamp_parse": {
          "description": "Given a unix timestamp integer, will parse and return an object representation of that date and time. A unix timestamp is the number of seconds elapsed since January 1, 1970 UTC.",
          "summary": "Parse a unix timestamp integer into an object",
          "return_type": [
            "object",
            {
              "day": "number",
              "hour": "number",
              "iso_week": "number",
              "iso_year": "number",
              "minute": "number",
              "month": "number",
              "month_name": "string",
              "rfc3339": "string",
              "second": "number",
              "weekday": "number",
              "weekday_name": "string",
              "year": "number",
              "year_day": "number"
            }
          ],
          "parameters": [
            {
              "name": "unix_timestamp",
              "description": "Unix Timestamp integer to parse",
              "type": "number"
            }
          ]
        }
      }
    },
    "registry.terraform.io/hashicorp/tls": {
      "provider": {
        "version": 0,
        "block": {
          "block_types": {
            "proxy": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "from_env": {
                    "type": "bool",
                    "description": "When `true` the provider will discover the proxy configuration from environment variables. This is based upon [`http.ProxyFromEnvironment`](https://pkg.go.dev/net/http#ProxyFromEnvironment) and it supports the same environment variables (default: `true`).",
                    "description_kind": "markdown",
                    "optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Password used for Basic authentication against the Proxy.",
                    "description_kind": "markdown",
                    "optional": true,
                    "sensitive": true
                  },
                  "url": {
                    "type": "string",
                    "description": "URL used to connect to the Proxy. Accepted schemes are: `http`, `https`, `socks5`. ",
                    "description_kind": "markdown",
                    "optional": true
                  },
                  "username": {
                    "type": "string",
                    "description": "Username (or Token) used for Basic authentication against the Proxy.",
                    "description_kind": "markdown",
                    "optional": true
                  }
                },
                "description": "Proxy used by resources and data sources that connect to external endpoints.",
                "description_kind": "markdown"
              }
            }
          },
          "description": "Provider configuration",
          "description_kind": "markdown"
        }
      },
      "resource_schemas": {
        "tls_cert_request": {
          "version": 0,
          "block": {
            "attributes": {
              "cert_request_pem": {
                "type": "string",
                "description": "The certificate request data in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format. **NOTE**: the [underlying](https://pkg.go.dev/encoding/pem#Encode) [libraries](https://pkg.go.dev/golang.org/x/crypto/ssh#MarshalAuthorizedKey) that generate this value append a `\\n` at the end of the PEM. In case this disrupts your use case, we recommend using [`trimspace()`](https://www.terraform.io/language/functions/trimspace).",
                "description_kind": "plain",
                "computed": true
              },
              "dns_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of DNS names for which a certificate is being requested (i.e. certificate subjects).",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for this resource: hexadecimal representation of the SHA1 checksum of the resource.",
                "description_kind": "plain",
                "computed": true
              },
              "ip_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of IP addresses for which a certificate is being requested (i.e. certificate subjects).",
                "description_kind": "plain",
                "optional": true
              },
              "key_algorithm": {
                "type": "string",
                "description": "Name of the algorithm used when generating the private key provided in `private_key_pem`. ",
                "description_kind": "plain",
                "computed": true
              },
              "private_key_pem": {
                "type": "string",
                "description": "Private key in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format, that the certificate will belong to. This can be read from a separate file using the [`file`](https://www.terraform.io/language/functions/file) interpolation function.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "uris": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of URIs for which a certificate is being requested (i.e. certificate subjects).",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "subject": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "common_name": {
                      "type": "string",
                      "description": "Distinguished name: `CN`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "country": {
                      "type": "string",
                      "description": "Distinguished name: `C`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "email_address": {
                      "type": "string",
                      "description": "ASN.1 Object Identifier (OID): `1.2.840.113549.1.9.1`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "locality": {
                      "type": "string",
                      "description": "Distinguished name: `L`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "organization": {
                      "type": "string",
                      "description": "Distinguished name: `O`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "organizational_unit": {
                      "type": "string",
                      "description": "Distinguished name: `OU`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "Distinguished name: `PC`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "province": {
                      "type": "string",
                      "description": "Distinguished name: `ST`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Distinguished name: `SERIALNUMBER`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "street_address": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Distinguished name: `STREET`",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "The subject for which a certificate is being requested. The acceptable arguments are all optional and their naming is based upon [Issuer Distinguished Names (RFC5280)](https://tools.ietf.org/html/rfc5280#section-4.1.2.4) section.",
                  "description_kind": "markdown"
                }
              }
            },
            "description": "Creates a Certificate Signing Request (CSR) in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.\n\nPEM is the typical format used to request a certificate from a Certificate Authority (CA).\n\nThis resource is intended to be used in conjunction with a Terraform provider for a particular certificate authority in order to provision a new certificate.",
            "description_kind": "markdown"
          }
        },
        "tls_locally_signed_cert": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_uses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of key usages allowed for the issued certificate. Values are defined in [RFC 5280](https://datatracker.ietf.org/doc/html/rfc5280) and combine flags defined by both [Key Usages](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.3) and [Extended Key Usages](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.12). Accepted values: `any_extended`, `cert_signing`, `client_auth`, `code_signing`, `content_commitment`, `crl_signing`, `data_encipherment`, `decipher_only`, `digital_signature`, `email_protection`, `encipher_only`, `ipsec_end_system`, `ipsec_tunnel`, `ipsec_user`, `key_agreement`, `key_encipherment`, `microsoft_commercial_code_signing`, `microsoft_kernel_code_signing`, `microsoft_server_gated_crypto`, `netscape_server_gated_crypto`, `ocsp_signing`, `server_auth`, `timestamping`.",
                "description_kind": "plain",
                "required": true
              },
              "ca_cert_pem": {
                "type": "string",
                "description": "Certificate data of the Certificate Authority (CA) in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.",
                "description_kind": "plain",
                "required": true
              },
              "ca_key_algorithm": {
                "type": "string",
                "description": "Name of the algorithm used when generating the private key provided in `ca_private_key_pem`. ",
                "description_kind": "plain",
                "computed": true
              },
              "ca_private_key_pem": {
                "type": "string",
                "description": "Private key of the Certificate Authority (CA) used to sign the certificate, in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "cert_pem": {
                "type": "string",
                "description": "Certificate data in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format. **NOTE**: the [underlying](https://pkg.go.dev/encoding/pem#Encode) [libraries](https://pkg.go.dev/golang.org/x/crypto/ssh#MarshalAuthorizedKey) that generate this value append a `\\n` at the end of the PEM. In case this disrupts your use case, we recommend using [`trimspace()`](https://www.terraform.io/language/functions/trimspace).",
                "description_kind": "plain",
                "computed": true
              },
              "cert_request_pem": {
                "type": "string",
                "description": "Certificate request data in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.",
                "description_kind": "plain",
                "required": true
              },
              "early_renewal_hours": {
                "type": "number",
                "description": "The resource will consider the certificate to have expired the given number of hours before its actual expiry time. This can be useful to deploy an updated certificate in advance of the expiration of the current certificate. However, the old certificate remains valid until its true expiration time, since this resource does not (and cannot) support certificate revocation. Also, this advance update can only be performed should the Terraform configuration be applied during the early renewal period. (default: `0`)",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for this resource: the certificate serial number.",
                "description_kind": "plain",
                "computed": true
              },
              "is_ca_certificate": {
                "type": "bool",
                "description": "Is the generated certificate representing a Certificate Authority (CA) (default: `false`).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ready_for_renewal": {
                "type": "bool",
                "description": "Is the certificate either expired (i.e. beyond the `validity_period_hours`) or ready for an early renewal (i.e. within the `early_renewal_hours`)?",
                "description_kind": "plain",
                "computed": true
              },
              "set_subject_key_id": {
                "type": "bool",
                "description": "Should the generated certificate include a [subject key identifier](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.2) (default: `false`).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "validity_end_time": {
                "type": "string",
                "description": "The time until which the certificate is invalid, expressed as an [RFC3339](https://tools.ietf.org/html/rfc3339) timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "validity_period_hours": {
                "type": "number",
                "description": "Number of hours, after initial issuing, that the certificate will remain valid for.",
                "description_kind": "plain",
                "required": true
              },
              "validity_start_time": {
                "type": "string",
                "description": "The time after which the certificate is valid, expressed as an [RFC3339](https://tools.ietf.org/html/rfc3339) timestamp.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Creates a TLS certificate in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format using a Certificate Signing Request (CSR) and signs it with a provided (local) Certificate Authority (CA).",
            "description_kind": "markdown"
          }
        },
        "tls_private_key": {
          "version": 1,
          "block": {
            "attributes": {
              "algorithm": {
                "type": "string",
                "description": "Name of the algorithm to use when generating the private key. Currently-supported values are: `RSA`, `ECDSA`, `ED25519`. ",
                "description_kind": "plain",
                "required": true
              },
              "ecdsa_curve": {
                "type": "string",
                "description": "When `algorithm` is `ECDSA`, the name of the elliptic curve to use. Currently-supported values are: `P224`, `P256`, `P384`, `P521`. (default: `P224`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for this resource: hexadecimal representation of the SHA1 checksum of the resource.",
                "description_kind": "markdown",
                "computed": true
              },
              "private_key_openssh": {
                "type": "string",
                "description": "Private key data in [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) format.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "private_key_pem": {
                "type": "string",
                "description": "Private key data in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "private_key_pem_pkcs8": {
                "type": "string",
                "description": "Private key data in [PKCS#8 PEM (RFC 5208)](https://datatracker.ietf.org/doc/html/rfc5208) format.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "public_key_fingerprint_md5": {
                "type": "string",
                "description": "The fingerprint of the public key data in OpenSSH MD5 hash format, e.g. `aa:bb:cc:...`. Only available if the selected private key format is compatible, similarly to `public_key_openssh` and the [ECDSA P224 limitations](../../docs#limitations).",
                "description_kind": "markdown",
                "computed": true
              },
              "public_key_fingerprint_sha256": {
                "type": "string",
                "description": "The fingerprint of the public key data in OpenSSH SHA256 hash format, e.g. `SHA256:...`. Only available if the selected private key format is compatible, similarly to `public_key_openssh` and the [ECDSA P224 limitations](../../docs#limitations).",
                "description_kind": "markdown",
                "computed": true
              },
              "public_key_openssh": {
                "type": "string",
                "description": " The public key data in [\"Authorized Keys\"](https://www.ssh.com/academy/ssh/authorized_keys/openssh#format-of-the-authorized-keys-file) format. This is not populated for `ECDSA` with curve `P224`, as it is [not supported](../../docs#limitations). **NOTE**: the [underlying](https://pkg.go.dev/encoding/pem#Encode) [libraries](https://pkg.go.dev/golang.org/x/crypto/ssh#MarshalAuthorizedKey) that generate this value append a `\\n` at the end of the PEM. In case this disrupts your use case, we recommend using [`trimspace()`](https://www.terraform.io/language/functions/trimspace).",
                "description_kind": "markdown",
                "computed": true
              },
              "public_key_pem": {
                "type": "string",
                "description": "Public key data in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format. **NOTE**: the [underlying](https://pkg.go.dev/encoding/pem#Encode) [libraries](https://pkg.go.dev/golang.org/x/crypto/ssh#MarshalAuthorizedKey) that generate this value append a `\\n` at the end of the PEM. In case this disrupts your use case, we recommend using [`trimspace()`](https://www.terraform.io/language/functions/trimspace).",
                "description_kind": "markdown",
                "computed": true
              },
              "rsa_bits": {
                "type": "number",
                "description": "When `algorithm` is `RSA`, the size of the generated RSA key, in bits (default: `2048`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "description": "-> If the managed resource supports a write-only attribute for the private key (first introduced in Terraform 1.11), then the ephemeral variant of [`tls_private_key`](https://registry.terraform.io/providers/hashicorp/tls/latest/docs/ephemeral-resources/private_key) should be used, when possible, to avoid storing the private key data in the plan or state file.\n\nCreates a PEM (and OpenSSH) formatted private key.\n\nGenerates a secure private key and encodes it in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) and [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) formats. This resource is primarily intended for easily bootstrapping throwaway development environments.",
            "description_kind": "markdown"
          }
        },
        "tls_self_signed_cert": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_uses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of key usages allowed for the issued certificate. Values are defined in [RFC 5280](https://datatracker.ietf.org/doc/html/rfc5280) and combine flags defined by both [Key Usages](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.3) and [Extended Key Usages](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.12). Accepted values: `any_extended`, `cert_signing`, `client_auth`, `code_signing`, `content_commitment`, `crl_signing`, `data_encipherment`, `decipher_only`, `digital_signature`, `email_protection`, `encipher_only`, `ipsec_end_system`, `ipsec_tunnel`, `ipsec_user`, `key_agreement`, `key_encipherment`, `microsoft_commercial_code_signing`, `microsoft_kernel_code_signing`, `microsoft_server_gated_crypto`, `netscape_server_gated_crypto`, `ocsp_signing`, `server_auth`, `timestamping`.",
                "description_kind": "plain",
                "required": true
              },
              "cert_pem": {
                "type": "string",
                "description": "Certificate data in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format. **NOTE**: the [underlying](https://pkg.go.dev/encoding/pem#Encode) [libraries](https://pkg.go.dev/golang.org/x/crypto/ssh#MarshalAuthorizedKey) that generate this value append a `\\n` at the end of the PEM. In case this disrupts your use case, we recommend using [`trimspace()`](https://www.terraform.io/language/functions/trimspace).",
                "description_kind": "plain",
                "computed": true
              },
              "dns_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of DNS names for which a certificate is being requested (i.e. certificate subjects).",
                "description_kind": "plain",
                "optional": true
              },
              "early_renewal_hours": {
                "type": "number",
                "description": "The resource will consider the certificate to have expired the given number of hours before its actual expiry time. This can be useful to deploy an updated certificate in advance of the expiration of the current certificate. However, the old certificate remains valid until its true expiration time, since this resource does not (and cannot) support certificate revocation. Also, this advance update can only be performed should the Terraform configuration be applied during the early renewal period. (default: `0`)",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for this resource: the certificate serial number.",
                "description_kind": "plain",
                "computed": true
              },
              "ip_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of IP addresses for which a certificate is being requested (i.e. certificate subjects).",
                "description_kind": "plain",
                "optional": true
              },
              "is_ca_certificate": {
                "type": "bool",
                "description": "Is the generated certificate representing a Certificate Authority (CA) (default: `false`).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_algorithm": {
                "type": "string",
                "description": "Name of the algorithm used when generating the private key provided in `private_key_pem`. ",
                "description_kind": "plain",
                "computed": true
              },
              "private_key_pem": {
                "type": "string",
                "description": "Private key in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format, that the certificate will belong to. This can be read from a separate file using the [`file`](https://www.terraform.io/language/functions/file) interpolation function. ",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "ready_for_renewal": {
                "type": "bool",
                "description": "Is the certificate either expired (i.e. beyond the `validity_period_hours`) or ready for an early renewal (i.e. within the `early_renewal_hours`)?",
                "description_kind": "plain",
                "computed": true
              },
              "set_authority_key_id": {
                "type": "bool",
                "description": "Should the generated certificate include an [authority key identifier](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.1): for self-signed certificates this is the same value as the [subject key identifier](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.2) (default: `false`).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "set_subject_key_id": {
                "type": "bool",
                "description": "Should the generated certificate include a [subject key identifier](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.2) (default: `false`).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "uris": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of URIs for which a certificate is being requested (i.e. certificate subjects).",
                "description_kind": "plain",
                "optional": true
              },
              "validity_end_time": {
                "type": "string",
                "description": "The time until which the certificate is invalid, expressed as an [RFC3339](https://tools.ietf.org/html/rfc3339) timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "validity_period_hours": {
                "type": "number",
                "description": "Number of hours, after initial issuing, that the certificate will remain valid for.",
                "description_kind": "plain",
                "required": true
              },
              "validity_start_time": {
                "type": "string",
                "description": "The time after which the certificate is valid, expressed as an [RFC3339](https://tools.ietf.org/html/rfc3339) timestamp.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "block_types": {
              "subject": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "common_name": {
                      "type": "string",
                      "description": "Distinguished name: `CN`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "country": {
                      "type": "string",
                      "description": "Distinguished name: `C`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "email_address": {
                      "type": "string",
                      "description": "ASN.1 Object Identifier (OID): `1.2.840.113549.1.9.1`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "locality": {
                      "type": "string",
                      "description": "Distinguished name: `L`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "organization": {
                      "type": "string",
                      "description": "Distinguished name: `O`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "organizational_unit": {
                      "type": "string",
                      "description": "Distinguished name: `OU`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "Distinguished name: `PC`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "province": {
                      "type": "string",
                      "description": "Distinguished name: `ST`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Distinguished name: `SERIALNUMBER`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "street_address": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Distinguished name: `STREET`",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "The subject for which a certificate is being requested. The acceptable arguments are all optional and their naming is based upon [Issuer Distinguished Names (RFC5280)](https://tools.ietf.org/html/rfc5280#section-4.1.2.4) section.",
                  "description_kind": "markdown"
                }
              }
            },
            "description": "Creates a **self-signed** TLS certificate in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.",
            "description_kind": "markdown"
          }
        }
      },
      "data_source_schemas": {
        "tls_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "certificates": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cert_pem": "string",
                      "is_ca": "bool",
                      "issuer": "string",
                      "not_after": "string",
                      "not_before": "string",
                      "public_key_algorithm": "string",
                      "serial_number": "string",
                      "sha1_fingerprint": "string",
                      "signature_algorithm": "string",
                      "subject": "string",
                      "version": "number"
                    }
                  ]
                ],
                "description": "The certificates protecting the site, with the root of the chain first.",
                "description_kind": "markdown",
                "computed": true
              },
              "content": {
                "type": "string",
                "description": "The content of the certificate in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.",
                "description_kind": "markdown",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "Unique identifier of this data source: hashing of the certificates in the chain.",
                "description_kind": "markdown",
                "computed": true
              },
              "url": {
                "type": "string",
                "description": "URL of the endpoint to get the certificates from. Accepted schemes are: `https`, `tls`. For scheme `https://` it will use the HTTP protocol and apply the `proxy` configuration of the provider, if set. For scheme `tls://` it will instead use a secure TCP socket.",
                "description_kind": "markdown",
                "optional": true
              },
              "verify_chain": {
                "type": "bool",
                "description": "Whether to verify the certificate chain while parsing it or not (default: `true`).",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "Get information about the TLS certificates securing a host.\n\nUse this data source to get information, such as SHA1 fingerprint or serial number, about the TLS certificates that protects a URL.",
            "description_kind": "markdown"
          }
        },
        "tls_public_key": {
          "version": 0,
          "block": {
            "attributes": {
              "algorithm": {
                "type": "string",
                "description": "The name of the algorithm used by the given private key. Possible values are: `RSA`, `ECDSA`, `ED25519`. ",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for this data source: hexadecimal representation of the SHA1 checksum of the data source.",
                "description_kind": "plain",
                "computed": true
              },
              "private_key_openssh": {
                "type": "string",
                "description": "The private key (in  [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) format) to extract the public key from. This is _mutually exclusive_ with `private_key_pem`. Currently-supported algorithms for keys are: `RSA`, `ECDSA`, `ED25519`. ",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "private_key_pem": {
                "type": "string",
                "description": "The private key (in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format) to extract the public key from. This is _mutually exclusive_ with `private_key_openssh`. Currently-supported algorithms for keys are: `RSA`, `ECDSA`, `ED25519`. ",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "public_key_fingerprint_md5": {
                "type": "string",
                "description": "The fingerprint of the public key data in OpenSSH MD5 hash format, e.g. `aa:bb:cc:...`. Only available if the selected private key format is compatible, as per the rules for `public_key_openssh` and [ECDSA P224 limitations](../../docs#limitations).",
                "description_kind": "plain",
                "computed": true
              },
              "public_key_fingerprint_sha256": {
                "type": "string",
                "description": "The fingerprint of the public key data in OpenSSH SHA256 hash format, e.g. `SHA256:...`. Only available if the selected private key format is compatible, as per the rules for `public_key_openssh` and [ECDSA P224 limitations](../../docs#limitations).",
                "description_kind": "plain",
                "computed": true
              },
              "public_key_openssh": {
                "type": "string",
                "description": "The public key, in  [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) format. This is also known as ['Authorized Keys'](https://www.ssh.com/academy/ssh/authorized_keys/openssh#format-of-the-authorized-keys-file) format. This is not populated for `ECDSA` with curve `P224`, as it is [not supported](../../docs#limitations). **NOTE**: the [underlying](https://pkg.go.dev/encoding/pem#Encode) [libraries](https://pkg.go.dev/golang.org/x/crypto/ssh#MarshalAuthorizedKey) that generate this value append a `\\n` at the end of the PEM. In case this disrupts your use case, we recommend using [`trimspace()`](https://www.terraform.io/language/functions/trimspace).",
                "description_kind": "plain",
                "computed": true
              },
              "public_key_pem": {
                "type": "string",
                "description": "The public key, in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format. **NOTE**: the [underlying](https://pkg.go.dev/encoding/pem#Encode) [libraries](https://pkg.go.dev/golang.org/x/crypto/ssh#MarshalAuthorizedKey) that generate this value append a `\\n` at the end of the PEM. In case this disrupts your use case, we recommend using [`trimspace()`](https://www.terraform.io/language/functions/trimspace).",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Get a public key from a PEM-encoded private key.\n\nUse this data source to get the public key from a [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) or [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) formatted private key, for use in other resources.",
            "description_kind": "markdown"
          }
        }
      },
      "ephemeral_resource_schemas": {
        "tls_private_key": {
          "version": 0,
          "block": {
            "attributes": {
              "algorithm": {
                "type": "string",
                "description": "Name of the algorithm to use when generating the private key. Currently-supported values are: `RSA`, `ECDSA`, `ED25519`. ",
                "description_kind": "plain",
                "required": true
              },
              "ecdsa_curve": {
                "type": "string",
                "description": "When `algorithm` is `ECDSA`, the name of the elliptic curve to use. Currently-supported values are: `P224`, `P256`, `P384`, `P521`. (default: `P224`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "private_key_openssh": {
                "type": "string",
                "description": "Private key data in [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) format.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "private_key_pem": {
                "type": "string",
                "description": "Private key data in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "private_key_pem_pkcs8": {
                "type": "string",
                "description": "Private key data in [PKCS#8 PEM (RFC 5208)](https://datatracker.ietf.org/doc/html/rfc5208) format.",
                "description_kind": "markdown",
                "computed": true,
                "sensitive": true
              },
              "public_key_fingerprint_md5": {
                "type": "string",
                "description": "The fingerprint of the public key data in OpenSSH MD5 hash format, e.g. `aa:bb:cc:...`. Only available if the selected private key format is compatible, similarly to `public_key_openssh` and the [ECDSA P224 limitations](../../docs#limitations).",
                "description_kind": "markdown",
                "computed": true
              },
              "public_key_fingerprint_sha256": {
                "type": "string",
                "description": "The fingerprint of the public key data in OpenSSH SHA256 hash format, e.g. `SHA256:...`. Only available if the selected private key format is compatible, similarly to `public_key_openssh` and the [ECDSA P224 limitations](../../docs#limitations).",
                "description_kind": "markdown",
                "computed": true
              },
              "public_key_openssh": {
                "type": "string",
                "description": " The public key data in [\"Authorized Keys\"](https://www.ssh.com/academy/ssh/authorized_keys/openssh#format-of-the-authorized-keys-file) format. This is not populated for `ECDSA` with curve `P224`, as it is [not supported](../../docs#limitations). **NOTE**: the [underlying](https://pkg.go.dev/encoding/pem#Encode) [libraries](https://pkg.go.dev/golang.org/x/crypto/ssh#MarshalAuthorizedKey) that generate this value append a `\\n` at the end of the PEM. In case this disrupts your use case, we recommend using [`trimspace()`](https://www.terraform.io/language/functions/trimspace).",
                "description_kind": "markdown",
                "computed": true
              },
              "public_key_pem": {
                "type": "string",
                "description": "Public key data in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format. **NOTE**: the [underlying](https://pkg.go.dev/encoding/pem#Encode) [libraries](https://pkg.go.dev/golang.org/x/crypto/ssh#MarshalAuthorizedKey) that generate this value append a `\\n` at the end of the PEM. In case this disrupts your use case, we recommend using [`trimspace()`](https://www.terraform.io/language/functions/trimspace).",
                "description_kind": "markdown",
                "computed": true
              },
              "rsa_bits": {
                "type": "number",
                "description": "When `algorithm` is `RSA`, the size of the generated RSA key, in bits (default: `2048`).",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "description": "-> If the managed resource doesn't have a write-only argument available for the private key (first introduced in Terraform 1.11), then the private key can only be created with the managed resource variant of [`tls_private_key`](https://registry.terraform.io/providers/hashicorp/tls/latest/docs/resources/private_key).\n\nCreates a PEM (and OpenSSH) formatted private key.\n\nGenerates a secure private key and encodes it in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) and [OpenSSH PEM (RFC 4716)](https://datatracker.ietf.org/doc/html/rfc4716) formats. \n\nThe primary use-case for generating an ephemeral private key is to be used in combination with a write-only argument in a managed resource, which will avoid Terraform storing the private key data in the plan or state file.",
            "description_kind": "markdown"
          }
        }
      }
    },
    "registry.terraform.io/hashicorp/vault": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "add_address_to_env": {
              "type": "string",
              "description": "If true, adds the value of the `address` argument to the Terraform process environment.",
              "description_kind": "plain",
              "optional": true
            },
            "address": {
              "type": "string",
              "description": "URL of the root of the target Vault server.",
              "description_kind": "plain",
              "optional": true
            },
            "ca_cert_dir": {
              "type": "string",
              "description": "Path to directory containing CA certificate files to validate the server's certificate.",
              "description_kind": "plain",
              "optional": true
            },
            "ca_cert_file": {
              "type": "string",
              "description": "Path to a CA certificate file to validate the server's certificate.",
              "description_kind": "plain",
              "optional": true
            },
            "max_lease_ttl_seconds": {
              "type": "number",
              "description": "Maximum TTL for secret leases requested by this provider.",
              "description_kind": "plain",
              "optional": true
            },
            "max_retries": {
              "type": "number",
              "description": "Maximum number of retries when a 5xx error code is encountered.",
              "description_kind": "plain",
              "optional": true
            },
            "max_retries_ccc": {
              "type": "number",
              "description": "Maximum number of retries for Client Controlled Consistency related operations",
              "description_kind": "plain",
              "optional": true
            },
            "namespace": {
              "type": "string",
              "description": "The namespace to use. Available only for Vault Enterprise.",
              "description_kind": "plain",
              "optional": true
            },
            "set_namespace_from_token": {
              "type": "bool",
              "description": "In the case where the Vault token is for a specific namespace and the provider namespace is not configured, use the token namespace as the root namespace for all resources.",
              "description_kind": "plain",
              "optional": true
            },
            "skip_child_token": {
              "type": "bool",
              "description": "Set this to true to prevent the creation of ephemeral child token used by this provider.",
              "description_kind": "plain",
              "optional": true
            },
            "skip_get_vault_version": {
              "type": "bool",
              "description": "Skip the dynamic fetching of the Vault server version.",
              "description_kind": "plain",
              "optional": true
            },
            "skip_tls_verify": {
              "type": "bool",
              "description": "Set this to true only if the target Vault server is an insecure development instance.",
              "description_kind": "plain",
              "optional": true
            },
            "tls_server_name": {
              "type": "string",
              "description": "Name to use as the SNI host when connecting via TLS.",
              "description_kind": "plain",
              "optional": true
            },
            "token": {
              "type": "string",
              "description": "Token to use to authenticate to Vault.",
              "description_kind": "plain",
              "optional": true
            },
            "token_name": {
              "type": "string",
              "description": "Token name to use for creating the Vault child token.",
              "description_kind": "plain",
              "optional": true
            },
            "vault_version_override": {
              "type": "string",
              "description": "Override the Vault server version, which is normally determined dynamically from the target Vault server",
              "description_kind": "plain",
              "optional": true
            }
          },
          "block_types": {
            "auth_login": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "method": {
                    "type": "string",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "parameters": {
                    "type": [
                      "map",
                      "string"
                    ],
                    "description_kind": "plain",
                    "optional": true,
                    "sensitive": true
                  },
                  "path": {
                    "type": "string",
                    "description_kind": "plain",
                    "required": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault with an existing auth method using auth/<mount>/login",
                "description_kind": "plain"
              }
            },
            "auth_login_aws": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "aws_access_key_id": {
                    "type": "string",
                    "description": "The AWS access key ID.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_iam_endpoint": {
                    "type": "string",
                    "description": "The IAM endpoint URL.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_profile": {
                    "type": "string",
                    "description": "The name of the AWS profile.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_region": {
                    "type": "string",
                    "description": "The AWS region.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_role_arn": {
                    "type": "string",
                    "description": "The ARN of the AWS Role to assume.Used during STS AssumeRole",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_role_session_name": {
                    "type": "string",
                    "description": "Specifies the name to attach to the AWS role session. Used during STS AssumeRole",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_secret_access_key": {
                    "type": "string",
                    "description": "The AWS secret access key.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_session_token": {
                    "type": "string",
                    "description": "The AWS session token.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_shared_credentials_file": {
                    "type": "string",
                    "description": "Path to the AWS shared credentials file.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_sts_endpoint": {
                    "type": "string",
                    "description": "The STS endpoint URL.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "aws_web_identity_token_file": {
                    "type": "string",
                    "description": "Path to the file containing an OAuth 2.0 access token or OpenID Connect ID token.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "header_value": {
                    "type": "string",
                    "description": "The Vault header value to include in the STS signing request.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "role": {
                    "type": "string",
                    "description": "The Vault role to use when logging into Vault.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the AWS method",
                "description_kind": "plain"
              }
            },
            "auth_login_azure": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "client_id": {
                    "type": "string",
                    "description": "The identity's client ID.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "jwt": {
                    "type": "string",
                    "description": "A signed JSON Web Token. If not specified on will be created automatically",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "resource_group_name": {
                    "type": "string",
                    "description": "The resource group for the machine that generated the MSI token. This information can be obtained through instance metadata.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "role": {
                    "type": "string",
                    "description": "Name of the login role.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "scope": {
                    "type": "string",
                    "description": "The scopes to include in the token request.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "subscription_id": {
                    "type": "string",
                    "description": "The subscription ID for the machine that generated the MSI token. This information can be obtained through instance metadata.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "tenant_id": {
                    "type": "string",
                    "description": "Provides the tenant ID to use in a multi-tenant authentication scenario.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "vm_name": {
                    "type": "string",
                    "description": "The virtual machine name for the machine that generated the MSI token. This information can be obtained through instance metadata.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "vmss_name": {
                    "type": "string",
                    "description": "The virtual machine scale set name for the machine that generated the MSI token. This information can be obtained through instance metadata.",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the azure method",
                "description_kind": "plain"
              }
            },
            "auth_login_cert": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "cert_file": {
                    "type": "string",
                    "description": "Path to a file containing the client certificate.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "key_file": {
                    "type": "string",
                    "description": "Path to a file containing the private key that the certificate was issued for.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the certificate's role",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the cert method",
                "description_kind": "plain"
              }
            },
            "auth_login_gcp": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "credentials": {
                    "type": "string",
                    "description": "Path to the Google Cloud credentials file.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "jwt": {
                    "type": "string",
                    "description": "A signed JSON Web Token.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "role": {
                    "type": "string",
                    "description": "Name of the login role.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "service_account": {
                    "type": "string",
                    "description": "IAM service account.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the gcp method",
                "description_kind": "plain"
              }
            },
            "auth_login_jwt": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "jwt": {
                    "type": "string",
                    "description": "A signed JSON Web Token.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "role": {
                    "type": "string",
                    "description": "Name of the login role.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the jwt method",
                "description_kind": "plain"
              }
            },
            "auth_login_kerberos": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "disable_fast_negotiation": {
                    "type": "bool",
                    "description": "Disable the Kerberos FAST negotiation.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "keytab_path": {
                    "type": "string",
                    "description": "The Kerberos keytab file containing the entry of the login entity.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "krb5conf_path": {
                    "type": "string",
                    "description": "A valid Kerberos configuration file e.g. /etc/krb5.conf.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "realm": {
                    "type": "string",
                    "description": "The Kerberos server's authoritative authentication domain",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "remove_instance_name": {
                    "type": "bool",
                    "description": "Strip the host from the username found in the keytab.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "service": {
                    "type": "string",
                    "description": "The service principle name.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "token": {
                    "type": "string",
                    "description": "Simple and Protected GSSAPI Negotiation Mechanism (SPNEGO) token",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "username": {
                    "type": "string",
                    "description": "The username to login into Kerberos with.",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the kerberos method",
                "description_kind": "plain"
              }
            },
            "auth_login_oci": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "auth_type": {
                    "type": "string",
                    "description": "Authentication type to use when getting OCI credentials.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "role": {
                    "type": "string",
                    "description": "Name of the login role.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the OCI method",
                "description_kind": "plain"
              }
            },
            "auth_login_oidc": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "callback_address": {
                    "type": "string",
                    "description": "The callback address. Must be a valid URI without the path.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "callback_listener_address": {
                    "type": "string",
                    "description": "The callback listener's address. Must be a valid URI without the path.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "role": {
                    "type": "string",
                    "description": "Name of the login role.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the oidc method",
                "description_kind": "plain"
              }
            },
            "auth_login_radius": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "The Radius password for username.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "username": {
                    "type": "string",
                    "description": "The Radius username.",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the radius method",
                "description_kind": "plain"
              }
            },
            "auth_login_token_file": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "filename": {
                    "type": "string",
                    "description": "The name of a file containing a single line that is a valid Vault token",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using ",
                "description_kind": "plain"
              }
            },
            "auth_login_userpass": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "mount": {
                    "type": "string",
                    "description": "The path where the authentication engine is mounted.",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The authentication engine's namespace. Conflicts with use_root_namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Login with password",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "password_file": {
                    "type": "string",
                    "description": "Login with password from a file",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "use_root_namespace": {
                    "type": "bool",
                    "description": "Authenticate to the root Vault namespace. Conflicts with namespace",
                    "description_kind": "plain",
                    "optional": true
                  },
                  "username": {
                    "type": "string",
                    "description": "Login with username",
                    "description_kind": "plain",
                    "optional": true
                  }
                },
                "description": "Login to vault using the userpass method",
                "description_kind": "plain"
              }
            },
            "client_auth": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "cert_file": {
                    "type": "string",
                    "description": "Path to a file containing the client certificate.",
                    "description_kind": "plain",
                    "required": true
                  },
                  "key_file": {
                    "type": "string",
                    "description": "Path to a file containing the private key that the certificate was issued for.",
                    "description_kind": "plain",
                    "required": true
                  }
                },
                "description": "Client authentication credentials.",
                "description_kind": "plain"
              }
            },
            "headers": {
              "nesting_mode": "list",
              "block": {
                "attributes": {
                  "name": {
                    "type": "string",
                    "description": "The header name",
                    "description_kind": "plain",
                    "required": true,
                    "sensitive": true
                  },
                  "value": {
                    "type": "string",
                    "description": "The header value",
                    "description_kind": "plain",
                    "required": true,
                    "sensitive": true
                  }
                },
                "description": "The headers to send with each Vault request.",
                "description_kind": "plain"
              }
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "vault_ad_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "anonymous_group_search": {
                "type": "bool",
                "description": "Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "The mount path for a backend, for example, the path given in \"$ vault auth enable -path=my-ad ad\".",
                "description_kind": "plain",
                "optional": true
              },
              "binddn": {
                "type": "string",
                "description": "Distinguished name of object to bind when performing user and group search.",
                "description_kind": "plain",
                "required": true
              },
              "bindpass": {
                "type": "string",
                "description": "LDAP password for searching for the user DN.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "case_sensitive_names": {
                "type": "bool",
                "description": "If true, case sensitivity will be used when comparing usernames and groups for matching policies.",
                "description_kind": "plain",
                "optional": true
              },
              "certificate": {
                "type": "string",
                "description": "CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded.",
                "description_kind": "plain",
                "optional": true
              },
              "client_tls_cert": {
                "type": "string",
                "description": "Client certificate to provide to the LDAP server, must be x509 PEM encoded.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "client_tls_key": {
                "type": "string",
                "description": "Client certificate key to provide to the LDAP server, must be x509 PEM encoded.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "deny_null_bind": {
                "type": "bool",
                "description": "Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "discoverdn": {
                "type": "bool",
                "description": "Use anonymous bind to discover the bind DN of a user.",
                "description_kind": "plain",
                "optional": true
              },
              "groupattr": {
                "type": "string",
                "description": "LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: \"cn\" or \"memberOf\", etc. Default: cn",
                "description_kind": "plain",
                "optional": true
              },
              "groupdn": {
                "type": "string",
                "description": "LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)",
                "description_kind": "plain",
                "optional": true
              },
              "groupfilter": {
                "type": "string",
                "description": "Go template for querying group membership of user. The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "insecure_tls": {
                "type": "bool",
                "description": "Skip LDAP server SSL Certificate verification - insecure and not recommended for production use.",
                "description_kind": "plain",
                "optional": true
              },
              "last_rotation_tolerance": {
                "type": "number",
                "description": "The number of seconds after a Vault rotation where, if Active Directory shows a later rotation, it should be considered out-of-band.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local": {
                "type": "bool",
                "description": "Mark the secrets engine as local-only. Local engines are not replicated or removed by replication.Tolerance duration to use when checking the last rotation time.",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for secrets in seconds.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_ttl": {
                "type": "number",
                "description": "In seconds, the maximum password time-to-live.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "password_policy": {
                "type": "string",
                "description": "Name of the password policy to use to generate passwords.",
                "description_kind": "plain",
                "optional": true
              },
              "request_timeout": {
                "type": "number",
                "description": "Timeout, in seconds, for the connection when making requests against the server before returning back an error.",
                "description_kind": "plain",
                "optional": true
              },
              "starttls": {
                "type": "bool",
                "description": "Issue a StartTLS command after establishing unencrypted connection.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tls_max_version": {
                "type": "string",
                "description": "Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tls_min_version": {
                "type": "string",
                "description": "Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ttl": {
                "type": "number",
                "description": "In seconds, the default password time-to-live.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "upndomain": {
                "type": "string",
                "description": "Enables userPrincipalDomain login with [username]@UPNDomain.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "url": {
                "type": "string",
                "description": "LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.",
                "description_kind": "plain",
                "optional": true
              },
              "use_pre111_group_cn_behavior": {
                "type": "bool",
                "description": "In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "use_token_groups": {
                "type": "bool",
                "description": "If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.",
                "description_kind": "plain",
                "optional": true
              },
              "userattr": {
                "type": "string",
                "description": "Attribute used for users (default: cn)",
                "description_kind": "plain",
                "optional": true
              },
              "userdn": {
                "type": "string",
                "description": "LDAP domain to use for users (eg: ou=People,dc=example,dc=org)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "vault_ad_secret_library": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The mount path for the AD backend.",
                "description_kind": "plain",
                "required": true
              },
              "disable_check_in_enforcement": {
                "type": "bool",
                "description": "Disable enforcing that service accounts must be checked in by the entity or client token that checked them out.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_ttl": {
                "type": "number",
                "description": "The maximum amount of time, in seconds, a check-out last with renewal before Vault automatically checks it back in.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the set of service accounts.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "service_account_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The names of all the service accounts that can be checked out from this set. These service accounts must already exist in Active Directory.",
                "description_kind": "plain",
                "required": true
              },
              "ttl": {
                "type": "number",
                "description": "The amount of time, in seconds, a single check-out lasts before Vault automatically checks it back in.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "vault_ad_secret_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The mount path for the AD backend.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_vault_rotation": {
                "type": "string",
                "description": "Last time Vault rotated this service account's password.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "password_last_set": {
                "type": "string",
                "description": "Last time Vault set this service account's password.",
                "description_kind": "plain",
                "computed": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "service_account_name": {
                "type": "string",
                "description": "The username/logon name for the service account with which this role will be associated.",
                "description_kind": "plain",
                "required": true
              },
              "ttl": {
                "type": "number",
                "description": "In seconds, the default password time-to-live.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "vault_alicloud_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "arn": {
                "type": "string",
                "description": "The role's arn.",
                "description_kind": "plain",
                "required": true
              },
              "backend": {
                "type": "string",
                "description": "Auth backend.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role. Must correspond with the name of the role reflected in the arn.",
                "description_kind": "plain",
                "required": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_approle_auth_backend_login": {
          "version": 0,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The accessor for the token.",
                "description_kind": "plain",
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "client_token": {
                "type": "string",
                "description": "The token.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lease_duration": {
                "type": "number",
                "description": "How long the token is valid for.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_started": {
                "type": "string",
                "description": "The timestamp the lease started on, as determined by the machine running Terraform.",
                "description_kind": "plain",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with the token.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Policies set on the token.",
                "description_kind": "plain",
                "computed": true
              },
              "renewable": {
                "type": "bool",
                "description": "Whether the token is renewable or not.",
                "description_kind": "plain",
                "computed": true
              },
              "role_id": {
                "type": "string",
                "description": "The RoleID to log in with.",
                "description_kind": "plain",
                "required": true
              },
              "secret_id": {
                "type": "string",
                "description": "The SecretID to log in with.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_approle_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "bind_secret_id": {
                "type": "bool",
                "description": "Whether or not to require secret_id to be present when logging in using this AppRole.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role_id": {
                "type": "string",
                "description": "The RoleID of the role. Autogenerated if not set.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "secret_id_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of CIDR blocks that can log in using the AppRole.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_id_num_uses": {
                "type": "number",
                "description": "Number of times which a particular SecretID can be used to fetch a token from this AppRole, after which the SecretID will expire. Leaving this unset or setting it to 0 will allow unlimited uses.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_id_ttl": {
                "type": "number",
                "description": "Number of seconds a SecretID remains valid for.",
                "description_kind": "plain",
                "optional": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_approle_auth_backend_role_secret_id": {
          "version": 0,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The unique ID used to access this SecretID.",
                "description_kind": "plain",
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "cidr_list": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of CIDR blocks that can log in using the SecretID.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": "string",
                "description": "JSON-encoded secret data to write.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "num_uses": {
                "type": "number",
                "description": "The number of uses for the secret-id.",
                "description_kind": "plain",
                "optional": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "secret_id": {
                "type": "string",
                "description": "The SecretID to be managed. If not specified, Vault auto-generates one.",
                "description_kind": "plain",
                "optional": true,
                "computed": true,
                "sensitive": true
              },
              "ttl": {
                "type": "number",
                "description": "The TTL duration of the SecretID.",
                "description_kind": "plain",
                "optional": true
              },
              "with_wrapped_accessor": {
                "type": "bool",
                "description": "Use the wrapped secret-id accessor as the id of this resource. If false, a fresh secret-id will be regenerated whenever the wrapping token is expired or invalidated through unwrapping.",
                "description_kind": "plain",
                "optional": true
              },
              "wrapping_accessor": {
                "type": "string",
                "description": "The wrapped SecretID accessor.",
                "description_kind": "plain",
                "computed": true
              },
              "wrapping_token": {
                "type": "string",
                "description": "The wrapped SecretID token.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "wrapping_ttl": {
                "type": "string",
                "description": "The TTL duration of the wrapped SecretID.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_audit": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "Human-friendly description of the audit device.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local": {
                "type": "bool",
                "description": "Specifies if the audit device is a local only. Local audit devices are not replicated nor (if a secondary) removed by replication.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Configuration options to pass to the audit device itself.",
                "description_kind": "plain",
                "required": true
              },
              "path": {
                "type": "string",
                "description": "Path in which to enable the audit device.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of the audit device, such as 'file'.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_audit_request_header": {
          "version": 0,
          "block": {
            "attributes": {
              "hmac": {
                "type": "bool",
                "description": "Whether this header's value should be HMAC'd in the audit logs.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the request header to audit.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_auth_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The accessor of the auth backend",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The description of the auth backend",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing identity tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Specifies if the auth method is local only",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "path to mount the backend. This defaults to the type.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tune": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "allowed_response_headers": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_request_keys": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_response_keys": [
                        "list",
                        "string"
                      ],
                      "default_lease_ttl": "string",
                      "listing_visibility": "string",
                      "max_lease_ttl": "string",
                      "passthrough_request_headers": [
                        "list",
                        "string"
                      ],
                      "token_type": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Name of the auth backend",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_auth_backend_cert": {
          "version": 0,
          "block": {
            "attributes": {
              "aws_public_cert": {
                "type": "string",
                "description": "Base64 encoded AWS Public key required to verify PKCS7 signature of the EC2 instance metadata.",
                "description_kind": "plain",
                "required": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "cert_name": {
                "type": "string",
                "description": "Name of the certificate to configure.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "The type of document that can be verified using the certificate. Must be either \"pkcs7\" or \"identity\".",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_auth_backend_client": {
          "version": 0,
          "block": {
            "attributes": {
              "access_key": {
                "type": "string",
                "description": "AWS Access key with permissions to query AWS APIs.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "ec2_endpoint": {
                "type": "string",
                "description": "URL to override the default generated endpoint for making AWS EC2 API calls.",
                "description_kind": "plain",
                "optional": true
              },
              "iam_endpoint": {
                "type": "string",
                "description": "URL to override the default generated endpoint for making AWS IAM API calls.",
                "description_kind": "plain",
                "optional": true
              },
              "iam_server_id_header_value": {
                "type": "string",
                "description": "The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_audience": {
                "type": "string",
                "description": "The audience claim value.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_ttl": {
                "type": "number",
                "description": "The TTL of generated identity tokens in seconds.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_retries": {
                "type": "number",
                "description": "Number of max retries the client should use for recoverable errors.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "description": "Role ARN to assume for plugin identity token federation.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_key": {
                "type": "string",
                "description": "AWS Secret key with permissions to query AWS APIs.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "sts_endpoint": {
                "type": "string",
                "description": "URL to override the default generated endpoint for making AWS STS API calls.",
                "description_kind": "plain",
                "optional": true
              },
              "sts_region": {
                "type": "string",
                "description": "Region to override the default region for making AWS STS API calls.",
                "description_kind": "plain",
                "optional": true
              },
              "use_sts_region_from_client": {
                "type": "bool",
                "description": "If set, will override sts_region and use the region from the client request's header",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_auth_backend_config_identity": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "ec2_alias": {
                "type": "string",
                "description": "Configures how to generate the identity alias when using the ec2 auth method.",
                "description_kind": "plain",
                "optional": true
              },
              "ec2_metadata": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The metadata to include on the token returned by the login endpoint.",
                "description_kind": "plain",
                "optional": true
              },
              "iam_alias": {
                "type": "string",
                "description": "How to generate the identity alias when using the iam auth method.",
                "description_kind": "plain",
                "optional": true
              },
              "iam_metadata": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The metadata to include on the token returned by the login endpoint.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_auth_backend_identity_whitelist": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_periodic_tidy": {
                "type": "bool",
                "description": "If true, disables the periodic tidying of the identiy whitelist entries.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "safety_buffer": {
                "type": "number",
                "description": "The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_auth_backend_login": {
          "version": 0,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The accessor returned from Vault for this token.",
                "description_kind": "plain",
                "computed": true
              },
              "auth_type": {
                "type": "string",
                "description": "The auth method used to generate this token.",
                "description_kind": "plain",
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "AWS Auth Backend to read the token from.",
                "description_kind": "plain",
                "optional": true
              },
              "client_token": {
                "type": "string",
                "description": "The token returned by Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "iam_http_request_method": {
                "type": "string",
                "description": "The HTTP method used in the signed request.",
                "description_kind": "plain",
                "optional": true
              },
              "iam_request_body": {
                "type": "string",
                "description": "The Base64-encoded body of the signed request.",
                "description_kind": "plain",
                "optional": true
              },
              "iam_request_headers": {
                "type": "string",
                "description": "The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers.",
                "description_kind": "plain",
                "optional": true
              },
              "iam_request_url": {
                "type": "string",
                "description": "The Base64-encoded HTTP URL used in the signed request.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity": {
                "type": "string",
                "description": "Base64-encoded EC2 instance identity document to authenticate with.",
                "description_kind": "plain",
                "optional": true
              },
              "lease_duration": {
                "type": "number",
                "description": "Lease duration in seconds relative to the time in lease_start_time.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_start_time": {
                "type": "string",
                "description": "Time at which the lease was read, using the clock of the system where Terraform was running",
                "description_kind": "plain",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The metadata reported by the Vault server.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "nonce": {
                "type": "string",
                "description": "The nonce to be used for subsequent login requests.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "pkcs7": {
                "type": "string",
                "description": "PKCS7 signature of the identity document to authenticate with, with all newline characters removed.",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The policies assigned to this token.",
                "description_kind": "plain",
                "computed": true
              },
              "renewable": {
                "type": "bool",
                "description": "True if the duration of this lease can be extended through renewal.",
                "description_kind": "plain",
                "computed": true
              },
              "role": {
                "type": "string",
                "description": "AWS Auth Role to read the token from.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "signature": {
                "type": "string",
                "description": "Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_instance_migration": {
                "type": "bool",
                "description": "When true, allows migration of the underlying instance where the client resides. Use with caution.",
                "description_kind": "plain",
                "optional": true
              },
              "auth_type": {
                "type": "string",
                "description": "The auth type permitted for this role.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_account_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Only EC2 instances with this account ID in their identity document will be permitted to log in.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_ami_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Only EC2 instances using this AMI ID will be permitted to log in.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_ec2_instance_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Only EC2 instances that match this instance ID will be permitted to log in.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_iam_instance_profile_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Only EC2 instances associated with an IAM instance profile ARN that matches this value will be permitted to log in.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_iam_principal_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The IAM principal that must be authenticated using the iam auth method.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_iam_role_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Only EC2 instances that match this IAM role ARN will be permitted to log in.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_regions": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Only EC2 instances in this region will be permitted to log in.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_subnet_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Only EC2 instances associated with this subnet ID will be permitted to log in.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_vpc_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Only EC2 instances associated with this VPC ID will be permitted to log in.",
                "description_kind": "plain",
                "optional": true
              },
              "disallow_reauthentication": {
                "type": "bool",
                "description": "When true, only allows a single token to be granted per instance ID.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inferred_aws_region": {
                "type": "string",
                "description": "The region to search for the inferred entities in.",
                "description_kind": "plain",
                "optional": true
              },
              "inferred_entity_type": {
                "type": "string",
                "description": "The type of inferencing Vault should do.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "resolve_aws_unique_ids": {
                "type": "bool",
                "description": "Whether or not Vault should resolve the bound_iam_principal_arn to an AWS Unique ID. When true, deleting a principal and recreating it with the same name won't automatically grant the new principal the same roles in Vault that the old principal had.",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "role_id": {
                "type": "string",
                "description": "The Vault generated role ID.",
                "description_kind": "plain",
                "computed": true
              },
              "role_tag": {
                "type": "string",
                "description": "The key of the tag on EC2 instance to use for role tags.",
                "description_kind": "plain",
                "optional": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_auth_backend_role_tag": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_instance_migration": {
                "type": "bool",
                "description": "Allows migration of the underlying instance where the client resides.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "AWS auth backend to read tags from.",
                "description_kind": "plain",
                "optional": true
              },
              "disallow_reauthentication": {
                "type": "bool",
                "description": "Only allow a single token to be granted per instance ID.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_id": {
                "type": "string",
                "description": "Instance ID for which this tag is intended. The created tag can only be used by the instance with the given ID.",
                "description_kind": "plain",
                "optional": true
              },
              "max_ttl": {
                "type": "string",
                "description": "The maximum allowed lifetime of tokens issued using this role.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Policies to be associated with the tag.",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "tag_key": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "tag_value": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_auth_backend_roletag_blacklist": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "required": true
              },
              "disable_periodic_tidy": {
                "type": "bool",
                "description": "If true, disables the periodic tidying of the roletag blacklist entries.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "safety_buffer": {
                "type": "number",
                "description": "The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_auth_backend_sts_role": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "description": "AWS account ID to be associated with STS role.",
                "description_kind": "plain",
                "required": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "external_id": {
                "type": "string",
                "description": "External ID expected by the STS role.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "sts_role": {
                "type": "string",
                "description": "AWS ARN for STS role to be assumed when interacting with the account specified.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "access_key": {
                "type": "string",
                "description": "The AWS Access Key ID to use when generating new credentials.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "iam_endpoint": {
                "type": "string",
                "description": "Specifies a custom HTTP IAM endpoint to use.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_audience": {
                "type": "string",
                "description": "The audience claim value.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing identity tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_ttl": {
                "type": "number",
                "description": "The TTL of generated identity tokens in seconds.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Specifies if the secret backend is local only",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path to mount the backend at.",
                "description_kind": "plain",
                "optional": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "region": {
                "type": "string",
                "description": "The AWS region to make API calls against. Defaults to us-east-1.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role_arn": {
                "type": "string",
                "description": "Role ARN to assume for plugin identity token federation.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "secret_key": {
                "type": "string",
                "description": "The AWS Secret Access Key to use when generating new credentials.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "sts_endpoint": {
                "type": "string",
                "description": "Specifies a custom HTTP STS endpoint to use.",
                "description_kind": "plain",
                "optional": true
              },
              "sts_fallback_endpoints": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies a list of custom STS fallback endpoints to use (in order).",
                "description_kind": "plain",
                "optional": true
              },
              "sts_fallback_regions": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies a list of custom STS fallback regions to use (in order).",
                "description_kind": "plain",
                "optional": true
              },
              "sts_region": {
                "type": "string",
                "description": "Specifies a custom STS region to use.",
                "description_kind": "plain",
                "optional": true
              },
              "username_template": {
                "type": "string",
                "description": "Template describing how dynamic usernames are generated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_secret_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The path of the AWS Secret Backend the role belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "credential_type": {
                "type": "string",
                "description": "Role credential type.",
                "description_kind": "plain",
                "required": true
              },
              "default_sts_ttl": {
                "type": "number",
                "description": "The default TTL in seconds for STS credentials. When a TTL is not specified when STS credentials are requested, and a default TTL is specified on the role, then this default TTL will be used. Valid only when credential_type is one of assumed_role or federation_token.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "external_id": {
                "type": "string",
                "description": "External ID to set for assume role creds.",
                "description_kind": "plain",
                "optional": true
              },
              "iam_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of IAM group names. IAM users generated against this vault role will be added to these IAM Groups. For a credential type of assumed_role or federation_token, the policies sent to the corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the policies from each group in iam_groups combined with the policy_document and policy_arns parameters.",
                "description_kind": "plain",
                "optional": true
              },
              "iam_tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of strings representing key/value pairs used as tags for any IAM user created by this role.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_sts_ttl": {
                "type": "number",
                "description": "The max allowed TTL in seconds for STS credentials (credentials TTL are capped to max_sts_ttl). Valid only when credential_type is one of assumed_role or federation_token.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name for the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "permissions_boundary_arn": {
                "type": "string",
                "description": "The ARN of the AWS Permissions Boundary to attach to IAM users created in the role. Valid only when credential_type is iam_user. If not specified, then no permissions boundary policy will be attached.",
                "description_kind": "plain",
                "optional": true
              },
              "policy_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "ARN for an existing IAM policy the role should use.",
                "description_kind": "plain",
                "optional": true
              },
              "policy_document": {
                "type": "string",
                "description": "IAM policy the role should use in JSON format.",
                "description_kind": "plain",
                "optional": true
              },
              "role_arns": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "ARNs of AWS roles allowed to be assumed. Only valid when credential_type is 'assumed_role'",
                "description_kind": "plain",
                "optional": true
              },
              "session_tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Session tags to be set for assume role creds created.",
                "description_kind": "plain",
                "optional": true
              },
              "user_path": {
                "type": "string",
                "description": "The path for the user name. Valid only when credential_type is iam_user. Default is /",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_secret_backend_static_role": {
          "version": 0,
          "block": {
            "attributes": {
              "assume_role_arn": {
                "type": "string",
                "description": "The ARN of the role to assume when managing the static role. This is required for cross-account role management. ",
                "description_kind": "plain",
                "optional": true
              },
              "assume_role_session_name": {
                "type": "string",
                "description": "Session name to use when assuming the role.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "The path where the AWS secrets backend is mounted.",
                "description_kind": "plain",
                "optional": true
              },
              "external_id": {
                "type": "string",
                "description": "External ID to use when assuming the role.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_period": {
                "type": "number",
                "description": "How often Vault should rotate the password of the user entry.",
                "description_kind": "plain",
                "required": true
              },
              "username": {
                "type": "string",
                "description": "The username of the existing AWS IAM user to manage password rotation for.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_azure_auth_backend_config": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "client_id": {
                "type": "string",
                "description": "The client id for credentials to query the Azure APIs. Currently read permissions to query compute resources are required.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "client_secret": {
                "type": "string",
                "description": "The client secret for credentials to query the Azure APIs",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "environment": {
                "type": "string",
                "description": "The Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_audience": {
                "type": "string",
                "description": "The audience claim value.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_ttl": {
                "type": "number",
                "description": "The TTL of generated identity tokens in seconds.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "resource": {
                "type": "string",
                "description": "The configured URL for the application registered in Azure Active Directory.",
                "description_kind": "plain",
                "required": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "tenant_id": {
                "type": "string",
                "description": "The tenant id for the Azure Active Directory organization.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_azure_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_group_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of group ids that login is restricted to.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_locations": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of locations that login is restricted to.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_resource_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of resource groups that login is restricted to.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_scale_sets": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of scale set names that the login is restricted to.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_service_principal_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of Service Principal IDs that login is restricted to.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_subscription_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of subscription IDs that login is restricted to.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_azure_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description": "The client id for credentials to query the Azure APIs. Currently read permissions to query compute resources are required.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "client_secret": {
                "type": "string",
                "description": "The client secret for credentials to query the Azure APIs",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "environment": {
                "type": "string",
                "description": "The Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_audience": {
                "type": "string",
                "description": "The audience claim value.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing identity tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_ttl": {
                "type": "number",
                "description": "The TTL of generated identity tokens in seconds.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Local mount flag that can be explicitly set to true to enforce local mount in HA environment",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path to mount the backend at.",
                "description_kind": "plain",
                "optional": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "root_password_ttl": {
                "type": "number",
                "description": "The TTL in seconds of the root password in Azure when rotate-root generates a new client secret",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "subscription_id": {
                "type": "string",
                "description": "The subscription id for the Azure Active Directory.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "tenant_id": {
                "type": "string",
                "description": "The tenant id for the Azure Active Directory organization.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_azure_secret_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "application_object_id": {
                "type": "string",
                "description": "Application Object ID for an existing service principal that will be used instead of creating dynamic service principals.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "explicit_max_ttl": {
                "type": "string",
                "description": "Specifies the explicit maximum lifetime of the lease and service principal.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_ttl": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "permanently_delete": {
                "type": "bool",
                "description": "Indicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role to create",
                "description_kind": "plain",
                "required": true
              },
              "sign_in_audience": {
                "type": "string",
                "description": "Specifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount",
                "description_kind": "plain",
                "optional": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Comma-separated strings of Azure tags to attach to an application.",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "azure_groups": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "group_name": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "object_id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "description_kind": "plain"
                }
              },
              "azure_roles": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "role_id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "role_name": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "scope": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_cert_auth_backend_role": {
          "version": 1,
          "block": {
            "attributes": {
              "allowed_common_names": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allowed_dns_sans": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allowed_email_sans": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allowed_names": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allowed_organizational_units": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "allowed_uri_sans": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "certificate": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "display_name": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "ocsp_ca_certificates": {
                "type": "string",
                "description": "Any additional CA certificates needed to verify OCSP responses. Provided as base64 encoded PEM data.",
                "description_kind": "plain",
                "optional": true
              },
              "ocsp_enabled": {
                "type": "bool",
                "description": "If enabled, validate certificates' revocation status using OCSP.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ocsp_fail_open": {
                "type": "bool",
                "description": "If true and an OCSP response cannot be fetched or is of an unknown status, the login will proceed as if the certificate has not been revoked.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ocsp_query_all_servers": {
                "type": "bool",
                "description": "If set to true, rather than accepting the first successful OCSP response, query all servers and consider the certificate valid only if all servers agree.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ocsp_servers_override": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A comma-separated list of OCSP server addresses. If unset, the OCSP server is determined from the AuthorityInformationAccess extension on the certificate being inspected.",
                "description_kind": "plain",
                "optional": true
              },
              "required_extensions": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_config_ui_custom_message": {
          "version": 0,
          "block": {
            "attributes": {
              "authenticated": {
                "type": "bool",
                "description": "A flag indicating whether the custom message is displayed pre-login (false) or post-login (true)",
                "description_kind": "plain",
                "optional": true
              },
              "end_time": {
                "type": "string",
                "description": "The ending time of the active period of the custom message. Can be omitted for non-expiring message",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The unique ID for the custom message",
                "description_kind": "plain",
                "computed": true
              },
              "message_base64": {
                "type": "string",
                "description": "The base64-encoded content of the custom message",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map containing additional options for the custom message",
                "description_kind": "plain",
                "optional": true
              },
              "start_time": {
                "type": "string",
                "description": "The starting time of the active period of the custom message",
                "description_kind": "plain",
                "required": true
              },
              "title": {
                "type": "string",
                "description": "The title of the custom message",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "The display type of custom message. Allowed values are banner and modal",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "link": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "href": {
                      "type": "string",
                      "description": "The URL of the hyperlink",
                      "description_kind": "plain",
                      "required": true
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the hyperlink",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "A block containing a hyperlink associated with the custom message",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_consul_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "address": {
                "type": "string",
                "description": "Specifies the address of the Consul instance, provided as \"host:port\" like \"127.0.0.1:8500\".",
                "description_kind": "plain",
                "required": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bootstrap": {
                "type": "bool",
                "description": "Denotes a backend resource that is used to bootstrap the Consul ACL system. Only one resource may be used to bootstrap.",
                "description_kind": "plain",
                "optional": true
              },
              "ca_cert": {
                "type": "string",
                "description": "CA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.",
                "description_kind": "plain",
                "optional": true
              },
              "client_cert": {
                "type": "string",
                "description": "Client certificate used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "client_key": {
                "type": "string",
                "description": "Client key used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing plugin workload identity tokens",
                "description_kind": "plain",
                "optional": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Specifies if the secret backend is local only",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Unique name of the Vault Consul mount to configure",
                "description_kind": "plain",
                "optional": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "scheme": {
                "type": "string",
                "description": "Specifies the URL scheme to use. Defaults to \"http\".",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "token": {
                "type": "string",
                "description": "Specifies the Consul token to use when managing or issuing new tokens.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_consul_secret_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The path of the Consul Secret Backend the role belongs to.",
                "description_kind": "plain",
                "optional": true
              },
              "consul_namespace": {
                "type": "string",
                "description": "The Consul namespace that the token will be created in. Applicable for Vault 1.10+ and Consul 1.7+",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consul_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of Consul policies to associate with this role",
                "description_kind": "plain",
                "optional": true
              },
              "consul_roles": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of Consul roles to attach to the token. Applicable for Vault 1.10+ with Consul 1.5+",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local": {
                "type": "bool",
                "description": "Indicates that the token should not be replicated globally and instead be local to the current datacenter.",
                "description_kind": "plain",
                "optional": true
              },
              "max_ttl": {
                "type": "number",
                "description": "Maximum TTL for leases associated with this role, in seconds.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of an existing role against which to create this Consul credential",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "node_identities": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of Consul node identities to attach to\n\t\t\t\tthe token. Applicable for Vault 1.11+ with Consul 1.8+",
                "description_kind": "plain",
                "optional": true
              },
              "partition": {
                "type": "string",
                "description": "The Consul admin partition that the token will be created in. Applicable for Vault 1.10+ and Consul 1.11+",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "policies": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of Consul policies to associate with this role",
                "description_kind": "plain",
                "optional": true
              },
              "service_identities": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of Consul service identities to attach to\n\t\t\t\tthe token. Applicable for Vault 1.11+ with Consul 1.5+",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "number",
                "description": "Specifies the TTL for this role.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_database_secret_backend_connection": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_roles": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of roles that are allowed to use this connection.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the Vault mount to configure.",
                "description_kind": "plain",
                "required": true
              },
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the database connection.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "plugin_name": {
                "type": "string",
                "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "root_rotation_statements": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of database statements to be executed to rotate the root user's credentials.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "verify_connection": {
                "type": "bool",
                "description": "Specifies if the connection is verified during initial configuration.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "cassandra": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "connect_timeout": {
                      "type": "number",
                      "description": "The number of seconds to use as a connection timeout.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hosts": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Cassandra hosts to connect to.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "insecure_tls": {
                      "type": "bool",
                      "description": "Whether to skip verification of the server certificate when using TLS.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The password to use when authenticating with Cassandra.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "pem_bundle": {
                      "type": "string",
                      "description": "Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "pem_json": {
                      "type": "string",
                      "description": "Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The transport port to use to connect to Cassandra.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "protocol_version": {
                      "type": "number",
                      "description": "The CQL protocol version to use.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "skip_verification": {
                      "type": "bool",
                      "description": "Skip permissions checks when a connection to Cassandra is first created. These checks ensure that Vault is able to create roles, but can be resource intensive in clusters with many roles.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls": {
                      "type": "bool",
                      "description": "Whether to use TLS when connecting to Cassandra.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The username to use when authenticating with Cassandra.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the cassandra-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "couchbase": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "base64_pem": {
                      "type": "string",
                      "description": "Required if `tls` is `true`. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "bucket_name": {
                      "type": "string",
                      "description": "Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hosts": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "insecure_tls": {
                      "type": "bool",
                      "description": " Specifies whether to skip verification of the server certificate when using TLS.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Specifies the password corresponding to the given username.",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "tls": {
                      "type": "bool",
                      "description": "Specifies whether to use TLS when connecting to Couchbase.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "Specifies the username for Vault to use.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Template describing how dynamic usernames are generated.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the couchbase-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "elasticsearch": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "ca_cert": {
                      "type": "string",
                      "description": "The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "ca_path": {
                      "type": "string",
                      "description": "The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "client_cert": {
                      "type": "string",
                      "description": "The path to the certificate for the Elasticsearch client to present for communication",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "client_key": {
                      "type": "string",
                      "description": "The path to the key for the Elasticsearch client to use for communication",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "insecure": {
                      "type": "bool",
                      "description": "Whether to disable certificate verification",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The password to be used in the connection URL",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "tls_server_name": {
                      "type": "string",
                      "description": "This, if set, is used to set the SNI host when connecting via TLS",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL for Elasticsearch's API",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The username to be used in the connection URL",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Template describing how dynamic usernames are generated.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the elasticsearch-database-plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "hana": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_escaping": {
                      "type": "bool",
                      "description": "Disable special character escaping in username and password",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the hana-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "influxdb": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "connect_timeout": {
                      "type": "number",
                      "description": "The number of seconds to use as a connection timeout.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "Influxdb host to connect to.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "insecure_tls": {
                      "type": "bool",
                      "description": "Whether to skip verification of the server certificate when using TLS.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Specifies the password corresponding to the given username.",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "pem_bundle": {
                      "type": "string",
                      "description": "Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "pem_json": {
                      "type": "string",
                      "description": "Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The transport port to use to connect to Influxdb.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls": {
                      "type": "bool",
                      "description": "Whether to use TLS when connecting to Influxdb.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "Specifies the username to use for superuser access.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Template describing how dynamic usernames are generated.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the influxdb-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "mongodb": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mongodb-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "mongodbatlas": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "private_key": {
                      "type": "string",
                      "description": "The Private Programmatic API Key used to connect with MongoDB Atlas API.",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "project_id": {
                      "type": "string",
                      "description": "The Project ID the Database User should be created within.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "public_key": {
                      "type": "string",
                      "description": "The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Connection parameters for the mongodbatlas-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "mssql": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "contained_db": {
                      "type": "bool",
                      "description": "Set to true when the target is a Contained Database, e.g. AzureSQL.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_escaping": {
                      "type": "bool",
                      "description": "Disable special character escaping in username and password",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mssql-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "mysql": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate_key": {
                      "type": "string",
                      "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mysql-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "mysql_aurora": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate_key": {
                      "type": "string",
                      "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mysql-aurora-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "mysql_legacy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate_key": {
                      "type": "string",
                      "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mysql-legacy-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "mysql_rds": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate_key": {
                      "type": "string",
                      "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mysql-rds-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "oracle": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disconnect_sessions": {
                      "type": "bool",
                      "description": "Set to true to disconnect any open sessions prior to running the revocation statements.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "split_statements": {
                      "type": "bool",
                      "description": "Set to true in order to split statements after semi-colons.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the oracle-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "postgresql": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_escaping": {
                      "type": "bool",
                      "description": "Disable special character escaping in username and password",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_authentication": {
                      "type": "string",
                      "description": "When set to `scram-sha-256`, passwords will be hashed by Vault before being sent to PostgreSQL.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "private_key": {
                      "type": "string",
                      "description": "The secret key used for the x509 client certificate. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "self_managed": {
                      "type": "bool",
                      "description": "If set, allows onboarding static roles with a rootless connection configuration.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "The x509 CA file for validating the certificate presented by the PostgreSQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate": {
                      "type": "string",
                      "description": "The x509 client certificate for connecting to the database. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the postgresql-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "redis": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "ca_cert": {
                      "type": "string",
                      "description": "The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "Specifies the host to connect to",
                      "description_kind": "plain",
                      "required": true
                    },
                    "insecure_tls": {
                      "type": "bool",
                      "description": "Specifies whether to skip verification of the server certificate when using TLS.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Specifies the password corresponding to the given username.",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The transport port to use to connect to Redis.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls": {
                      "type": "bool",
                      "description": "Specifies whether to use TLS when connecting to Redis.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "Specifies the username for Vault to use.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Connection parameters for the redis-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "redis_elasticache": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "password": {
                      "type": "string",
                      "description": "The AWS secret key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "region": {
                      "type": "string",
                      "description": "The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "url": {
                      "type": "string",
                      "description": "The configuration endpoint for the ElastiCache cluster to connect to.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The AWS access key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    }
                  },
                  "description": "Connection parameters for the redis-elasticache-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "redshift": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_escaping": {
                      "type": "bool",
                      "description": "Disable special character escaping in username and password",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the redshift-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "snowflake": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "deprecated": true,
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "private_key_wo": {
                      "type": "string",
                      "description": "The private key configured for the admin user in Snowflake.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "private_key_wo_version": {
                      "type": "number",
                      "description": "Version counter for the private key key-pair credentials write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the snowflake-database-plugin plugin.",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_database_secret_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The path of the Database Secret Backend the role belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "creation_statements": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Database statements to execute to create and configure a user.",
                "description_kind": "plain",
                "required": true
              },
              "credential_config": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies the configuration for the given credential_type.",
                "description_kind": "plain",
                "optional": true
              },
              "credential_type": {
                "type": "string",
                "description": "Specifies the type of credential that will be generated for the role.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "db_name": {
                "type": "string",
                "description": "Database connection to use for this role.",
                "description_kind": "plain",
                "required": true
              },
              "default_ttl": {
                "type": "number",
                "description": "Default TTL for leases associated with this role, in seconds.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_ttl": {
                "type": "number",
                "description": "Maximum TTL for leases associated with this role, in seconds.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Unique name for the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "renew_statements": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Database statements to execute to renew a user.",
                "description_kind": "plain",
                "optional": true
              },
              "revocation_statements": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Database statements to execute to revoke a user.",
                "description_kind": "plain",
                "optional": true
              },
              "rollback_statements": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Database statements to execute to rollback a create operation in the event of an error.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_database_secret_backend_static_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The path of the Database Secret Backend the role belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "credential_config": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The configuration for the credential type.Full documentation for the allowed values can be found under \"https://developer.hashicorp.com/vault/api-docs/secret/databases#credential_config\".",
                "description_kind": "plain",
                "optional": true
              },
              "credential_type": {
                "type": "string",
                "description": "The credential type for the user, can be one of \"password\", \"rsa_private_key\" or \"client_certificate\".The configuration can be done in `credential_config`.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "db_name": {
                "type": "string",
                "description": "Database connection to use for this role.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name for the static role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The amount of time Vault should wait before rotating the password, in seconds.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "A cron-style string that will define the schedule on which rotations should occur.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_statements": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Database statements to execute to rotate the password for the configured database user.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The amount of time in seconds in which the rotations are allowed to occur starting from a given rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "self_managed_password": {
                "type": "string",
                "description": "The password corresponding to the username in the database. Required when using the Rootless Password Rotation workflow for static roles.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "skip_import_rotation": {
                "type": "bool",
                "description": "Skip rotation of the password on import.",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "The database username that this role corresponds to.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_database_secrets_mount": {
          "version": 0,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount",
                "description_kind": "plain",
                "optional": true
              },
              "engine_count": {
                "type": "number",
                "description": "Total number of database secret engines configured under the mount.",
                "description_kind": "plain",
                "computed": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing plugin workload identity tokens",
                "description_kind": "plain",
                "optional": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Local mount flag that can be explicitly set to true to enforce local mount in HA environment",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Where the secret backend will be mounted",
                "description_kind": "plain",
                "required": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "cassandra": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connect_timeout": {
                      "type": "number",
                      "description": "The number of seconds to use as a connection timeout.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hosts": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Cassandra hosts to connect to.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "insecure_tls": {
                      "type": "bool",
                      "description": "Whether to skip verification of the server certificate when using TLS.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The password to use when authenticating with Cassandra.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "pem_bundle": {
                      "type": "string",
                      "description": "Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "pem_json": {
                      "type": "string",
                      "description": "Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The transport port to use to connect to Cassandra.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "protocol_version": {
                      "type": "number",
                      "description": "The CQL protocol version to use.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "skip_verification": {
                      "type": "bool",
                      "description": "Skip permissions checks when a connection to Cassandra is first created. These checks ensure that Vault is able to create roles, but can be resource intensive in clusters with many roles.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls": {
                      "type": "bool",
                      "description": "Whether to use TLS when connecting to Cassandra.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The username to use when authenticating with Cassandra.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the cassandra-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "couchbase": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "base64_pem": {
                      "type": "string",
                      "description": "Required if `tls` is `true`. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "bucket_name": {
                      "type": "string",
                      "description": "Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hosts": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "insecure_tls": {
                      "type": "bool",
                      "description": " Specifies whether to skip verification of the server certificate when using TLS.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Specifies the password corresponding to the given username.",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls": {
                      "type": "bool",
                      "description": "Specifies whether to use TLS when connecting to Couchbase.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "Specifies the username for Vault to use.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Template describing how dynamic usernames are generated.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the couchbase-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "elasticsearch": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "ca_cert": {
                      "type": "string",
                      "description": "The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "ca_path": {
                      "type": "string",
                      "description": "The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "client_cert": {
                      "type": "string",
                      "description": "The path to the certificate for the Elasticsearch client to present for communication",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "client_key": {
                      "type": "string",
                      "description": "The path to the key for the Elasticsearch client to use for communication",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "insecure": {
                      "type": "bool",
                      "description": "Whether to disable certificate verification",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The password to be used in the connection URL",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_server_name": {
                      "type": "string",
                      "description": "This, if set, is used to set the SNI host when connecting via TLS",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL for Elasticsearch's API",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The username to be used in the connection URL",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Template describing how dynamic usernames are generated.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the elasticsearch-database-plugin.",
                  "description_kind": "plain"
                }
              },
              "hana": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_escaping": {
                      "type": "bool",
                      "description": "Disable special character escaping in username and password",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the hana-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "influxdb": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connect_timeout": {
                      "type": "number",
                      "description": "The number of seconds to use as a connection timeout.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "Influxdb host to connect to.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "insecure_tls": {
                      "type": "bool",
                      "description": "Whether to skip verification of the server certificate when using TLS.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Specifies the password corresponding to the given username.",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "pem_bundle": {
                      "type": "string",
                      "description": "Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "pem_json": {
                      "type": "string",
                      "description": "Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The transport port to use to connect to Influxdb.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls": {
                      "type": "bool",
                      "description": "Whether to use TLS when connecting to Influxdb.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "Specifies the username to use for superuser access.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Template describing how dynamic usernames are generated.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the influxdb-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "mongodb": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mongodb-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "mongodbatlas": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "private_key": {
                      "type": "string",
                      "description": "The Private Programmatic API Key used to connect with MongoDB Atlas API.",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "project_id": {
                      "type": "string",
                      "description": "The Project ID the Database User should be created within.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "public_key": {
                      "type": "string",
                      "description": "The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mongodbatlas-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "mssql": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "contained_db": {
                      "type": "bool",
                      "description": "Set to true when the target is a Contained Database, e.g. AzureSQL.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_escaping": {
                      "type": "bool",
                      "description": "Disable special character escaping in username and password",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mssql-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "mysql": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate_key": {
                      "type": "string",
                      "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mysql-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "mysql_aurora": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate_key": {
                      "type": "string",
                      "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mysql-aurora-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "mysql_legacy": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate_key": {
                      "type": "string",
                      "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mysql-legacy-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "mysql_rds": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate_key": {
                      "type": "string",
                      "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the mysql-rds-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "oracle": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disconnect_sessions": {
                      "type": "bool",
                      "description": "Set to true to disconnect any open sessions prior to running the revocation statements.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "split_statements": {
                      "type": "bool",
                      "description": "Set to true in order to split statements after semi-colons.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the oracle-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "postgresql": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "auth_type": {
                      "type": "string",
                      "description": "Specify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_escaping": {
                      "type": "bool",
                      "description": "Disable special character escaping in username and password",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_authentication": {
                      "type": "string",
                      "description": "When set to `scram-sha-256`, passwords will be hashed by Vault before being sent to PostgreSQL.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "private_key": {
                      "type": "string",
                      "description": "The secret key used for the x509 client certificate. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "self_managed": {
                      "type": "bool",
                      "description": "If set, allows onboarding static roles with a rootless connection configuration.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_account_json": {
                      "type": "string",
                      "description": "A JSON encoded credential for use with IAM authorization",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "tls_ca": {
                      "type": "string",
                      "description": "The x509 CA file for validating the certificate presented by the PostgreSQL server. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_certificate": {
                      "type": "string",
                      "description": "The x509 client certificate for connecting to the database. Must be PEM encoded.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the postgresql-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "redis": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "ca_cert": {
                      "type": "string",
                      "description": "The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "Specifies the host to connect to",
                      "description_kind": "plain",
                      "required": true
                    },
                    "insecure_tls": {
                      "type": "bool",
                      "description": "Specifies whether to skip verification of the server certificate when using TLS.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Specifies the password corresponding to the given username.",
                      "description_kind": "plain",
                      "required": true,
                      "sensitive": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The transport port to use to connect to Redis.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls": {
                      "type": "bool",
                      "description": "Specifies whether to use TLS when connecting to Redis.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "Specifies the username for Vault to use.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the redis-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "redis_elasticache": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The AWS secret key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "region": {
                      "type": "string",
                      "description": "The AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "url": {
                      "type": "string",
                      "description": "The configuration endpoint for the ElastiCache cluster to connect to.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The AWS access key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the redis-elasticache-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "redshift": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_escaping": {
                      "type": "bool",
                      "description": "Disable special character escaping in username and password",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the redshift-database-plugin plugin.",
                  "description_kind": "plain"
                }
              },
              "snowflake": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "allowed_roles": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of roles that are allowed to use this connection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connection_url": {
                      "type": "string",
                      "description": "Connection string to use to connect to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "disable_automated_rotation": {
                      "type": "bool",
                      "description": "Stops rotation of the root credential until set to false.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_connection_lifetime": {
                      "type": "number",
                      "description": "Maximum number of seconds a connection may be reused.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_idle_connections": {
                      "type": "number",
                      "description": "Maximum number of idle connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_open_connections": {
                      "type": "number",
                      "description": "Maximum number of open connections to the database.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the database connection.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "password": {
                      "type": "string",
                      "description": "The root credential password used in the connection URL",
                      "description_kind": "plain",
                      "deprecated": true,
                      "optional": true,
                      "sensitive": true
                    },
                    "password_wo": {
                      "type": "string",
                      "description": "Write-only field for the root credential password used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_wo_version": {
                      "type": "number",
                      "description": "Version counter for root credential password write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "plugin_name": {
                      "type": "string",
                      "description": "Specifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "private_key_wo": {
                      "type": "string",
                      "description": "The private key configured for the admin user in Snowflake.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "private_key_wo_version": {
                      "type": "number",
                      "description": "Version counter for the private key key-pair credentials write-only field",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "root_rotation_statements": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of database statements to be executed to rotate the root user's credentials.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_period": {
                      "type": "number",
                      "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_schedule": {
                      "type": "string",
                      "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rotation_window": {
                      "type": "number",
                      "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "description": "The root credential username used in the connection URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "username_template": {
                      "type": "string",
                      "description": "Username generation template.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verify_connection": {
                      "type": "bool",
                      "description": "Specifies if the connection is verified during initial configuration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Connection parameters for the snowflake-database-plugin plugin.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_egp_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "enforcement_level": {
                "type": "string",
                "description": "Enforcement level of Sentinel policy. Can be one of: 'advisory', 'soft-mandatory' or 'hard-mandatory'",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the policy",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "paths": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of paths to which the policy will be applied",
                "description_kind": "plain",
                "required": true
              },
              "policy": {
                "type": "string",
                "description": "The policy document",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_gcp_auth_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The accessor of the auth backend",
                "description_kind": "plain",
                "computed": true
              },
              "client_email": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "credentials": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_audience": {
                "type": "string",
                "description": "The audience claim value for plugin identity tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing identity tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_ttl": {
                "type": "number",
                "description": "The TTL of generated tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Specifies if the auth method is local only",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "private_key_id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "project_id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "service_account_email": {
                "type": "string",
                "description": "Service Account to impersonate for plugin workload identity federation.",
                "description_kind": "plain",
                "optional": true
              },
              "tune": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "allowed_response_headers": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_request_keys": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_response_keys": [
                        "list",
                        "string"
                      ],
                      "default_lease_ttl": "string",
                      "listing_visibility": "string",
                      "max_lease_ttl": "string",
                      "passthrough_request_headers": [
                        "list",
                        "string"
                      ],
                      "token_type": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "custom_endpoint": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "api": {
                      "type": "string",
                      "description": "Replaces the service endpoint used in API requests to https://www.googleapis.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "compute": {
                      "type": "string",
                      "description": "Replaces the service endpoint used in API requests to `https://compute.googleapis.com`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "crm": {
                      "type": "string",
                      "description": "Replaces the service endpoint used in API requests to `https://cloudresourcemanager.googleapis.com`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "iam": {
                      "type": "string",
                      "description": "Replaces the service endpoint used in API requests to `https://iam.googleapis.com`.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Specifies overrides to service endpoints used when making API requests to GCP.",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_gcp_auth_backend_role": {
          "version": 1,
          "block": {
            "attributes": {
              "add_group_aliases": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allow_gce_inference": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "bound_instance_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bound_labels": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bound_projects": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "bound_regions": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bound_service_accounts": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bound_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_jwt_exp": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_gcp_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the created GCP mount.",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "credentials": {
                "type": "string",
                "description": "JSON-encoded credentials to use to connect to GCP",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "credentials_wo": {
                "type": "string",
                "description": "Write-only JSON-encoded credentials to use to connect to GCP",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "credentials_wo_version": {
                "type": "number",
                "description": "Version counter for write-only JSON-encoded credentials",
                "description_kind": "plain",
                "optional": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_audience": {
                "type": "string",
                "description": "The audience claim value for plugin identity tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing identity tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_token_ttl": {
                "type": "number",
                "description": "The TTL of generated tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Local mount flag that can be explicitly set to true to enforce local mount in HA environment",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path to mount the backend at.",
                "description_kind": "plain",
                "optional": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service_account_email": {
                "type": "string",
                "description": "Service Account to impersonate for plugin workload identity federation.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_gcp_secret_impersonated_account": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Path where the GCP secrets engine is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "impersonated_account": {
                "type": "string",
                "description": "Name of the Impersonated Account to create",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "service_account_email": {
                "type": "string",
                "description": "Email of the GCP service account.",
                "description_kind": "plain",
                "required": true
              },
              "service_account_project": {
                "type": "string",
                "description": "Project of the GCP Service Account managed by this impersonated account",
                "description_kind": "plain",
                "computed": true
              },
              "token_scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of OAuth scopes to assign to `access_token` secrets generated under this impersonated account (`access_token` impersonated accounts only) ",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "string",
                "description": "Time to live.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_gcp_secret_roleset": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Path where the GCP secrets engine is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "project": {
                "type": "string",
                "description": "Name of the GCP project that this roleset's service account will belong to.",
                "description_kind": "plain",
                "required": true
              },
              "roleset": {
                "type": "string",
                "description": "Name of the RoleSet to create",
                "description_kind": "plain",
                "required": true
              },
              "secret_type": {
                "type": "string",
                "description": "Type of secret generated for this role set. Defaults to `access_token`. Accepted values: `access_token`, `service_account_key`",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service_account_email": {
                "type": "string",
                "description": "Email of the service account created by Vault for this Roleset",
                "description_kind": "plain",
                "computed": true
              },
              "token_scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only) ",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "binding": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "resource": {
                      "type": "string",
                      "description": "Resource name",
                      "description_kind": "plain",
                      "required": true
                    },
                    "roles": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of roles to apply to the resource",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description_kind": "plain"
                },
                "min_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_gcp_secret_static_account": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Path where the GCP secrets engine is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "secret_type": {
                "type": "string",
                "description": "Type of secret generated for this static account. Defaults to `access_token`. Accepted values: `access_token`, `service_account_key`",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service_account_email": {
                "type": "string",
                "description": "Email of the GCP service account.",
                "description_kind": "plain",
                "required": true
              },
              "service_account_project": {
                "type": "string",
                "description": "Project of the GCP Service Account managed by this static account",
                "description_kind": "plain",
                "computed": true
              },
              "static_account": {
                "type": "string",
                "description": "Name of the Static Account to create",
                "description_kind": "plain",
                "required": true
              },
              "token_scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of OAuth scopes to assign to `access_token` secrets generated under this static account (`access_token` static accounts only) ",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "binding": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "resource": {
                      "type": "string",
                      "description": "Resource name",
                      "description_kind": "plain",
                      "required": true
                    },
                    "roles": {
                      "type": [
                        "set",
                        "string"
                      ],
                      "description": "List of roles to apply to the resource",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_generic_endpoint": {
          "version": 1,
          "block": {
            "attributes": {
              "data_json": {
                "type": "string",
                "description": "JSON-encoded data to write.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "disable_delete": {
                "type": "bool",
                "description": "Don't attempt to delete the path from Vault if true",
                "description_kind": "plain",
                "optional": true
              },
              "disable_read": {
                "type": "bool",
                "description": "Don't attempt to read the path from Vault if true; drift won't be detected",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ignore_absent_fields": {
                "type": "bool",
                "description": "When reading, disregard fields not present in data_json",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path where to the endpoint that will be written",
                "description_kind": "plain",
                "required": true
              },
              "write_data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of strings returned by write operation",
                "description_kind": "plain",
                "computed": true
              },
              "write_data_json": {
                "type": "string",
                "description": "JSON data returned by write operation",
                "description_kind": "plain",
                "computed": true
              },
              "write_fields": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Top-level fields returned by write to persist in state",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_generic_secret": {
          "version": 1,
          "block": {
            "attributes": {
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of strings read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "data_json": {
                "type": "string",
                "description": "JSON-encoded secret data to write.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "delete_all_versions": {
                "type": "bool",
                "description": "Only applicable for kv-v2 stores. If set, permanently deletes all versions for the specified key.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_read": {
                "type": "bool",
                "description": "Don't attempt to read the token from Vault if true; drift won't be detected.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path where the generic secret will be written.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_github_auth_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The mount accessor related to the auth mount.",
                "description_kind": "plain",
                "computed": true
              },
              "base_url": {
                "type": "string",
                "description": "The API endpoint to use. Useful if you are running GitHub Enterprise or an API-compatible authentication server.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Specifies the description of the mount. This overrides the current stored value, if any.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "organization": {
                "type": "string",
                "description": "The organization users must be part of.",
                "description_kind": "plain",
                "required": true
              },
              "organization_id": {
                "type": "number",
                "description": "The ID of the organization users must be part of. Vault will attempt to fetch and set this value if it is not provided (vault-1.10+)",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "path": {
                "type": "string",
                "description": "Path where the auth backend is mounted",
                "description_kind": "plain",
                "optional": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              },
              "tune": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "allowed_response_headers": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_request_keys": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_response_keys": [
                        "list",
                        "string"
                      ],
                      "default_lease_ttl": "string",
                      "listing_visibility": "string",
                      "max_lease_ttl": "string",
                      "passthrough_request_headers": [
                        "list",
                        "string"
                      ],
                      "token_type": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_github_team": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Auth backend to which team mapping will be configured.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Policies to be assigned to this team.",
                "description_kind": "plain",
                "optional": true
              },
              "team": {
                "type": "string",
                "description": "GitHub team name in \"slugified\" format.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_github_user": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Auth backend to which user mapping will be congigured.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Policies to be assigned to this user.",
                "description_kind": "plain",
                "optional": true
              },
              "user": {
                "type": "string",
                "description": "GitHub user name.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_entity": {
          "version": 0,
          "block": {
            "attributes": {
              "disabled": {
                "type": "bool",
                "description": "Whether the entity is disabled. Disabled entities' associated tokens cannot be used, but are not revoked.",
                "description_kind": "plain",
                "optional": true
              },
              "external_policies": {
                "type": "bool",
                "description": "Manage policies externally through `vault_identity_entity_policies`.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata to be associated with the entity.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the entity.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Policies to be tied to the entity.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_entity_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "canonical_id": {
                "type": "string",
                "description": "ID of the entity to which this is an alias.",
                "description_kind": "plain",
                "required": true
              },
              "custom_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Custom metadata to be associated with this alias.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount_accessor": {
                "type": "string",
                "description": "Mount accessor to which this alias belongs toMount accessor to which this alias belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the entity alias.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_entity_policies": {
          "version": 0,
          "block": {
            "attributes": {
              "entity_id": {
                "type": "string",
                "description": "ID of the entity.",
                "description_kind": "plain",
                "required": true
              },
              "entity_name": {
                "type": "string",
                "description": "Name of the entity.",
                "description_kind": "plain",
                "computed": true
              },
              "exclusive": {
                "type": "bool",
                "description": "Should the resource manage policies exclusively",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Policies to be tied to the entity.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_group": {
          "version": 1,
          "block": {
            "attributes": {
              "external_member_entity_ids": {
                "type": "bool",
                "description": "Manage member entities externally through `vault_identity_group_member_entity_ids`",
                "description_kind": "plain",
                "optional": true
              },
              "external_member_group_ids": {
                "type": "bool",
                "description": "Manage member groups externally through `vault_identity_group_member_group_ids`",
                "description_kind": "plain",
                "optional": true
              },
              "external_policies": {
                "type": "bool",
                "description": "Manage policies externally through `vault_identity_group_policies`, allows using group ID in assigned policies.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "member_entity_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Entity IDs to be assigned as group members.",
                "description_kind": "plain",
                "optional": true
              },
              "member_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Group IDs to be assigned as group members.",
                "description_kind": "plain",
                "optional": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata to be associated with the group.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the group.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Policies to be tied to the group.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Type of the group, internal or external. Defaults to internal.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_group_alias": {
          "version": 0,
          "block": {
            "attributes": {
              "canonical_id": {
                "type": "string",
                "description": "ID of the group to which this is an alias.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount_accessor": {
                "type": "string",
                "description": "Mount accessor to which this alias belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the group alias.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_group_member_entity_ids": {
          "version": 0,
          "block": {
            "attributes": {
              "exclusive": {
                "type": "bool",
                "description": "If set to true, allows the resource to manage member entity ids\nexclusively. Beware of race conditions when disabling exclusive management",
                "description_kind": "plain",
                "optional": true
              },
              "group_id": {
                "type": "string",
                "description": "ID of the group.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "member_entity_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Entity IDs to be assigned as group members.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_group_member_group_ids": {
          "version": 0,
          "block": {
            "attributes": {
              "exclusive": {
                "type": "bool",
                "description": "If set to true, allows the resource to manage member group ids\nexclusively. Beware of race conditions when disabling exclusive management",
                "description_kind": "plain",
                "optional": true
              },
              "group_id": {
                "type": "string",
                "description": "ID of the group.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "member_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Group IDs to be assigned as group members.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_group_policies": {
          "version": 0,
          "block": {
            "attributes": {
              "exclusive": {
                "type": "bool",
                "description": "Should the resource manage policies exclusively? Beware of race conditions when disabling exclusive management",
                "description_kind": "plain",
                "optional": true
              },
              "group_id": {
                "type": "string",
                "description": "ID of the group.",
                "description_kind": "plain",
                "required": true
              },
              "group_name": {
                "type": "string",
                "description": "Name of the group.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Policies to be tied to the group.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_mfa_duo": {
          "version": 0,
          "block": {
            "attributes": {
              "api_hostname": {
                "type": "string",
                "description": "API hostname for Duo",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "integration_key": {
                "type": "string",
                "description": "Integration key for Duo",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "method_id": {
                "type": "string",
                "description": "Method ID.",
                "description_kind": "plain",
                "computed": true
              },
              "mount_accessor": {
                "type": "string",
                "description": "Mount accessor.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Method name.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description": "Method's namespace ID.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace_path": {
                "type": "string",
                "description": "Method's namespace path.",
                "description_kind": "plain",
                "computed": true
              },
              "push_info": {
                "type": "string",
                "description": "Push information for Duo.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_key": {
                "type": "string",
                "description": "Secret key for Duo",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "type": {
                "type": "string",
                "description": "MFA type.",
                "description_kind": "plain",
                "computed": true
              },
              "use_passcode": {
                "type": "bool",
                "description": "Require passcode upon MFA validation.",
                "description_kind": "plain",
                "optional": true
              },
              "username_format": {
                "type": "string",
                "description": "A template string for mapping Identity names to MFA methods.",
                "description_kind": "plain",
                "optional": true
              },
              "uuid": {
                "type": "string",
                "description": "Resource UUID.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_mfa_login_enforcement": {
          "version": 0,
          "block": {
            "attributes": {
              "auth_method_accessors": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of auth method accessor IDs.",
                "description_kind": "plain",
                "optional": true
              },
              "auth_method_types": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of auth method types.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_entity_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of identity entity IDs.",
                "description_kind": "plain",
                "optional": true
              },
              "identity_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of identity group IDs.",
                "description_kind": "plain",
                "optional": true
              },
              "mfa_method_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of MFA method UUIDs.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Login enforcement name.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description": "Method's namespace ID.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace_path": {
                "type": "string",
                "description": "Method's namespace path.",
                "description_kind": "plain",
                "computed": true
              },
              "uuid": {
                "type": "string",
                "description": "Resource UUID.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_mfa_okta": {
          "version": 0,
          "block": {
            "attributes": {
              "api_token": {
                "type": "string",
                "description": "Okta API token.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "base_url": {
                "type": "string",
                "description": "The base domain to use for API requests.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "method_id": {
                "type": "string",
                "description": "Method ID.",
                "description_kind": "plain",
                "computed": true
              },
              "mount_accessor": {
                "type": "string",
                "description": "Mount accessor.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Method name.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description": "Method's namespace ID.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace_path": {
                "type": "string",
                "description": "Method's namespace path.",
                "description_kind": "plain",
                "computed": true
              },
              "org_name": {
                "type": "string",
                "description": "Name of the organization to be used in the Okta API.",
                "description_kind": "plain",
                "required": true
              },
              "primary_email": {
                "type": "bool",
                "description": "Only match the primary email for the account.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "MFA type.",
                "description_kind": "plain",
                "computed": true
              },
              "username_format": {
                "type": "string",
                "description": "A template string for mapping Identity names to MFA methods.",
                "description_kind": "plain",
                "optional": true
              },
              "uuid": {
                "type": "string",
                "description": "Resource UUID.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_mfa_pingid": {
          "version": 0,
          "block": {
            "attributes": {
              "admin_url": {
                "type": "string",
                "description": "The admin URL, derived from \"settings_file_base64\"",
                "description_kind": "plain",
                "computed": true
              },
              "authenticator_url": {
                "type": "string",
                "description": "A unique identifier of the organization, derived from \"settings_file_base64\"",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idp_url": {
                "type": "string",
                "description": "The IDP URL, derived from \"settings_file_base64\"",
                "description_kind": "plain",
                "computed": true
              },
              "method_id": {
                "type": "string",
                "description": "Method ID.",
                "description_kind": "plain",
                "computed": true
              },
              "mount_accessor": {
                "type": "string",
                "description": "Mount accessor.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Method name.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description": "Method's namespace ID.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace_path": {
                "type": "string",
                "description": "Method's namespace path.",
                "description_kind": "plain",
                "computed": true
              },
              "org_alias": {
                "type": "string",
                "description": "The name of the PingID client organization, derived from \"settings_file_base64\"",
                "description_kind": "plain",
                "computed": true
              },
              "settings_file_base64": {
                "type": "string",
                "description": "A base64-encoded third-party settings contents as retrieved from PingID's configuration page.",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "MFA type.",
                "description_kind": "plain",
                "computed": true
              },
              "use_signature": {
                "type": "bool",
                "description": "Use signature value, derived from \"settings_file_base64\"",
                "description_kind": "plain",
                "computed": true
              },
              "username_format": {
                "type": "string",
                "description": "A template string for mapping Identity names to MFA methods.",
                "description_kind": "plain",
                "optional": true
              },
              "uuid": {
                "type": "string",
                "description": "Resource UUID.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_mfa_totp": {
          "version": 0,
          "block": {
            "attributes": {
              "algorithm": {
                "type": "string",
                "description": "Specifies the hashing algorithm used to generate the TOTP code. Options include SHA1, SHA256, SHA512.",
                "description_kind": "plain",
                "optional": true
              },
              "digits": {
                "type": "number",
                "description": "The number of digits in the generated TOTP token. This value can either be 6 or 8",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "The name of the key's issuing organization.",
                "description_kind": "plain",
                "required": true
              },
              "key_size": {
                "type": "number",
                "description": "Specifies the size in bytes of the generated key.",
                "description_kind": "plain",
                "optional": true
              },
              "max_validation_attempts": {
                "type": "number",
                "description": "The maximum number of consecutive failed validation attempts allowed.",
                "description_kind": "plain",
                "optional": true
              },
              "method_id": {
                "type": "string",
                "description": "Method ID.",
                "description_kind": "plain",
                "computed": true
              },
              "mount_accessor": {
                "type": "string",
                "description": "Mount accessor.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Method name.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description": "Method's namespace ID.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace_path": {
                "type": "string",
                "description": "Method's namespace path.",
                "description_kind": "plain",
                "computed": true
              },
              "period": {
                "type": "number",
                "description": "The length of time in seconds used to generate a counter for the TOTP token calculation.",
                "description_kind": "plain",
                "optional": true
              },
              "qr_size": {
                "type": "number",
                "description": "The pixel size of the generated square QR code.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "skew": {
                "type": "number",
                "description": "The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "MFA type.",
                "description_kind": "plain",
                "computed": true
              },
              "uuid": {
                "type": "string",
                "description": "Resource UUID.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "Issuer URL to be used in the iss claim of the token. If not set, Vault's api_addr will be used. The issuer is a case sensitive URL using the https scheme that contains scheme, host, and optionally, port number and path components, but no query or fragment components.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_assignment": {
          "version": 0,
          "block": {
            "attributes": {
              "entity_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of Vault entity IDs.",
                "description_kind": "plain",
                "optional": true
              },
              "group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of Vault group IDs.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the assignment.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_client": {
          "version": 0,
          "block": {
            "attributes": {
              "access_token_ttl": {
                "type": "number",
                "description": "The time-to-live for access tokens obtained by the client.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "assignments": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of assignment resources associated with the client.",
                "description_kind": "plain",
                "optional": true
              },
              "client_id": {
                "type": "string",
                "description": "The Client ID from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "The Client Secret from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "client_type": {
                "type": "string",
                "description": "The client type based on its ability to maintain confidentiality of credentials.Defaults to 'confidential'.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id_token_ttl": {
                "type": "number",
                "description": "The time-to-live for ID tokens obtained by the client. The value should be less than the verification_ttl on the key.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "A reference to a named key resource in Vault. This cannot be modified after creation.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the client.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "redirect_uris": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Redirection URI values used by the client. One of these values must exactly match the redirect_uri parameter value used in each authentication request.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_key": {
          "version": 0,
          "block": {
            "attributes": {
              "algorithm": {
                "type": "string",
                "description": "Signing algorithm to use. Signing algorithm to use. Allowed values are: RS256 (default), RS384, RS512, ES256, ES384, ES512, EdDSA.",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_client_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Array of role client ids allowed to use this key for signing. If empty, no roles are allowed. If \"*\", all roles are allowed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the key.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_period": {
                "type": "number",
                "description": "How often to generate a new signing key in number of seconds",
                "description_kind": "plain",
                "optional": true
              },
              "verification_ttl": {
                "type": "number",
                "description": "Controls how long the public portion of a signing key will be available for verification after being rotated in seconds.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_key_allowed_client_id": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_client_id": {
                "type": "string",
                "description": "Role Client ID allowed to use the key for signing.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_name": {
                "type": "string",
                "description": "Name of the key.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_provider": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_client_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The client IDs that are permitted to use the provider. If empty, no clients are allowed. If \"*\", all clients are allowed.",
                "description_kind": "plain",
                "optional": true
              },
              "https_enabled": {
                "type": "bool",
                "description": "Set to true if the issuer endpoint uses HTTPS.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "Specifies what will be used as the 'scheme://host:port' component for the 'iss' claim of ID tokens.This value is computed using the issuer_host and https_enabled fields.",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_host": {
                "type": "string",
                "description": "The host for the issuer. Can be either host or host:port.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of the provider.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "scopes_supported": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The scopes available for requesting on the provider.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_role": {
          "version": 0,
          "block": {
            "attributes": {
              "client_id": {
                "type": "string",
                "description": "The value that will be included in the `aud` field of all the OIDC identity tokens issued by this role",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "A configured named key, the key must already exist.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "template": {
                "type": "string",
                "description": "The template string to use for generating tokens. This may be in string-ified JSON or base64 format.",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "number",
                "description": "TTL of the tokens generated against the role in number of seconds.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_scope": {
          "version": 0,
          "block": {
            "attributes": {
              "description": {
                "type": "string",
                "description": "The scope's description.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the scope. The openid scope name is reserved.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "template": {
                "type": "string",
                "description": "The template string for the scope. This may be provided as escaped JSON or base64 encoded JSON.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_jwt_auth_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The accessor of the JWT auth backend",
                "description_kind": "plain",
                "computed": true
              },
              "bound_issuer": {
                "type": "string",
                "description": "The value against which to match the iss claim in a JWT",
                "description_kind": "plain",
                "optional": true
              },
              "default_role": {
                "type": "string",
                "description": "The default role to use if none is provided during login",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "The description of the auth backend",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "jwks_ca_pem": {
                "type": "string",
                "description": "The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.",
                "description_kind": "plain",
                "optional": true
              },
              "jwks_pairs": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "List of JWKS URL and optional CA certificate pairs. Cannot be used with 'jwks_url' or 'jwks_ca_pem'. Requires Vault 1.16+.",
                "description_kind": "plain",
                "optional": true
              },
              "jwks_url": {
                "type": "string",
                "description": "JWKS URL to use to authenticate signatures. Cannot be used with 'oidc_discovery_url' or 'jwt_validation_pubkeys'.",
                "description_kind": "plain",
                "optional": true
              },
              "jwt_supported_algs": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of supported signing algorithms. Defaults to [RS256]",
                "description_kind": "plain",
                "optional": true
              },
              "jwt_validation_pubkeys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with 'jwks_url' or 'oidc_discovery_url'. ",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Specifies if the auth method is local only",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_in_state": {
                "type": "bool",
                "description": "Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the OIDC provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs.",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_client_id": {
                "type": "string",
                "description": "Client ID used for OIDC",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_client_secret": {
                "type": "string",
                "description": "Client Secret used for OIDC",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "oidc_discovery_ca_pem": {
                "type": "string",
                "description": "The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_discovery_url": {
                "type": "string",
                "description": "The OIDC Discovery URL, without any .well-known component (base path). Cannot be used with 'jwks_url' or 'jwt_validation_pubkeys'.",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_response_mode": {
                "type": "string",
                "description": "The response mode to be used in the OAuth2 request. Allowed values are 'query' and 'form_post'. Defaults to 'query'. If using Vault namespaces, and oidc_response_mode is 'form_post', then 'namespace_in_state' should be set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_response_types": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The response types to request. Allowed values are 'code' and 'id_token'. Defaults to 'code'. Note: 'id_token' may only be used if 'oidc_response_mode' is set to 'form_post'.",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "path to mount the backend",
                "description_kind": "plain",
                "optional": true
              },
              "provider_config": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Provider specific handling configuration",
                "description_kind": "plain",
                "optional": true
              },
              "tune": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "allowed_response_headers": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_request_keys": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_response_keys": [
                        "list",
                        "string"
                      ],
                      "default_lease_ttl": "string",
                      "listing_visibility": "string",
                      "max_lease_ttl": "string",
                      "passthrough_request_headers": [
                        "list",
                        "string"
                      ],
                      "token_type": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of backend. Can be either 'jwt' or 'oidc'",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_jwt_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_redirect_uris": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The list of allowed values for redirect_uri during OIDC logins.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_audiences": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of aud claims to match against. Any match is sufficient.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_claims": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of claims/values to match against. The expected value may be a single string or a comma-separated string list.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_claims_type": {
                "type": "string",
                "description": "How to interpret values in the claims/values map: can be either \"string\" (exact match) or \"glob\" (wildcard match).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bound_subject": {
                "type": "string",
                "description": "If set, requires that the sub claim matches this value.",
                "description_kind": "plain",
                "optional": true
              },
              "claim_mappings": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of claims (keys) to be copied to specified metadata fields (values).",
                "description_kind": "plain",
                "optional": true
              },
              "clock_skew_leeway": {
                "type": "number",
                "description": "The amount of leeway to add to all claims to account for clock skew, in seconds. Defaults to 60 seconds if set to 0 and can be disabled if set to -1. Only applicable with 'jwt' roles.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_bound_claims_parsing": {
                "type": "bool",
                "description": "Disable bound claim value parsing. Useful when values contain commas.",
                "description_kind": "plain",
                "optional": true
              },
              "expiration_leeway": {
                "type": "number",
                "description": "The amount of leeway to add to expiration (exp) claims to account for clock skew, in seconds. Defaults to 150 seconds if set to 0 and can be disabled if set to -1. Only applicable with 'jwt' roles.",
                "description_kind": "plain",
                "optional": true
              },
              "groups_claim": {
                "type": "string",
                "description": "The claim to use to uniquely identify the set of groups to which the user belongs; this will be used as the names for the Identity group aliases created due to a successful login. The claim value must be a list of strings.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_age": {
                "type": "number",
                "description": "Specifies the allowable elapsed time in seconds since the last time the user was actively authenticated.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "not_before_leeway": {
                "type": "number",
                "description": "The amount of leeway to add to not before (nbf) claims to account for clock skew, in seconds. Defaults to 150 seconds if set to 0 and can be disabled if set to -1. Only applicable with 'jwt' roles. ",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_scopes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of OIDC scopes to be used with an OIDC role. The standard scope \"openid\" is automatically included and need not be specified.",
                "description_kind": "plain",
                "optional": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "role_type": {
                "type": "string",
                "description": "Type of role, either \"oidc\" (default) or \"jwt\"",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              },
              "user_claim": {
                "type": "string",
                "description": "The claim to use to uniquely identify the user; this will be used as the name for the Identity entity alias created due to a successful login.",
                "description_kind": "plain",
                "required": true
              },
              "user_claim_json_pointer": {
                "type": "bool",
                "description": "Specifies if the user_claim value uses JSON pointer syntax for referencing claims. By default, the user_claim value will not use JSON pointer.",
                "description_kind": "plain",
                "optional": true
              },
              "verbose_oidc_logging": {
                "type": "bool",
                "description": "Log received OIDC tokens and claims when debug-level logging is active. Not recommended in production since sensitive information may be present in OIDC responses.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kmip_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_tls_client_key_bits": {
                "type": "number",
                "description": "Client certificate key bits, valid values depend on key type",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_tls_client_key_type": {
                "type": "string",
                "description": "Client certificate key type, rsa or ec",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_tls_client_ttl": {
                "type": "number",
                "description": "Client certificate TTL in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing plugin workload identity tokens",
                "description_kind": "plain",
                "optional": true
              },
              "listen_addrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Addresses the KMIP server should listen on (host:port)",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Local mount flag that can be explicitly set to true to enforce local mount in HA environment",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path where KMIP secret backend will be mounted",
                "description_kind": "plain",
                "required": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "server_hostnames": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Hostnames to include in the server's TLS certificate as SAN DNS names. The first will be used as the common name (CN)",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "server_ips": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "IPs to include in the server's TLS certificate as SAN IP addresses",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tls_ca_key_bits": {
                "type": "number",
                "description": "CA key bits, valid values depend on key type",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tls_ca_key_type": {
                "type": "string",
                "description": "CA key type, rsa or ec",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tls_min_version": {
                "type": "string",
                "description": "Minimum TLS version to accept",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kmip_secret_role": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "operation_activate": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Activate operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_add_attribute": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Add Attribute operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_all": {
                "type": "bool",
                "description": "Grant all permissions to this role. May not be specified with any other operation_* params",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_create": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Create operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_destroy": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Destroy operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_discover_versions": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Discover Version operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_get": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Get operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_get_attribute_list": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Get Attribute List operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_get_attributes": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Get Attributes operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_locate": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Locate operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_none": {
                "type": "bool",
                "description": "Remove all permissions from this role. May not be specified with any other operation_* params",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_register": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Register operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_rekey": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Rekey operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "operation_revoke": {
                "type": "bool",
                "description": "Grant permission to use the KMIP Revoke operation",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "path": {
                "type": "string",
                "description": "Path where KMIP backend is mounted",
                "description_kind": "plain",
                "required": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role",
                "description_kind": "plain",
                "required": true
              },
              "scope": {
                "type": "string",
                "description": "Name of the scope",
                "description_kind": "plain",
                "required": true
              },
              "tls_client_key_bits": {
                "type": "number",
                "description": "Client certificate key bits, valid values depend on key type",
                "description_kind": "plain",
                "optional": true
              },
              "tls_client_key_type": {
                "type": "string",
                "description": "Client certificate key type, rsa or ec",
                "description_kind": "plain",
                "optional": true
              },
              "tls_client_ttl": {
                "type": "number",
                "description": "Client certificate TTL in seconds",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kmip_secret_scope": {
          "version": 0,
          "block": {
            "attributes": {
              "force": {
                "type": "bool",
                "description": "Force deletion even if there are managed objects in the scope",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path where KMIP backend is mounted",
                "description_kind": "plain",
                "required": true
              },
              "scope": {
                "type": "string",
                "description": "Name of the scope",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kubernetes_auth_backend_config": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the kubernetes backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_iss_validation": {
                "type": "bool",
                "description": "Optional disable JWT issuer validation. Allows to skip ISS validation.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "disable_local_ca_jwt": {
                "type": "bool",
                "description": "Optional disable defaulting to the local CA cert and service account JWT when running in a Kubernetes pod.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "Optional JWT issuer. If no issuer is specified, kubernetes.io/serviceaccount will be used as the default issuer.",
                "description_kind": "plain",
                "optional": true
              },
              "kubernetes_ca_cert": {
                "type": "string",
                "description": "PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "kubernetes_host": {
                "type": "string",
                "description": "Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "pem_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.",
                "description_kind": "plain",
                "optional": true
              },
              "token_reviewer_jwt": {
                "type": "string",
                "description": "A service account JWT (or other token) used as a bearer token to access the TokenReview API to validate other JWTs during login. If not set the JWT used for login will be used to access the API.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "use_annotations_as_alias_metadata": {
                "type": "bool",
                "description": "Use annotations from the client token's associated service account as alias metadata for the Vault entity.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kubernetes_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "alias_name_source": {
                "type": "string",
                "description": "Configures how identity aliases are generated. Valid choices are: serviceaccount_uid, serviceaccount_name",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audience": {
                "type": "string",
                "description": "Optional Audience claim to verify in the JWT.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the kubernetes backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_service_account_names": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of service account names able to access this role. If set to `[\"*\"]` all names are allowed, both this and bound_service_account_namespaces can not be \"*\".",
                "description_kind": "plain",
                "required": true
              },
              "bound_service_account_namespaces": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of namespaces allowed to access this role. If set to `[\"*\"]` all namespaces are allowed, both this and bound_service_account_names can not be set to \"*\".",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kubernetes_secret_backend": {
          "version": 0,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount",
                "description_kind": "plain",
                "optional": true
              },
              "disable_local_ca_jwt": {
                "type": "bool",
                "description": "Disable defaulting to the local CA certificate and service account JWT when running in a Kubernetes pod.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing plugin workload identity tokens",
                "description_kind": "plain",
                "optional": true
              },
              "kubernetes_ca_cert": {
                "type": "string",
                "description": "A PEM-encoded CA certificate used by the secret engine to verify the Kubernetes API server certificate. Defaults to the local pod\u2019s CA if found, or otherwise the host's root CA set.",
                "description_kind": "plain",
                "optional": true
              },
              "kubernetes_host": {
                "type": "string",
                "description": "The Kubernetes API URL to connect to.",
                "description_kind": "plain",
                "optional": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Local mount flag that can be explicitly set to true to enforce local mount in HA environment",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Where the secret backend will be mounted",
                "description_kind": "plain",
                "required": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service_account_jwt": {
                "type": "string",
                "description": "The JSON web token of the service account used by the secrets engine to manage Kubernetes credentials. Defaults to the local pod\u2019s JWT if found.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kubernetes_secret_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_kubernetes_namespace_selector": {
                "type": "string",
                "description": "A label selector for Kubernetes namespaces in which credentials can begenerated. Accepts either a JSON or YAML object. The value should be of typeLabelSelector. If set with `allowed_kubernetes_namespace`, the conditions are `OR`ed.",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_kubernetes_namespaces": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of Kubernetes namespaces this role can generate credentials for. If set to '*' all namespaces are allowed. If set with`allowed_kubernetes_namespace_selector`, the conditions are `OR`ed.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "The mount path for the Kubernetes secrets engine.",
                "description_kind": "plain",
                "required": true
              },
              "extra_annotations": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Additional annotations to apply to all generated Kubernetes objects.",
                "description_kind": "plain",
                "optional": true
              },
              "extra_labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Additional labels to apply to all generated Kubernetes objects.",
                "description_kind": "plain",
                "optional": true
              },
              "generated_role_rules": {
                "type": "string",
                "description": "The Role or ClusterRole rules to use when generating a role. Accepts either JSON or YAML formatted rules. Mutually exclusive with 'service_account_name' and 'kubernetes_role_name'. If set, the entire chain of Kubernetes objects will be generated when credentials are requested.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "kubernetes_role_name": {
                "type": "string",
                "description": "The pre-existing Role or ClusterRole to bind a generated service account to. Mutually exclusive with 'service_account_name' and 'generated_role_rules'. If set, Kubernetes token, service account, and role binding objects will be created when credentials are requested.",
                "description_kind": "plain",
                "optional": true
              },
              "kubernetes_role_type": {
                "type": "string",
                "description": "Specifies whether the Kubernetes role is a Role or ClusterRole.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "name_template": {
                "type": "string",
                "description": "The name template to use when generating service accounts, roles and role bindings. If unset, a default template is used.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "service_account_name": {
                "type": "string",
                "description": "The pre-existing service account to generate tokens for. Mutually exclusive with 'kubernetes_role_name' and 'generated_role_rules'. If set, only a Kubernetes token will be created when credentials are requested.",
                "description_kind": "plain",
                "optional": true
              },
              "token_default_ttl": {
                "type": "number",
                "description": "The default TTL for generated Kubernetes tokens in seconds.",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum TTL for generated Kubernetes tokens in seconds.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kv_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of strings read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "data_json": {
                "type": "string",
                "description": "JSON-encoded secret data to write.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path of the KV-V1 secret.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kv_secret_backend_v2": {
          "version": 0,
          "block": {
            "attributes": {
              "cas_required": {
                "type": "bool",
                "description": "If true, all keys will require the cas parameter to be set on all write requests.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delete_version_after": {
                "type": "number",
                "description": "If set, specifies the length of time before a version is deleted",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_versions": {
                "type": "number",
                "description": "The number of versions to keep per key.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "Path where KV-V2 engine is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kv_secret_v2": {
          "version": 0,
          "block": {
            "attributes": {
              "cas": {
                "type": "number",
                "description": "This flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write to be successful, cas must be set to the current version of the secret.",
                "description_kind": "plain",
                "optional": true
              },
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of strings read from Vault.",
                "description_kind": "plain",
                "deprecated": true,
                "computed": true,
                "sensitive": true
              },
              "data_json": {
                "type": "string",
                "description": "JSON-encoded secret data to write.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "data_json_wo": {
                "type": "string",
                "description": "Write-Only JSON-encoded secret data to write.",
                "description_kind": "plain",
                "optional": true
              },
              "data_json_wo_version": {
                "type": "number",
                "description": "Version counter for write-only secret data.",
                "description_kind": "plain",
                "optional": true
              },
              "delete_all_versions": {
                "type": "bool",
                "description": "If set to true, permanently deletes all versions for the specified key.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_read": {
                "type": "bool",
                "description": "If set to true, disables reading secret from Vault; note: drift won't be detected.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with this secret read from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "Path where KV-V2 engine is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Full name of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "An object that holds option settings.",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path where the KV-V2 secret will be written.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "block_types": {
              "custom_metadata": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cas_required": {
                      "type": "bool",
                      "description": "If true, all keys will require the cas parameter to be set on all write requests.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "data": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map of arbitrary string to string valued user-provided metadata meant to describe the secret.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "delete_version_after": {
                      "type": "number",
                      "description": "If set, specifies the length of time before a version is deleted.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_versions": {
                      "type": "number",
                      "description": "The number of versions to keep per key.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Custom metadata to be set for the secret.",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ldap_auth_backend": {
          "version": 2,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The accessor of the LDAP auth backend",
                "description_kind": "plain",
                "computed": true
              },
              "binddn": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bindpass": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true,
                "sensitive": true
              },
              "case_sensitive_names": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "certificate": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "client_tls_cert": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "client_tls_key": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true,
                "sensitive": true
              },
              "connection_timeout": {
                "type": "number",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "deny_null_bind": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "discoverdn": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "groupattr": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "groupdn": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "groupfilter": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "insecure_tls": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "local": {
                "type": "bool",
                "description": "Specifies if the auth method is local only",
                "description_kind": "plain",
                "optional": true
              },
              "max_page_size": {
                "type": "number",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "starttls": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tls_max_version": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tls_min_version": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              },
              "upndomain": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "url": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "use_token_groups": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "userattr": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "userdn": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "userfilter": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "username_as_alias": {
                "type": "bool",
                "description": "Force the auth method to use the username passed by the user as the alias name.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ldap_auth_backend_group": {
          "version": 1,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groupname": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ldap_auth_backend_user": {
          "version": 1,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "username": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ldap_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "binddn": {
                "type": "string",
                "description": "Distinguished name of object to bind when performing user and group search.",
                "description_kind": "plain",
                "required": true
              },
              "bindpass": {
                "type": "string",
                "description": "LDAP password for searching for the user DN.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "certificate": {
                "type": "string",
                "description": "CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded.",
                "description_kind": "plain",
                "optional": true
              },
              "client_tls_cert": {
                "type": "string",
                "description": "Client certificate to provide to the LDAP server, must be x509 PEM encoded.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "client_tls_key": {
                "type": "string",
                "description": "Client certificate key to provide to the LDAP server, must be x509 PEM encoded.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "connection_timeout": {
                "type": "number",
                "description": "Timeout, in seconds, when attempting to connect to the LDAP server before trying the next URL in the configuration.",
                "description_kind": "plain",
                "optional": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount",
                "description_kind": "plain",
                "optional": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing plugin workload identity tokens",
                "description_kind": "plain",
                "optional": true
              },
              "insecure_tls": {
                "type": "bool",
                "description": "Skip LDAP server SSL Certificate verification - insecure and not recommended for production use.",
                "description_kind": "plain",
                "optional": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Local mount flag that can be explicitly set to true to enforce local mount in HA environment",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "password_policy": {
                "type": "string",
                "description": "Name of the password policy to use to generate passwords.",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The path where the LDAP secrets backend is mounted.",
                "description_kind": "plain",
                "optional": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "request_timeout": {
                "type": "number",
                "description": "Timeout, in seconds, for the connection when making requests against the server before returning back an error.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "schema": {
                "type": "string",
                "description": "The LDAP schema to use when storing entry passwords. Valid schemas include openldap, ad, and racf.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "skip_static_role_import_rotation": {
                "type": "bool",
                "description": "Skip rotation of static role secrets on import.",
                "description_kind": "plain",
                "optional": true
              },
              "starttls": {
                "type": "bool",
                "description": "Issue a StartTLS command after establishing unencrypted connection.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "upndomain": {
                "type": "string",
                "description": "Enables userPrincipalDomain login with [username]@UPNDomain.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "url": {
                "type": "string",
                "description": "LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "userattr": {
                "type": "string",
                "description": "Attribute used for users (default: cn)",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "userdn": {
                "type": "string",
                "description": "LDAP domain to use for users (eg: ou=People,dc=example,dc=org)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ldap_secret_backend_dynamic_role": {
          "version": 0,
          "block": {
            "attributes": {
              "creation_ldif": {
                "type": "string",
                "description": "A templatized LDIF string used to create a user account. May contain multiple entries.",
                "description_kind": "plain",
                "required": true
              },
              "default_ttl": {
                "type": "number",
                "description": "Specifies the TTL for the leases associated with this role.",
                "description_kind": "plain",
                "optional": true
              },
              "deletion_ldif": {
                "type": "string",
                "description": "A templatized LDIF string used to delete the user account once its TTL has expired. This may contain multiple LDIF entries.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_ttl": {
                "type": "number",
                "description": "Specifies the maximum TTL for the leases associated with this role.",
                "description_kind": "plain",
                "optional": true
              },
              "mount": {
                "type": "string",
                "description": "The path where the LDAP secrets backend is mounted.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "rollback_ldif": {
                "type": "string",
                "description": "A templatized LDIF string used to attempt to rollback any changes in the event that execution of the creation_ldif results in an error. This may contain multiple LDIF entries.",
                "description_kind": "plain",
                "optional": true
              },
              "username_template": {
                "type": "string",
                "description": "A template used to generate a dynamic username. This will be used to fill in the .Username field within the creation_ldif string.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ldap_secret_backend_library_set": {
          "version": 0,
          "block": {
            "attributes": {
              "disable_check_in_enforcement": {
                "type": "bool",
                "description": "Disable enforcing that service accounts must be checked in by the entity or client token that checked them out.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_ttl": {
                "type": "number",
                "description": "The maximum amount of time a check-out last with renewal before Vault automatically checks it back in. Defaults to 24 hours.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "The path where the LDAP secrets backend is mounted.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of the set of service accounts.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "service_account_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The names of all the service accounts that can be checked out from this set.",
                "description_kind": "plain",
                "required": true
              },
              "ttl": {
                "type": "number",
                "description": "The maximum amount of time a single check-out lasts before Vault automatically checks it back in. Defaults to 24 hours.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ldap_secret_backend_static_role": {
          "version": 0,
          "block": {
            "attributes": {
              "dn": {
                "type": "string",
                "description": "Distinguished name (DN) of the existing LDAP entry to manage password rotation for.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "The path where the LDAP secrets backend is mounted.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "rotation_period": {
                "type": "number",
                "description": "How often Vault should rotate the password of the user entry.",
                "description_kind": "plain",
                "required": true
              },
              "skip_import_rotation": {
                "type": "bool",
                "description": "Skip rotation of the password on import.",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "The username of the existing LDAP entry to manage password rotation for.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_managed_keys": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "aws": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "access_key": {
                      "type": "string",
                      "description": "The AWS access key to use",
                      "description_kind": "plain",
                      "required": true
                    },
                    "allow_generate_key": {
                      "type": "bool",
                      "description": "If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow_replace_key": {
                      "type": "bool",
                      "description": "Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow_store_key": {
                      "type": "bool",
                      "description": "Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "any_mount": {
                      "type": "bool",
                      "description": "Allow usage from any mount point within the namespace if 'true'",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "curve": {
                      "type": "string",
                      "description": "The curve to use for an ECDSA key. Used when key_type is 'ECDSA'. Required if 'allow_generate_key' is true",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "Used to specify a custom AWS endpoint",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "key_bits": {
                      "type": "string",
                      "description": "The size in bits for an RSA key. This field is required when 'key_type' is 'RSA'",
                      "description_kind": "plain",
                      "required": true
                    },
                    "key_type": {
                      "type": "string",
                      "description": "The type of key to use",
                      "description_kind": "plain",
                      "required": true
                    },
                    "kms_key": {
                      "type": "string",
                      "description": "An identifier for the key",
                      "description_kind": "plain",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique lowercase name that serves as identifying the key",
                      "description_kind": "plain",
                      "required": true
                    },
                    "region": {
                      "type": "string",
                      "description": "The AWS region where the keys are stored (or will be stored)",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "secret_key": {
                      "type": "string",
                      "description": "The AWS secret key to use",
                      "description_kind": "plain",
                      "required": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "ID of the managed key read from Vault",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "description": "Configuration block for AWS Managed Keys",
                  "description_kind": "plain"
                }
              },
              "azure": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allow_generate_key": {
                      "type": "bool",
                      "description": "If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow_replace_key": {
                      "type": "bool",
                      "description": "Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow_store_key": {
                      "type": "bool",
                      "description": "Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "any_mount": {
                      "type": "bool",
                      "description": "Allow usage from any mount point within the namespace if 'true'",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "client_id": {
                      "type": "string",
                      "description": "The client id for credentials to query the Azure APIs",
                      "description_kind": "plain",
                      "required": true
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The client secret for credentials to query the Azure APIs",
                      "description_kind": "plain",
                      "required": true
                    },
                    "environment": {
                      "type": "string",
                      "description": "The Azure Cloud environment API endpoints to use",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_bits": {
                      "type": "string",
                      "description": "The size in bits for an RSA key. This field is required when 'key_type' is 'RSA' or when 'allow_generate_key' is true",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "key_name": {
                      "type": "string",
                      "description": "The Key Vault key to use for encryption and decryption",
                      "description_kind": "plain",
                      "required": true
                    },
                    "key_type": {
                      "type": "string",
                      "description": "The type of key to use",
                      "description_kind": "plain",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique lowercase name that serves as identifying the key",
                      "description_kind": "plain",
                      "required": true
                    },
                    "resource": {
                      "type": "string",
                      "description": "The Azure Key Vault resource's DNS Suffix to connect to",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "tenant_id": {
                      "type": "string",
                      "description": "The tenant id for the Azure Active Directory organization",
                      "description_kind": "plain",
                      "required": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "ID of the managed key read from Vault",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "vault_name": {
                      "type": "string",
                      "description": "The Key Vault vault to use the encryption keys for encryption and decryption",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Configuration block for Azure Managed Keys",
                  "description_kind": "plain"
                }
              },
              "pkcs": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "allow_generate_key": {
                      "type": "bool",
                      "description": "If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow_replace_key": {
                      "type": "bool",
                      "description": "Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow_store_key": {
                      "type": "bool",
                      "description": "Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "any_mount": {
                      "type": "bool",
                      "description": "Allow usage from any mount point within the namespace if 'true'",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "curve": {
                      "type": "string",
                      "description": "Supplies the curve value when using the 'CKM_ECDSA' mechanism. Required if 'allow_generate_key' is true",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "force_rw_session": {
                      "type": "string",
                      "description": "Force all operations to open up a read-write session to the HSM",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "key_bits": {
                      "type": "string",
                      "description": "Supplies the size in bits of the key when using 'CKM_RSA_PKCS_PSS', 'CKM_RSA_PKCS_OAEP' or 'CKM_RSA_PKCS' as a value for 'mechanism'. Required if 'allow_generate_key' is true",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "key_id": {
                      "type": "string",
                      "description": "The id of a PKCS#11 key to use",
                      "description_kind": "plain",
                      "required": true
                    },
                    "key_label": {
                      "type": "string",
                      "description": "The label of the key to use",
                      "description_kind": "plain",
                      "required": true
                    },
                    "library": {
                      "type": "string",
                      "description": "The name of the kms_library stanza to use from Vault's config to lookup the local library path",
                      "description_kind": "plain",
                      "required": true
                    },
                    "mechanism": {
                      "type": "string",
                      "description": "The encryption/decryption mechanism to use, specified as a hexadecimal (prefixed by 0x) string.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique lowercase name that serves as identifying the key",
                      "description_kind": "plain",
                      "required": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "The PIN for login",
                      "description_kind": "plain",
                      "required": true
                    },
                    "slot": {
                      "type": "string",
                      "description": "The slot number to use, specified as a string in a decimal format (e.g. '2305843009213693953')",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_label": {
                      "type": "string",
                      "description": "The slot token label to use",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "ID of the managed key read from Vault",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "description": "Configuration block for PKCS Managed Keys",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_mfa_duo": {
          "version": 0,
          "block": {
            "attributes": {
              "api_hostname": {
                "type": "string",
                "description": "API hostname for Duo.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "integration_key": {
                "type": "string",
                "description": "Integration key for Duo.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "mount_accessor": {
                "type": "string",
                "description": "The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the MFA method.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "push_info": {
                "type": "string",
                "description": "Push information for Duo.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_key": {
                "type": "string",
                "description": "Secret key for Duo.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "username_format": {
                "type": "string",
                "description": "A format string for mapping Identity names to MFA method names. Values to substitute should be placed in `{{}}`.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_mfa_okta": {
          "version": 0,
          "block": {
            "attributes": {
              "api_token": {
                "type": "string",
                "description": "Okta API key.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "base_url": {
                "type": "string",
                "description": "If set, will be used as the base domain for API requests.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "ID computed by Vault.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount_accessor": {
                "type": "string",
                "description": "The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the MFA method.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "org_name": {
                "type": "string",
                "description": "Name of the organization to be used in the Okta API.",
                "description_kind": "plain",
                "required": true
              },
              "primary_email": {
                "type": "bool",
                "description": "If set to true, the username will only match the primary email for the account.",
                "description_kind": "plain",
                "optional": true
              },
              "username_format": {
                "type": "string",
                "description": "A format string for mapping Identity names to MFA method names. Values to substitute should be placed in `{{}}`.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_mfa_pingid": {
          "version": 0,
          "block": {
            "attributes": {
              "admin_url": {
                "type": "string",
                "description": "Admin URL computed by Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "authenticator_url": {
                "type": "string",
                "description": "Authenticator URL computed by Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "ID computed by Vault.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idp_url": {
                "type": "string",
                "description": "IDP URL computed by Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "mount_accessor": {
                "type": "string",
                "description": "The mount to tie this method to for use in automatic mappings. The mapping will use the Name field of Aliases associated with this mount as the username in the mapping.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the MFA method.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description": "Namespace ID computed by Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "org_alias": {
                "type": "string",
                "description": "Org Alias computed by Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "settings_file_base64": {
                "type": "string",
                "description": "A base64-encoded third-party settings file retrieved from PingID's configuration page.",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Type of configuration computed by Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "use_signature": {
                "type": "bool",
                "description": "If set, enables use of PingID signature. Computed by Vault",
                "description_kind": "plain",
                "computed": true
              },
              "username_format": {
                "type": "string",
                "description": "A format string for mapping Identity names to MFA method names. Values to substitute should be placed in `{{}}`.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_mfa_totp": {
          "version": 0,
          "block": {
            "attributes": {
              "algorithm": {
                "type": "string",
                "description": "Specifies the hashing algorithm used to generate the TOTP code. Options include 'SHA1', 'SHA256' and 'SHA512'.",
                "description_kind": "plain",
                "optional": true
              },
              "digits": {
                "type": "number",
                "description": "The number of digits in the generated TOTP token. This value can either be 6 or 8.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "ID computed by Vault.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "The name of the key's issuing organization.",
                "description_kind": "plain",
                "required": true
              },
              "key_size": {
                "type": "number",
                "description": "Specifies the size in bytes of the generated key.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the MFA method.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "period": {
                "type": "number",
                "description": "The length of time used to generate a counter for the TOTP token calculation.",
                "description_kind": "plain",
                "optional": true
              },
              "qr_size": {
                "type": "number",
                "description": "The pixel size of the generated square QR code.",
                "description_kind": "plain",
                "optional": true
              },
              "skew": {
                "type": "number",
                "description": "The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_mongodbatlas_secret_backend": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "Path where MongoDB Atlas secret backend is mounted",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path where MongoDB Atlas configuration is located",
                "description_kind": "plain",
                "computed": true
              },
              "private_key": {
                "type": "string",
                "description": "The Private Programmatic API Key used to connect with MongoDB Atlas API",
                "description_kind": "plain",
                "required": true
              },
              "public_key": {
                "type": "string",
                "description": "The Public Programmatic API Key used to authenticate with the MongoDB Atlas API",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_mongodbatlas_secret_role": {
          "version": 0,
          "block": {
            "attributes": {
              "cidr_blocks": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Whitelist entry in CIDR notation to be added for the API key",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "IP address to be added to the whitelist for the API key",
                "description_kind": "plain",
                "optional": true
              },
              "max_ttl": {
                "type": "string",
                "description": "The maximum allowed lifetime of credentials issued using this role",
                "description_kind": "plain",
                "optional": true
              },
              "mount": {
                "type": "string",
                "description": "Path where MongoDB Atlas secret backend is mounted",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the role",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "organization_id": {
                "type": "string",
                "description": "ID for the organization to which the target API Key belongs",
                "description_kind": "plain",
                "optional": true
              },
              "project_id": {
                "type": "string",
                "description": "ID for the project to which the target API Key belongs",
                "description_kind": "plain",
                "optional": true
              },
              "project_roles": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Roles assigned when an org API key is assigned to a project API key",
                "description_kind": "plain",
                "optional": true
              },
              "roles": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of roles that the API Key needs to have",
                "description_kind": "plain",
                "required": true
              },
              "ttl": {
                "type": "string",
                "description": "Duration in seconds after which the issued credential should expire",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_mount": {
          "version": 0,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing plugin workload identity tokens",
                "description_kind": "plain",
                "optional": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Local mount flag that can be explicitly set to true to enforce local mount in HA environment",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for tokens and secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Where the secret backend will be mounted",
                "description_kind": "plain",
                "required": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of the backend, such as 'aws'",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_namespace": {
          "version": 0,
          "block": {
            "attributes": {
              "custom_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Custom metadata describing this namespace. Value type is map[string]string.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description": "Namespace ID.",
                "description_kind": "plain",
                "computed": true
              },
              "path": {
                "type": "string",
                "description": "Namespace path.",
                "description_kind": "plain",
                "required": true
              },
              "path_fq": {
                "type": "string",
                "description": "The fully qualified namespace path.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_nomad_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "address": {
                "type": "string",
                "description": "Specifies the address of the Nomad instance, provided as \"protocol://host:port\" like \"http://127.0.0.1:4646\".",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "The mount path for the Nomad backend.",
                "description_kind": "plain",
                "optional": true
              },
              "ca_cert": {
                "type": "string",
                "description": "CA certificate to use when verifying Nomad server certificate, must be x509 PEM encoded.",
                "description_kind": "plain",
                "optional": true
              },
              "client_cert": {
                "type": "string",
                "description": "Client certificate used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "client_key": {
                "type": "string",
                "description": "Client key used for Nomad's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for secrets in seconds.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing plugin workload identity tokens",
                "description_kind": "plain",
                "optional": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Mark the secrets engine as local-only. Local engines are not replicated or removed by replication. Tolerance duration to use when checking the last rotation time.",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for secrets in seconds.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_token_name_length": {
                "type": "number",
                "description": "Specifies the maximum length to use for the name of the Nomad token generated with Generate Credential. If omitted, 0 is used and ignored, defaulting to the max value allowed by the Nomad version.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_ttl": {
                "type": "number",
                "description": "Maximum possible lease duration for secrets in seconds.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "token": {
                "type": "string",
                "description": "Specifies the Nomad Management token to use.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "ttl": {
                "type": "number",
                "description": "Maximum possible lease duration for secrets in seconds.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_nomad_secret_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The mount path for the Nomad backend.",
                "description_kind": "plain",
                "required": true
              },
              "global": {
                "type": "bool",
                "description": "Specifies if the token should be global.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Comma separated list of Nomad policies the token is going to be created against. These need to be created beforehand in Nomad.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Specifies the type of token to create when using this role. Valid values are \"client\" or \"management\".",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_oci_auth_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The accessor of the auth backend",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "disable_automated_rotation": {
                "type": "bool",
                "description": "Stops rotation of the root credential until set to false.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "home_tenancy_id": {
                "type": "string",
                "description": " The Tenancy OCID of your OCI account.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_period": {
                "type": "number",
                "description": "The period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_schedule": {
                "type": "string",
                "description": "The cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
                "description_kind": "plain",
                "optional": true
              },
              "rotation_window": {
                "type": "number",
                "description": "The maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
                "description_kind": "plain",
                "optional": true
              },
              "tune": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "allowed_response_headers": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_request_keys": [
                        "list",
                        "string"
                      ],
                      "audit_non_hmac_response_keys": [
                        "list",
                        "string"
                      ],
                      "default_lease_ttl": "string",
                      "listing_visibility": "string",
                      "max_lease_ttl": "string",
                      "passthrough_request_headers": [
                        "list",
                        "string"
                      ],
                      "token_type": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_oci_auth_backend_role": {
          "version": 1,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "ocid_list": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of Group or Dynamic Group OCIDs that can take this role.",
                "description_kind": "plain",
                "optional": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_okta_auth_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The mount accessor related to the auth mount.",
                "description_kind": "plain",
                "computed": true
              },
              "base_url": {
                "type": "string",
                "description": "The Okta url. Examples: oktapreview.com, okta.com (default)",
                "description_kind": "plain",
                "optional": true
              },
              "bypass_okta_mfa": {
                "type": "bool",
                "description": "When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "The description of the auth backend",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "group": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "group_name": "string",
                      "policies": [
                        "set",
                        "string"
                      ]
                    }
                  ]
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "organization": {
                "type": "string",
                "description": "The Okta organization. This will be the first part of the url https://XXX.okta.com.",
                "description_kind": "plain",
                "required": true
              },
              "path": {
                "type": "string",
                "description": "path to mount the backend",
                "description_kind": "plain",
                "optional": true
              },
              "token": {
                "type": "string",
                "description": "The Okta API token. This is required to query Okta for user group membership. If this is not supplied only locally configured groups will be enabled.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              },
              "user": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "groups": [
                        "set",
                        "string"
                      ],
                      "policies": [
                        "set",
                        "string"
                      ],
                      "username": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_okta_auth_backend_group": {
          "version": 0,
          "block": {
            "attributes": {
              "group_name": {
                "type": "string",
                "description": "Name of the Okta group",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path to the Okta auth backend",
                "description_kind": "plain",
                "required": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Policies to associate with this group",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_okta_auth_backend_user": {
          "version": 0,
          "block": {
            "attributes": {
              "groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Groups within the Okta auth backend to associate with this user",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path to the Okta auth backend",
                "description_kind": "plain",
                "required": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Policies to associate with this user",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "Name of the user within Okta",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_password_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the password policy.",
                "description_kind": "markdown",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "markdown",
                "optional": true
              },
              "policy": {
                "type": "string",
                "description": "The password policy document",
                "description_kind": "markdown",
                "required": true
              }
            },
            "description": "Provides a resource to manage Password Policies.",
            "description_kind": "markdown"
          }
        },
        "vault_pki_secret_backend_acme_eab": {
          "version": 0,
          "block": {
            "attributes": {
              "acme_directory": {
                "type": "string",
                "description": "The ACME directory to which the key belongs",
                "description_kind": "plain",
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to",
                "description_kind": "plain",
                "required": true
              },
              "created_on": {
                "type": "string",
                "description": "An RFC3339 formatted date time when the EAB token was created",
                "description_kind": "plain",
                "computed": true
              },
              "eab_id": {
                "type": "string",
                "description": "The identifier of a specific ACME EAB token",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "Specifies the issuer reference to use for directory path",
                "description_kind": "plain",
                "optional": true
              },
              "key": {
                "type": "string",
                "description": "The ACME EAB token",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "key_type": {
                "type": "string",
                "description": "The key type of the EAB key",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "Specifies the role to use for directory path",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Manages Vault PKI ACME EAB bindings",
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_cert": {
          "version": 0,
          "block": {
            "attributes": {
              "alt_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative names.",
                "description_kind": "plain",
                "optional": true
              },
              "auto_renew": {
                "type": "bool",
                "description": "If enabled, a new certificate will be generated if the expiration is within min_seconds_remaining",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "ca_chain": {
                "type": "string",
                "description": "The CA chain.",
                "description_kind": "plain",
                "computed": true
              },
              "cert_metadata": {
                "type": "string",
                "description": "A base 64 encoded value or an empty string to associate with the certificate's serial number. The role's no_store_metadata must be set to false, otherwise an error is returned when specified.",
                "description_kind": "plain",
                "optional": true
              },
              "certificate": {
                "type": "string",
                "description": "The certicate.",
                "description_kind": "plain",
                "computed": true
              },
              "common_name": {
                "type": "string",
                "description": "CN of the certificate to create.",
                "description_kind": "plain",
                "required": true
              },
              "exclude_cn_from_sans": {
                "type": "bool",
                "description": "Flag to exclude CN from SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "expiration": {
                "type": "number",
                "description": "The certificate expiration as a Unix-style timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "format": {
                "type": "string",
                "description": "The format of data.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative IPs.",
                "description_kind": "plain",
                "optional": true
              },
              "issuer_ref": {
                "type": "string",
                "description": "Specifies the default issuer of this request.",
                "description_kind": "plain",
                "optional": true
              },
              "issuing_ca": {
                "type": "string",
                "description": "The issuing CA.",
                "description_kind": "plain",
                "computed": true
              },
              "min_seconds_remaining": {
                "type": "number",
                "description": "Generate a new certificate when the expiration is within this number of seconds",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the role to create the certificate against.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "not_after": {
                "type": "string",
                "description": "Set the Not After field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ. Supports the Y10K end date for IEEE 802.1AR-2018 standard devices, 9999-12-31T23:59:59Z.",
                "description_kind": "plain",
                "optional": true
              },
              "other_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of other SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "private_key": {
                "type": "string",
                "description": "The private key.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "private_key_format": {
                "type": "string",
                "description": "The private key format.",
                "description_kind": "plain",
                "optional": true
              },
              "private_key_type": {
                "type": "string",
                "description": "The private key type.",
                "description_kind": "plain",
                "computed": true
              },
              "renew_pending": {
                "type": "bool",
                "description": "Initially false, and then set to true during refresh once the expiration is less than min_seconds_remaining in the future.",
                "description_kind": "plain",
                "computed": true
              },
              "revoke": {
                "type": "bool",
                "description": "Revoke the certificate upon resource destruction.",
                "description_kind": "plain",
                "optional": true
              },
              "revoke_with_key": {
                "type": "bool",
                "description": "Revoke the certificate with private key method upon resource destruction.",
                "description_kind": "plain",
                "optional": true
              },
              "serial_number": {
                "type": "string",
                "description": "The serial number.",
                "description_kind": "plain",
                "computed": true
              },
              "ttl": {
                "type": "string",
                "description": "Time to live.",
                "description_kind": "plain",
                "optional": true
              },
              "uri_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative URIs.",
                "description_kind": "plain",
                "optional": true
              },
              "user_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of Subject User IDs.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_acme": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_role_ext_key_usage": {
                "type": "bool",
                "description": "Specifies whether the ExtKeyUsage field from a role is used.",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_issuers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies which issuers are allowed for use with ACME.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allowed_roles": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies which roles are allowed for use with ACME.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "default_directory_policy": {
                "type": "string",
                "description": "Specifies the policy to be used for non-role-qualified ACME requests.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "dns_resolver": {
                "type": "string",
                "description": "DNS resolver to use for domain resolution on this mount. Must be in the format <host>:<port>, with both parts mandatory.",
                "description_kind": "plain",
                "optional": true
              },
              "eab_policy": {
                "type": "string",
                "description": "Specifies the policy to use for external account binding behaviour.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Specifies whether ACME is enabled.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_ttl": {
                "type": "number",
                "description": "Specifies the maximum TTL in seconds for certificates issued by ACME.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_auto_tidy": {
          "version": 0,
          "block": {
            "attributes": {
              "acme_account_safety_buffer": {
                "type": "string",
                "description": "The amount of time that must pass after creation that an account with no orders is marked revoked, and the amount of time after being marked revoked or deactivated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "The path of the PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "enabled": {
                "type": "bool",
                "description": "Specifies whether automatic tidy is enabled or not.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "interval_duration": {
                "type": "string",
                "description": "Interval at which to run an auto-tidy operation. This is the time between tidy invocations (after one finishes to the start of the next).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer_safety_buffer": {
                "type": "string",
                "description": "The amount of extra time that must have passed beyond issuer's expiration before it is removed from the backend storage.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "maintain_stored_certificate_counts": {
                "type": "bool",
                "description": "This configures whether stored certificate are counted upon initialization of the backend, and whether during normal operation, a running count of certificates stored is maintained.",
                "description_kind": "plain",
                "optional": true
              },
              "max_startup_backoff_duration": {
                "type": "string",
                "description": "The maximum amount of time auto-tidy will be delayed after startup.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "min_startup_backoff_duration": {
                "type": "string",
                "description": "The minimum amount of time auto-tidy will be delayed after startup.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "pause_duration": {
                "type": "string",
                "description": "The amount of time to wait between processing certificates.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "publish_stored_certificate_count_metrics": {
                "type": "bool",
                "description": "This configures whether the stored certificate count is published to the metrics consumer.",
                "description_kind": "plain",
                "optional": true
              },
              "revocation_queue_safety_buffer": {
                "type": "string",
                "description": "The amount of time that must pass from the cross-cluster revocation request being initiated to when it will be slated for removal.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "safety_buffer": {
                "type": "string",
                "description": "The amount of extra time that must have passed beyond certificate expiration before it is removed from the backend storage and/or revocation list.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tidy_acme": {
                "type": "bool",
                "description": "Set to true to enable tidying ACME accounts, orders and authorizations.",
                "description_kind": "plain",
                "optional": true
              },
              "tidy_cert_metadata": {
                "type": "bool",
                "description": "Set to true to enable tidying up certificate metadata.",
                "description_kind": "plain",
                "optional": true
              },
              "tidy_cert_store": {
                "type": "bool",
                "description": "Set to true to enable tidying up the certificate store",
                "description_kind": "plain",
                "optional": true
              },
              "tidy_cmpv2_nonce_store": {
                "type": "bool",
                "description": "Set to true to enable tidying up the CMPv2 nonce store.",
                "description_kind": "plain",
                "optional": true
              },
              "tidy_cross_cluster_revoked_certs": {
                "type": "bool",
                "description": "Set to true to enable tidying up the cross-cluster revoked certificate store.",
                "description_kind": "plain",
                "optional": true
              },
              "tidy_expired_issuers": {
                "type": "bool",
                "description": "Set to true to automatically remove expired issuers past the issuer_safety_buffer. No keys will be removed as part of this operation.",
                "description_kind": "plain",
                "optional": true
              },
              "tidy_move_legacy_ca_bundle": {
                "type": "bool",
                "description": "Set to true to move the legacy ca_bundle from /config/ca_bundle to /config/ca_bundle.bak.",
                "description_kind": "plain",
                "optional": true
              },
              "tidy_revocation_queue": {
                "type": "bool",
                "description": "Set to true to remove stale revocation queue entries that haven't been confirmed by any active cluster.",
                "description_kind": "plain",
                "optional": true
              },
              "tidy_revoked_cert_issuer_associations": {
                "type": "bool",
                "description": "Set to true to validate issuer associations on revocation entries. This helps increase the performance of CRL building and OCSP responses.",
                "description_kind": "plain",
                "optional": true
              },
              "tidy_revoked_certs": {
                "type": "bool",
                "description": "Set to true to remove all invalid and expired certificates from storage. A revoked storage entry is considered invalid if the entry is empty, or the value within the entry is empty. If a certificate is removed due to expiry, the entry will also be removed from the CRL, and the CRL will be rotated.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_ca": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "pem_bundle": {
                "type": "string",
                "description": "The key and certificate PEM bundle.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_cluster": {
          "version": 0,
          "block": {
            "attributes": {
              "aia_path": {
                "type": "string",
                "description": "Path to the cluster's AIA distribution point.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path to the cluster's API mount path.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_cmpv2": {
          "version": 0,
          "block": {
            "attributes": {
              "audit_fields": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Fields parsed from the CSR that appear in the audit and can be used by sentinel policies",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to",
                "description_kind": "plain",
                "required": true
              },
              "default_path_policy": {
                "type": "string",
                "description": "Can be sign-verbatim or a role given by role:<role_name>",
                "description_kind": "plain",
                "optional": true
              },
              "disabled_validations": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A comma-separated list of validations not to perform on CMPv2 messages.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_sentinel_parsing": {
                "type": "bool",
                "description": "If set, parse out fields from the provided CSR making them available for Sentinel policies",
                "description_kind": "plain",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "description": "Specifies whether CMPv2 is enabled",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_updated": {
                "type": "string",
                "description": "A read-only timestamp representing the last time the configuration was updated",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "authenticators": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cert": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Lists the mount accessors CMPv2 should delegate authentication requests towards",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description": "Manages Vault PKI CMPv2 configuration",
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_est": {
          "version": 0,
          "block": {
            "attributes": {
              "audit_fields": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Fields parsed from the CSR that appear in the audit and can be used by sentinel policies",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to",
                "description_kind": "plain",
                "required": true
              },
              "default_mount": {
                "type": "bool",
                "description": "If set, this mount will register the default `.well-known/est` URL path. Only a single mount can enable this across a Vault cluster",
                "description_kind": "plain",
                "optional": true
              },
              "default_path_policy": {
                "type": "string",
                "description": "Required to be set if default_mount is enabled. Specifies the behavior for requests using the default EST label. Can be sign-verbatim or a role given by role:<role_name>",
                "description_kind": "plain",
                "optional": true
              },
              "enable_sentinel_parsing": {
                "type": "bool",
                "description": "If set, parse out fields from the provided CSR making them available for Sentinel policies",
                "description_kind": "plain",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "description": "Specifies whether EST is enabled",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label_to_path_policy": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Configures a pairing of an EST label with the redirected behavior for requests hitting that role. The path policy can be sign-verbatim or a role given by role:<role_name>. Labels must be unique across Vault cluster, and will register .well-known/est/<label> URL paths",
                "description_kind": "plain",
                "optional": true
              },
              "last_updated": {
                "type": "string",
                "description": "A read-only timestamp representing the last time the configuration was updated",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "authenticators": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cert": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "userpass": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Lists the mount accessors EST should delegate authentication requests towards",
                  "description_kind": "plain"
                },
                "max_items": 1
              }
            },
            "description": "Manages Vault PKI EST configuration",
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_issuers": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "default": {
                "type": "string",
                "description": "Specifies the default issuer by ID.",
                "description_kind": "plain",
                "optional": true
              },
              "default_follows_latest_issuer": {
                "type": "bool",
                "description": "Specifies whether a root creation or an issuer import operation updates the default issuer to the newly added issuer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_scep": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_digest_algorithms": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of allowed digest algorithms for SCEP requests",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allowed_encryption_algorithms": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of allowed encryption algorithms for SCEP requests",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to",
                "description_kind": "plain",
                "required": true
              },
              "default_path_policy": {
                "type": "string",
                "description": "Specifies the behavior for requests using the default SCEP label. Can be sign-verbatim or a role given by role:<role_name>",
                "description_kind": "plain",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "description": "Specifies whether SCEP is enabled",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_updated": {
                "type": "string",
                "description": "A read-only timestamp representing the last time the configuration was updated",
                "description_kind": "plain",
                "computed": true
              },
              "log_level": {
                "type": "string",
                "description": "The level of logging verbosity, affects only SCEP logs on this mount",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "restrict_ca_chain_to_issuer": {
                "type": "bool",
                "description": "If true, only return the issuer CA, otherwise the entire CA certificate chain will be returned if available from the PKI mount",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "authenticators": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "cert": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "The accessor and cert_role properties for cert auth backends",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "scep": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "The accessor property for SCEP auth backends",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Lists the mount accessors SCEP should delegate authentication requests towards",
                  "description_kind": "plain"
                },
                "max_items": 1
              },
              "external_validation": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "intune": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "The credentials to enable Microsoft Intune validation of SCEP requests",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "description": "Lists the 3rd party validation of SCEP requests",
                  "description_kind": "plain"
                }
              }
            },
            "description": "Manages Vault PKI SCEP configuration",
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_urls": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The path of the PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "crl_distribution_points": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the URL values for the CRL Distribution Points field.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_templating": {
                "type": "bool",
                "description": "Specifies that templating of AIA fields is allowed.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuing_certificates": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the URL values for the Issuing Certificate field.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "ocsp_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the URL values for the OCSP Servers field.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_crl_config": {
          "version": 0,
          "block": {
            "attributes": {
              "auto_rebuild": {
                "type": "bool",
                "description": "Enables or disables periodic rebuilding of the CRL upon expiry.",
                "description_kind": "plain",
                "optional": true
              },
              "auto_rebuild_grace_period": {
                "type": "string",
                "description": "Grace period before CRL expiry to attempt rebuild of CRL.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "The path of the PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "cross_cluster_revocation": {
                "type": "bool",
                "description": "Enable cross-cluster revocation request queues.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delta_rebuild_interval": {
                "type": "string",
                "description": "Interval to check for new revocations on, to regenerate the delta CRL.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "disable": {
                "type": "bool",
                "description": "Disables or enables CRL building",
                "description_kind": "plain",
                "optional": true
              },
              "enable_delta": {
                "type": "bool",
                "description": "Enables or disables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.",
                "description_kind": "plain",
                "optional": true
              },
              "expiry": {
                "type": "string",
                "description": "Specifies the time until expiration.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_crl_entries": {
                "type": "number",
                "description": "The maximum number of entries a CRL can contain. This option exists to prevent accidental runaway issuance/revocation from overloading Vault. If set to -1, the limit is disabled.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "ocsp_disable": {
                "type": "bool",
                "description": "Disables or enables the OCSP responder in Vault.",
                "description_kind": "plain",
                "optional": true
              },
              "ocsp_expiry": {
                "type": "string",
                "description": "The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "unified_crl": {
                "type": "bool",
                "description": "Enables unified CRL and OCSP building.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "unified_crl_on_existing_paths": {
                "type": "bool",
                "description": "Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_intermediate_cert_request": {
          "version": 0,
          "block": {
            "attributes": {
              "add_basic_constraints": {
                "type": "bool",
                "description": "Set 'CA: true' in a Basic Constraints extension. Only needed as\na workaround in some compatibility scenarios with Active Directory Certificate Services.",
                "description_kind": "plain",
                "optional": true
              },
              "alt_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative names.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "common_name": {
                "type": "string",
                "description": "CN of intermediate to create.",
                "description_kind": "plain",
                "required": true
              },
              "country": {
                "type": "string",
                "description": "The country.",
                "description_kind": "plain",
                "optional": true
              },
              "csr": {
                "type": "string",
                "description": "The CSR.",
                "description_kind": "plain",
                "computed": true
              },
              "exclude_cn_from_sans": {
                "type": "bool",
                "description": "Flag to exclude CN from SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "format": {
                "type": "string",
                "description": "The format of data.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative IPs.",
                "description_kind": "plain",
                "optional": true
              },
              "key_bits": {
                "type": "number",
                "description": "The number of bits to use.",
                "description_kind": "plain",
                "optional": true
              },
              "key_id": {
                "type": "string",
                "description": "The ID of the generated key.",
                "description_kind": "plain",
                "computed": true
              },
              "key_name": {
                "type": "string",
                "description": "When a new key is created with this request, optionally specifies the name for this.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_ref": {
                "type": "string",
                "description": "Specifies the key to use for generating this request.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_type": {
                "type": "string",
                "description": "The desired key type.",
                "description_kind": "plain",
                "optional": true
              },
              "key_usage": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specify the key usages to encode in the generated certificate.",
                "description_kind": "plain",
                "optional": true
              },
              "locality": {
                "type": "string",
                "description": "The locality.",
                "description_kind": "plain",
                "optional": true
              },
              "managed_key_id": {
                "type": "string",
                "description": "The ID of the previously configured managed key.",
                "description_kind": "plain",
                "optional": true
              },
              "managed_key_name": {
                "type": "string",
                "description": "The name of the previously configured managed key.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "organization": {
                "type": "string",
                "description": "The organization.",
                "description_kind": "plain",
                "optional": true
              },
              "other_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of other SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "ou": {
                "type": "string",
                "description": "The organization unit.",
                "description_kind": "plain",
                "optional": true
              },
              "postal_code": {
                "type": "string",
                "description": "The postal code.",
                "description_kind": "plain",
                "optional": true
              },
              "private_key": {
                "type": "string",
                "description": "The private key.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "private_key_format": {
                "type": "string",
                "description": "The private key format.",
                "description_kind": "plain",
                "optional": true
              },
              "private_key_type": {
                "type": "string",
                "description": "The private key type.",
                "description_kind": "plain",
                "computed": true
              },
              "province": {
                "type": "string",
                "description": "The province.",
                "description_kind": "plain",
                "optional": true
              },
              "serial_number": {
                "type": "string",
                "description": "The requested Subject's named serial number.",
                "description_kind": "plain",
                "optional": true
              },
              "signature_bits": {
                "type": "number",
                "description": "The number of bits to use in the signature algorithm.",
                "description_kind": "plain",
                "optional": true
              },
              "street_address": {
                "type": "string",
                "description": "The street address.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Type of intermediate to create. Must be either \"existing\", \"exported\", \"internal\" or \"kms\"",
                "description_kind": "plain",
                "required": true
              },
              "uri_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative URIs.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_intermediate_set_signed": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "certificate": {
                "type": "string",
                "description": "The certificate.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "imported_issuers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The imported issuers.",
                "description_kind": "plain",
                "computed": true
              },
              "imported_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The imported keys.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_issuer": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "crl_distribution_points": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the URL values for the CRL Distribution Points field.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_critical_extension_checks": {
                "type": "bool",
                "description": "This determines whether this issuer is able to issue certificates where the chain of trust (including the issued certificate) contain critical extensions not processed by Vault.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_name_checks": {
                "type": "bool",
                "description": "This determines whether this issuer is able to issue certificates where the chain of trust (including the final issued certificate) contains a link in which the subject of the issuing certificate does not match the named issuer of the certificate it signed.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_name_constraint_checks": {
                "type": "bool",
                "description": "This determines whether this issuer is able to issue certificates where the chain of trust (including the final issued certificate) violates the name constraints critical extension of one of the issuer certificates in the chain.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_path_length_checks": {
                "type": "bool",
                "description": "This determines whether this issuer is able to issue certificates where the chain of trust (including the final issued certificate) is longer than allowed by a certificate authority in that chain.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_aia_url_templating": {
                "type": "bool",
                "description": "Specifies that the AIA URL values should be templated.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer_id": {
                "type": "string",
                "description": "ID of the issuer.",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_name": {
                "type": "string",
                "description": "Reference to an existing issuer.",
                "description_kind": "plain",
                "optional": true
              },
              "issuer_ref": {
                "type": "string",
                "description": "Reference to an existing issuer.",
                "description_kind": "plain",
                "required": true
              },
              "issuing_certificates": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the URL values for the Issuing Certificate field.",
                "description_kind": "plain",
                "optional": true
              },
              "leaf_not_after_behavior": {
                "type": "string",
                "description": "Behavior of a leaf's 'NotAfter' field during issuance.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "manual_chain": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Chain of issuer references to build this issuer's computed CAChain field from, when non-empty.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "ocsp_servers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the URL values for the OCSP Servers field.",
                "description_kind": "plain",
                "optional": true
              },
              "revocation_signature_algorithm": {
                "type": "string",
                "description": "Which signature algorithm to use when building CRLs.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "usage": {
                "type": "string",
                "description": "Comma-separated list of allowed usages for this issuer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_key": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_bits": {
                "type": "number",
                "description": "Specifies the number of bits to use for the generated keys.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "description": "ID of the generated key.",
                "description_kind": "plain",
                "computed": true
              },
              "key_name": {
                "type": "string",
                "description": "When a new key is created with this request, optionally specifies the name for this.",
                "description_kind": "plain",
                "optional": true
              },
              "key_type": {
                "type": "string",
                "description": "Specifies the desired key type; must be 'rsa', 'ed25519' or 'ec'.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "managed_key_id": {
                "type": "string",
                "description": "The managed key's UUID.",
                "description_kind": "plain",
                "optional": true
              },
              "managed_key_name": {
                "type": "string",
                "description": "The managed key's configured name.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Specifies the type of the key to create.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_any_name": {
                "type": "bool",
                "description": "Flag to allow any name",
                "description_kind": "plain",
                "optional": true
              },
              "allow_bare_domains": {
                "type": "bool",
                "description": "Flag to allow certificates matching the actual domain.",
                "description_kind": "plain",
                "optional": true
              },
              "allow_glob_domains": {
                "type": "bool",
                "description": "Flag to allow names containing glob patterns.",
                "description_kind": "plain",
                "optional": true
              },
              "allow_ip_sans": {
                "type": "bool",
                "description": "Flag to allow IP SANs",
                "description_kind": "plain",
                "optional": true
              },
              "allow_localhost": {
                "type": "bool",
                "description": "Flag to allow certificates for localhost.",
                "description_kind": "plain",
                "optional": true
              },
              "allow_subdomains": {
                "type": "bool",
                "description": "Flag to allow certificates matching subdomains.",
                "description_kind": "plain",
                "optional": true
              },
              "allow_wildcard_certificates": {
                "type": "bool",
                "description": "Flag to allow wildcard certificates",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The domains of the role.",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_domains_template": {
                "type": "bool",
                "description": "Flag to indicate that `allowed_domains` specifies a template expression (e.g. {{identity.entity.aliases.<mount accessor>.name}})",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_other_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Defines allowed custom SANs",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_serial_numbers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Defines allowed Subject serial numbers.",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_uri_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Defines allowed URI SANs",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_uri_sans_template": {
                "type": "bool",
                "description": "Flag to indicate that `allowed_uri_sans` specifies a template expression (e.g. {{identity.entity.aliases.<mount accessor>.name}})",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allowed_user_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The allowed User ID's.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "The path of the PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "basic_constraints_valid_for_non_ca": {
                "type": "bool",
                "description": "Flag to mark basic constraints valid when issuing non-CA certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "client_flag": {
                "type": "bool",
                "description": "Flag to specify certificates for client use.",
                "description_kind": "plain",
                "optional": true
              },
              "cn_validations": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specify validations to run on the Common Name field of the certificate.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "code_signing_flag": {
                "type": "bool",
                "description": "Flag to specify certificates for code signing use.",
                "description_kind": "plain",
                "optional": true
              },
              "country": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The country of generated certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "email_protection_flag": {
                "type": "bool",
                "description": "Flag to specify certificates for email protection use.",
                "description_kind": "plain",
                "optional": true
              },
              "enforce_hostnames": {
                "type": "bool",
                "description": "Flag to allow only valid host names",
                "description_kind": "plain",
                "optional": true
              },
              "ext_key_usage": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specify the allowed extended key usage constraint on issued certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "ext_key_usage_oids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of extended key usage OIDs.",
                "description_kind": "plain",
                "optional": true
              },
              "generate_lease": {
                "type": "bool",
                "description": "Flag to generate leases with certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer_ref": {
                "type": "string",
                "description": "Specifies the default issuer of this request.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_bits": {
                "type": "number",
                "description": "The number of bits of generated keys.",
                "description_kind": "plain",
                "optional": true
              },
              "key_type": {
                "type": "string",
                "description": "The generated key type.",
                "description_kind": "plain",
                "optional": true
              },
              "key_usage": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specify the allowed key usage constraint on issued certificates.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "locality": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The locality of generated certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "max_ttl": {
                "type": "string",
                "description": "The maximum TTL.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name for the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "no_store": {
                "type": "bool",
                "description": "Flag to not store certificates in the storage backend.",
                "description_kind": "plain",
                "optional": true
              },
              "no_store_metadata": {
                "type": "bool",
                "description": "Allows metadata to be stored keyed on the certificate's serial number. The field is independent of no_store, allowing metadata storage regardless of whether certificates are stored. If true, metadata is not stored and an error is returned if the metadata field is specified on issuance APIs",
                "description_kind": "plain",
                "optional": true
              },
              "not_after": {
                "type": "string",
                "description": "Set the Not After field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ. Supports the Y10K end date for IEEE 802.1AR-2018 standard devices, 9999-12-31T23:59:59Z.",
                "description_kind": "plain",
                "optional": true
              },
              "not_before_duration": {
                "type": "string",
                "description": "Specifies the duration by which to backdate the NotBefore property.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "organization": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The organization of generated certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "ou": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The organization unit of generated certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "policy_identifiers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specify the list of allowed policies OIDs.",
                "description_kind": "plain",
                "optional": true
              },
              "postal_code": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The postal code of generated certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "province": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The province of generated certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "require_cn": {
                "type": "bool",
                "description": "Flag to force CN usage.",
                "description_kind": "plain",
                "optional": true
              },
              "serial_number_source": {
                "type": "string",
                "description": "Specifies the source of the subject serial number. Valid values are json-csr (default) or json. When set to json-csr, the subject serial number is taken from the serial_number parameter and falls back to the serial number in the CSR. When set to json, the subject serial number is taken from the serial_number parameter but will ignore any value in the CSR. For backwards compatibility an empty value for this field will default to the json-csr behavior.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "server_flag": {
                "type": "bool",
                "description": "Flag to specify certificates for server use.",
                "description_kind": "plain",
                "optional": true
              },
              "signature_bits": {
                "type": "number",
                "description": "The number of bits to use in the signature algorithm.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "street_address": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The street address of generated certificates.",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "string",
                "description": "The TTL.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "use_csr_common_name": {
                "type": "bool",
                "description": "Flag to use the CN in the CSR.",
                "description_kind": "plain",
                "optional": true
              },
              "use_csr_sans": {
                "type": "bool",
                "description": "Flag to use the SANs in the CSR.",
                "description_kind": "plain",
                "optional": true
              },
              "use_pss": {
                "type": "bool",
                "description": "Specifies whether or not to use PSS signatures over PKCS#1v1.5 signatures when a RSA-type issuer is used. Ignored for ECDSA/Ed25519 issuers.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "policy_identifier": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "cps": {
                      "type": "string",
                      "description": "Optional CPS URL",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "notice": {
                      "type": "string",
                      "description": "Optional notice",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "oid": {
                      "type": "string",
                      "description": "OID",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Policy identifier block; can only be used with Vault 1.11+",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_root_cert": {
          "version": 1,
          "block": {
            "attributes": {
              "alt_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative names.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "certificate": {
                "type": "string",
                "description": "The certificate.",
                "description_kind": "plain",
                "computed": true
              },
              "common_name": {
                "type": "string",
                "description": "CN of root to create.",
                "description_kind": "plain",
                "required": true
              },
              "country": {
                "type": "string",
                "description": "The country.",
                "description_kind": "plain",
                "optional": true
              },
              "exclude_cn_from_sans": {
                "type": "bool",
                "description": "Flag to exclude CN from SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_dns_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of domains for which certificates are not allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_email_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of email addresses for which certificates are not allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_ip_ranges": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of IP ranges for which certificates are not allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_uri_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of URI domains for which certificates are not allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "format": {
                "type": "string",
                "description": "The format of data.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative IPs.",
                "description_kind": "plain",
                "optional": true
              },
              "issuer_id": {
                "type": "string",
                "description": "The ID of the generated issuer.",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_name": {
                "type": "string",
                "description": "Provides a name to the specified issuer. The name must be unique across all issuers and not be the reserved value 'default'.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuing_ca": {
                "type": "string",
                "description": "The issuing CA.",
                "description_kind": "plain",
                "computed": true
              },
              "key_bits": {
                "type": "number",
                "description": "The number of bits to use.",
                "description_kind": "plain",
                "optional": true
              },
              "key_id": {
                "type": "string",
                "description": "The ID of the generated key.",
                "description_kind": "plain",
                "computed": true
              },
              "key_name": {
                "type": "string",
                "description": "When a new key is created with this request, optionally specifies the name for this.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_ref": {
                "type": "string",
                "description": "Specifies the key to use for generating this request.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_type": {
                "type": "string",
                "description": "The desired key type.",
                "description_kind": "plain",
                "optional": true
              },
              "locality": {
                "type": "string",
                "description": "The locality.",
                "description_kind": "plain",
                "optional": true
              },
              "managed_key_id": {
                "type": "string",
                "description": "The ID of the previously configured managed key.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "managed_key_name": {
                "type": "string",
                "description": "The name of the previously configured managed key.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_path_length": {
                "type": "number",
                "description": "The maximum path length to encode in the generated certificate.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "not_after": {
                "type": "string",
                "description": "Set the Not After field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ. Supports the Y10K end date for IEEE 802.1AR-2018 standard devices, 9999-12-31T23:59:59Z.",
                "description_kind": "plain",
                "optional": true
              },
              "organization": {
                "type": "string",
                "description": "The organization.",
                "description_kind": "plain",
                "optional": true
              },
              "other_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of other SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "ou": {
                "type": "string",
                "description": "The organization unit.",
                "description_kind": "plain",
                "optional": true
              },
              "permitted_dns_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of domains for which certificates are allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "permitted_email_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of email addresses for which certificates are allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "permitted_ip_ranges": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of IP ranges for which certificates are allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "permitted_uri_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of URI domains for which certificates are allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "postal_code": {
                "type": "string",
                "description": "The postal code.",
                "description_kind": "plain",
                "optional": true
              },
              "private_key_format": {
                "type": "string",
                "description": "The private key format.",
                "description_kind": "plain",
                "optional": true
              },
              "province": {
                "type": "string",
                "description": "The province.",
                "description_kind": "plain",
                "optional": true
              },
              "serial_number": {
                "type": "string",
                "description": "The certificate's serial number, hex formatted.",
                "description_kind": "plain",
                "computed": true
              },
              "signature_bits": {
                "type": "number",
                "description": "The number of bits to use in the signature algorithm.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "street_address": {
                "type": "string",
                "description": "The street address.",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "string",
                "description": "Time to live.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Type of root to create. Must be either \"existing\", \"exported\", \"internal\" or \"kms\"",
                "description_kind": "plain",
                "required": true
              },
              "uri_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative URIs.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_root_sign_intermediate": {
          "version": 2,
          "block": {
            "attributes": {
              "alt_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative names.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "ca_chain": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The CA chain as a list of format specific certificates",
                "description_kind": "plain",
                "computed": true
              },
              "certificate": {
                "type": "string",
                "description": "The signed intermediate CA certificate.",
                "description_kind": "plain",
                "computed": true
              },
              "certificate_bundle": {
                "type": "string",
                "description": "The concatenation of the intermediate and issuing CA certificates (PEM encoded). Requires the format to be set to any of: pem, pem_bundle. The value will be empty for all other formats.",
                "description_kind": "plain",
                "computed": true
              },
              "common_name": {
                "type": "string",
                "description": "CN of intermediate to create.",
                "description_kind": "plain",
                "required": true
              },
              "country": {
                "type": "string",
                "description": "The country.",
                "description_kind": "plain",
                "optional": true
              },
              "csr": {
                "type": "string",
                "description": "The CSR.",
                "description_kind": "plain",
                "required": true
              },
              "exclude_cn_from_sans": {
                "type": "bool",
                "description": "Flag to exclude CN from SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_dns_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of domains for which certificates are not allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_email_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of email addresses for which certificates are not allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_ip_ranges": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of IP ranges for which certificates are NOT allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "excluded_uri_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of URI domains for which certificates are not allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "format": {
                "type": "string",
                "description": "The format of data.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative IPs.",
                "description_kind": "plain",
                "optional": true
              },
              "issuer_ref": {
                "type": "string",
                "description": "Specifies the default issuer of this request.",
                "description_kind": "plain",
                "optional": true
              },
              "issuing_ca": {
                "type": "string",
                "description": "The issuing CA certificate.",
                "description_kind": "plain",
                "computed": true
              },
              "key_usage": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specify the key usages to be added to the existing set of key usages (\"CRL\", \"CertSign\") on the generated certificate.",
                "description_kind": "plain",
                "optional": true
              },
              "locality": {
                "type": "string",
                "description": "The locality.",
                "description_kind": "plain",
                "optional": true
              },
              "max_path_length": {
                "type": "number",
                "description": "The maximum path length to encode in the generated certificate.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "not_after": {
                "type": "string",
                "description": "Set the Not After field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ. Supports the Y10K end date for IEEE 802.1AR-2018 standard devices, 9999-12-31T23:59:59Z.",
                "description_kind": "plain",
                "optional": true
              },
              "not_before_duration": {
                "type": "string",
                "description": "Specifies the duration by which to backdate the NotBefore property.",
                "description_kind": "plain",
                "optional": true
              },
              "organization": {
                "type": "string",
                "description": "The organization.",
                "description_kind": "plain",
                "optional": true
              },
              "other_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of other SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "ou": {
                "type": "string",
                "description": "The organization unit.",
                "description_kind": "plain",
                "optional": true
              },
              "permitted_dns_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of domains for which certificates are allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "permitted_email_addresses": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of email addresses for which certificates are allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "permitted_ip_ranges": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of IP ranges for which certificates are allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "permitted_uri_domains": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of URI domains for which certificates are allowed to be issued.",
                "description_kind": "plain",
                "optional": true
              },
              "postal_code": {
                "type": "string",
                "description": "The postal code.",
                "description_kind": "plain",
                "optional": true
              },
              "province": {
                "type": "string",
                "description": "The province.",
                "description_kind": "plain",
                "optional": true
              },
              "revoke": {
                "type": "bool",
                "description": "Revoke the certificate upon resource destruction.",
                "description_kind": "plain",
                "optional": true
              },
              "serial_number": {
                "type": "string",
                "description": "The certificate's serial number, hex formatted.",
                "description_kind": "plain",
                "computed": true
              },
              "signature_bits": {
                "type": "number",
                "description": "The number of bits to use in the signature algorithm.",
                "description_kind": "plain",
                "optional": true
              },
              "skid": {
                "type": "string",
                "description": "Value for the Subject Key Identifier field\n  (RFC 5280 Section 4.2.1.2). Specified as a string in hex format.",
                "description_kind": "plain",
                "optional": true
              },
              "street_address": {
                "type": "string",
                "description": "The street address.",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "string",
                "description": "Time to live.",
                "description_kind": "plain",
                "optional": true
              },
              "uri_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative URIs.",
                "description_kind": "plain",
                "optional": true
              },
              "use_csr_values": {
                "type": "bool",
                "description": "Preserve CSR values.",
                "description_kind": "plain",
                "optional": true
              },
              "use_pss": {
                "type": "bool",
                "description": "Specifies whether or not to use PSS signatures\n  over PKCS#1v1.5 signatures when a RSA-type issuer is used.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_sign": {
          "version": 1,
          "block": {
            "attributes": {
              "alt_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative names.",
                "description_kind": "plain",
                "optional": true
              },
              "auto_renew": {
                "type": "bool",
                "description": "If enabled, a new certificate will be generated if the expiration is within min_seconds_remaining",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "The PKI secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "ca_chain": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The CA chain.",
                "description_kind": "plain",
                "computed": true
              },
              "cert_metadata": {
                "type": "string",
                "description": "A base 64 encoded value or an empty string to associate with the certificate's serial number. The role's no_store_metadata must be set to false, otherwise an error is returned when specified.",
                "description_kind": "plain",
                "optional": true
              },
              "certificate": {
                "type": "string",
                "description": "The certicate.",
                "description_kind": "plain",
                "computed": true
              },
              "common_name": {
                "type": "string",
                "description": "CN of intermediate to create.",
                "description_kind": "plain",
                "required": true
              },
              "csr": {
                "type": "string",
                "description": "The CSR.",
                "description_kind": "plain",
                "required": true
              },
              "exclude_cn_from_sans": {
                "type": "bool",
                "description": "Flag to exclude CN from SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "expiration": {
                "type": "number",
                "description": "The certificate expiration as a Unix-style timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "format": {
                "type": "string",
                "description": "The format of data.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ip_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative IPs.",
                "description_kind": "plain",
                "optional": true
              },
              "issuer_ref": {
                "type": "string",
                "description": "Specifies the default issuer of this request.",
                "description_kind": "plain",
                "optional": true
              },
              "issuing_ca": {
                "type": "string",
                "description": "The issuing CA.",
                "description_kind": "plain",
                "computed": true
              },
              "min_seconds_remaining": {
                "type": "number",
                "description": "Generate a new certificate when the expiration is within this number of seconds",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the role to create the certificate against.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "not_after": {
                "type": "string",
                "description": "Set the Not After field of the certificate with specified date value. The value format should be given in UTC format YYYY-MM-ddTHH:MM:SSZ. Supports the Y10K end date for IEEE 802.1AR-2018 standard devices, 9999-12-31T23:59:59Z.",
                "description_kind": "plain",
                "optional": true
              },
              "other_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of other SANs.",
                "description_kind": "plain",
                "optional": true
              },
              "renew_pending": {
                "type": "bool",
                "description": "Initially false, and then set to true during refresh once the expiration is less than min_seconds_remaining in the future.",
                "description_kind": "plain",
                "computed": true
              },
              "serial_number": {
                "type": "string",
                "description": "The certificate's serial number, hex formatted.",
                "description_kind": "plain",
                "computed": true
              },
              "ttl": {
                "type": "string",
                "description": "Time to live.",
                "description_kind": "plain",
                "optional": true
              },
              "uri_sans": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of alternative URIs.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_plugin": {
          "version": 0,
          "block": {
            "attributes": {
              "args": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of additional arguments to pass to the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "command": {
                "type": "string",
                "description": "Command to execute the plugin, relative to the plugin_directory.",
                "description_kind": "plain",
                "required": true
              },
              "env": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of additional environment variables to run the plugin with in KEY=VALUE form.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the plugin.",
                "description_kind": "plain",
                "required": true
              },
              "oci_image": {
                "type": "string",
                "description": "OCI image to run. If specified, setting command, args, and env will update the container's entrypoint, args, and environment variables (append-only) respectively.",
                "description_kind": "plain",
                "optional": true
              },
              "runtime": {
                "type": "string",
                "description": "Vault plugin runtime to use if oci_image is specified.",
                "description_kind": "plain",
                "optional": true
              },
              "sha256": {
                "type": "string",
                "description": "SHA256 sum of the plugin binary.",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Type of plugin; one of \"auth\", \"secret\", or \"database\".",
                "description_kind": "plain",
                "required": true
              },
              "version": {
                "type": "string",
                "description": "Semantic version of the plugin.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_plugin_pinned_version": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the plugin.",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Type of plugin; one of \"auth\", \"secret\", or \"database\".",
                "description_kind": "plain",
                "required": true
              },
              "version": {
                "type": "string",
                "description": "Semantic pinned plugin version.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the policy",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policy": {
                "type": "string",
                "description": "The policy document",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_quota_lease_count": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inheritable": {
                "type": "bool",
                "description": "If set to true on a quota where path is set to a namespace, the same quota will be cumulatively applied to all child namespace. The inheritable parameter cannot be set to true if the path does not specify a namespace. Only the quotas associated with the root namespace are inheritable by default.",
                "description_kind": "plain",
                "optional": true
              },
              "max_leases": {
                "type": "number",
                "description": "The maximum number of leases to be allowed by the quota rule. The max_leases must be positive.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The name of the quota.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path of the mount or namespace to apply the quota. A blank path configures a global lease count quota.",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "If set on a quota where path is set to an auth mount with a concept of roles (such as /auth/approle/), this will make the quota restrict login requests to that mount that are made with the specified role.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_quota_rate_limit": {
          "version": 0,
          "block": {
            "attributes": {
              "block_interval": {
                "type": "number",
                "description": "If set, when a client reaches a rate limit threshold, the client will be prohibited from any further requests until after the 'block_interval' in seconds has elapsed.",
                "description_kind": "plain",
                "optional": true
              },
              "group_by": {
                "type": "string",
                "description": "Attribute used to group requests for rate limiting. Limits are enforced independently for each group. Valid group_by modes are: 1) \"ip\" that groups requests by their source IP address (group_by defaults to ip if unset); 2) \"none\" that groups all requests that match the rate limit quota rule together; 3) \"entity_then_ip\" that groups requests by their entity ID for authenticated requests that carry one, or by their IP for unauthenticated requests (or requests whose authentication is not connected to an entity); and 4) \"entity_then_none\" which also groups requests by their entity ID when available, but the rest is all grouped together (i.e. unauthenticated or with authentication not connected to an entity).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inheritable": {
                "type": "bool",
                "description": "If set to true on a quota where path is set to a namespace, the same quota will be cumulatively applied to all child namespace. The inheritable parameter cannot be set to true if the path does not specify a namespace. Only the quotas associated with the root namespace are inheritable by default.",
                "description_kind": "plain",
                "optional": true
              },
              "interval": {
                "type": "number",
                "description": "The duration in seconds to enforce rate limiting for.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the quota.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path of the mount or namespace to apply the quota. A blank path configures a global rate limit quota.",
                "description_kind": "plain",
                "optional": true
              },
              "rate": {
                "type": "number",
                "description": "The maximum number of requests at any given second to be allowed by the quota rule. The rate must be positive.",
                "description_kind": "plain",
                "required": true
              },
              "role": {
                "type": "string",
                "description": "If set on a quota where path is set to an auth mount with a concept of roles (such as /auth/approle/), this will make the quota restrict login requests to that mount that are made with the specified role.",
                "description_kind": "plain",
                "optional": true
              },
              "secondary_rate": {
                "type": "number",
                "description": "Only available when using the \"entity_then_ip\" or \"entity_then_none\" group_by modes. This is the rate limit applied to the requests that fall under the \"ip\" or \"none\" groupings, while the authenticated requests that contain an entity ID are subject to the \"rate\" field instead. Defaults to the same value as \"rate\".",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_rabbitmq_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "connection_uri": {
                "type": "string",
                "description": "Specifies the RabbitMQ connection URI.",
                "description_kind": "plain",
                "required": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing plugin workload identity tokens",
                "description_kind": "plain",
                "optional": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Local mount flag that can be explicitly set to true to enforce local mount in HA environment",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "Specifies the RabbitMQ management administrator password",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "password_policy": {
                "type": "string",
                "description": "Specifies a password policy to use when creating dynamic credentials. Defaults to generating an alphanumeric password if not set.",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The path of the RabbitMQ Secret Backend where the connection should be configured",
                "description_kind": "plain",
                "optional": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "username": {
                "type": "string",
                "description": "Specifies the RabbitMQ management administrator username",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "username_template": {
                "type": "string",
                "description": "Template describing how dynamic usernames are generated.",
                "description_kind": "plain",
                "optional": true
              },
              "verify_connection": {
                "type": "bool",
                "description": "Specifies whether to verify connection URI, username, and password.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_rabbitmq_secret_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The path of the Rabbitmq Secret Backend the role belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name for the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "tags": {
                "type": "string",
                "description": "Specifies a comma-separated RabbitMQ management tags.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "vhost": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "configure": {
                      "type": "string",
                      "description": "The configure permissions for this vhost.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "host": {
                      "type": "string",
                      "description": "The vhost to set permissions for.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "read": {
                      "type": "string",
                      "description": "The read permissions for this vhost.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "write": {
                      "type": "string",
                      "description": "The write permissions for this vhost.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Specifies a map of virtual hosts to permissions.",
                  "description_kind": "plain"
                }
              },
              "vhost_topic": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "host": {
                      "type": "string",
                      "description": "The vhost to set permissions for.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "block_types": {
                    "vhost": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "read": {
                            "type": "string",
                            "description": "The read permissions for this vhost.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "topic": {
                            "type": "string",
                            "description": "The vhost to set permissions for.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "write": {
                            "type": "string",
                            "description": "The write permissions for this vhost.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description": "Specifies a map of virtual hosts to permissions.",
                        "description_kind": "plain"
                      }
                    }
                  },
                  "description": "Specifies a map of virtual hosts and exchanges to topic permissions. This option requires RabbitMQ 3.7.0 or later.",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_raft_autopilot": {
          "version": 0,
          "block": {
            "attributes": {
              "cleanup_dead_servers": {
                "type": "bool",
                "description": "Specifies whether to remove dead server nodes periodically or when a new server joins. This requires that min-quorum is also set.",
                "description_kind": "plain",
                "optional": true
              },
              "dead_server_last_contact_threshold": {
                "type": "string",
                "description": "Limit the amount of time a server can go without leader contact before being considered failed. This only takes effect when cleanup_dead_servers is set.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_upgrade_migration": {
                "type": "bool",
                "description": "Disables automatically upgrading Vault using autopilot. (Enterprise-only)",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_contact_threshold": {
                "type": "string",
                "description": "Limit the amount of time a server can go without leader contact before being considered unhealthy.",
                "description_kind": "plain",
                "optional": true
              },
              "max_trailing_logs": {
                "type": "number",
                "description": "Maximum number of log entries in the Raft log that a server can be behind its leader before being considered unhealthy.",
                "description_kind": "plain",
                "optional": true
              },
              "min_quorum": {
                "type": "number",
                "description": "Minimum number of servers allowed in a cluster before autopilot can prune dead servers. This should at least be 3. Applicable only for voting nodes.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "server_stabilization_time": {
                "type": "string",
                "description": "Minimum amount of time a server must be stable in the 'healthy' state before being added to the cluster.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_raft_snapshot_agent_config": {
          "version": 0,
          "block": {
            "attributes": {
              "aws_access_key_id": {
                "type": "string",
                "description": "AWS access key ID.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_s3_bucket": {
                "type": "string",
                "description": "S3 bucket to write snapshots to.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_s3_disable_tls": {
                "type": "bool",
                "description": "Disable TLS for the S3 endpoint. This should only be used for testing purposes.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_s3_enable_kms": {
                "type": "bool",
                "description": "Use KMS to encrypt bucket contents.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_s3_endpoint": {
                "type": "string",
                "description": "AWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_s3_force_path_style": {
                "type": "bool",
                "description": "Use the endpoint/bucket URL style instead of bucket.endpoint.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_s3_kms_key": {
                "type": "string",
                "description": "Use named KMS key, when aws_s3_enable_kms=true",
                "description_kind": "plain",
                "optional": true
              },
              "aws_s3_region": {
                "type": "string",
                "description": "AWS region bucket is in.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_s3_server_side_encryption": {
                "type": "bool",
                "description": "Use AES256 to encrypt bucket contents.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_secret_access_key": {
                "type": "string",
                "description": "AWS secret access key.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_session_token": {
                "type": "string",
                "description": "AWS session token.",
                "description_kind": "plain",
                "optional": true
              },
              "azure_account_key": {
                "type": "string",
                "description": "Azure account key.",
                "description_kind": "plain",
                "optional": true
              },
              "azure_account_name": {
                "type": "string",
                "description": "Azure account name.",
                "description_kind": "plain",
                "optional": true
              },
              "azure_blob_environment": {
                "type": "string",
                "description": "Azure blob environment.",
                "description_kind": "plain",
                "optional": true
              },
              "azure_container_name": {
                "type": "string",
                "description": "Azure container name to write snapshots to.",
                "description_kind": "plain",
                "optional": true
              },
              "azure_endpoint": {
                "type": "string",
                "description": "Azure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite.",
                "description_kind": "plain",
                "optional": true
              },
              "file_prefix": {
                "type": "string",
                "description": "The file or object name of snapshot files will start with this string.",
                "description_kind": "plain",
                "optional": true
              },
              "google_disable_tls": {
                "type": "bool",
                "description": "Disable TLS for the GCS endpoint.",
                "description_kind": "plain",
                "optional": true
              },
              "google_endpoint": {
                "type": "string",
                "description": "GCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server.",
                "description_kind": "plain",
                "optional": true
              },
              "google_gcs_bucket": {
                "type": "string",
                "description": "GCS bucket to write snapshots to.",
                "description_kind": "plain",
                "optional": true
              },
              "google_service_account_key": {
                "type": "string",
                "description": "Google service account key in JSON format.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "interval_seconds": {
                "type": "number",
                "description": "Number of seconds between snapshots.",
                "description_kind": "plain",
                "required": true
              },
              "local_max_space": {
                "type": "number",
                "description": "The maximum space, in bytes, to use for snapshots.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the snapshot agent configuration.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path_prefix": {
                "type": "string",
                "description": "The directory or bucket prefix to to use.",
                "description_kind": "plain",
                "required": true
              },
              "retain": {
                "type": "number",
                "description": "How many snapshots are to be kept.",
                "description_kind": "plain",
                "optional": true
              },
              "storage_type": {
                "type": "string",
                "description": "What storage service to send snapshots to. One of \"local\", \"azure-blob\", \"aws-s3\", or \"google-gcs\".",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_rgp_policy": {
          "version": 0,
          "block": {
            "attributes": {
              "enforcement_level": {
                "type": "string",
                "description": "Enforcement level of Sentinel policy. Can be one of: 'advisory', 'soft-mandatory' or 'hard-mandatory'",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the policy",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "policy": {
                "type": "string",
                "description": "The policy document",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_saml_auth_backend": {
          "version": 0,
          "block": {
            "attributes": {
              "acs_urls": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The well-formatted URLs of your Assertion Consumer Service (ACS) that should receive a response from the identity provider.",
                "description_kind": "plain",
                "required": true
              },
              "default_role": {
                "type": "string",
                "description": "The role to use if no role is provided during login.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "entity_id": {
                "type": "string",
                "description": "The entity ID of the SAML authentication service provider.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idp_cert": {
                "type": "string",
                "description": "The PEM encoded certificate of the identity provider. Mutually exclusive with 'idp_metadata_url'",
                "description_kind": "plain",
                "optional": true
              },
              "idp_entity_id": {
                "type": "string",
                "description": "The entity ID of the identity provider. Mutually exclusive with 'idp_metadata_url'.",
                "description_kind": "plain",
                "optional": true
              },
              "idp_metadata_url": {
                "type": "string",
                "description": "The metadata URL of the identity provider.",
                "description_kind": "plain",
                "optional": true
              },
              "idp_sso_url": {
                "type": "string",
                "description": "The SSO URL of the identity provider. Mutually exclusive with 'idp_metadata_url'.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "verbose_logging": {
                "type": "bool",
                "description": "Log additional, potentially sensitive information during the SAML exchange according to the current logging level. Not recommended for production.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_saml_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "bound_attributes": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Mapping of attribute names to values that are expected to exist in the SAML assertion.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_attributes_type": {
                "type": "string",
                "description": "The type of matching assertion to perform on bound_attributes.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "bound_subjects": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The subject being asserted for SAML authentication.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_subjects_type": {
                "type": "string",
                "description": "The type of matching assertion to perform on bound_subjects.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "groups_attribute": {
                "type": "string",
                "description": "The attribute to use to identify the set of groups to which the user belongs.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path where SAML Auth engine is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_scep_auth_backend_role": {
          "version": 1,
          "block": {
            "attributes": {
              "auth_type": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "backend": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "challenge": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_secrets_sync_association": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "metadata": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "sub_key": "string",
                      "sync_status": "string",
                      "updated_at": "string"
                    }
                  ]
                ],
                "description": "Metadata for each subkey of the associated secret.",
                "description_kind": "plain",
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "Specifies the mount where the secret is located.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Name of the destination.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "secret_name": {
                "type": "string",
                "description": "Specifies the name of the secret to synchronize.",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "Type of sync destination.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_secrets_sync_aws_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "access_key_id": {
                "type": "string",
                "description": "Access key id to authenticate against the AWS secrets manager.",
                "description_kind": "plain",
                "optional": true
              },
              "custom_tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Custom tags to set on the secret managed at the destination.",
                "description_kind": "plain",
                "optional": true
              },
              "external_id": {
                "type": "string",
                "description": "Extra protection that must match the trust policy granting access to the AWS IAM role ARN.",
                "description_kind": "plain",
                "optional": true
              },
              "granularity": {
                "type": "string",
                "description": "Determines what level of information is synced as a distinct resource at the destination. Can be 'secret-path' or 'secret-key'",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name of the AWS destination.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "region": {
                "type": "string",
                "description": "Region where to manage the secrets manager entries.",
                "description_kind": "plain",
                "optional": true
              },
              "role_arn": {
                "type": "string",
                "description": "Specifies a role to assume when connecting to AWS.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_access_key": {
                "type": "string",
                "description": "Secret access key to authenticate against the AWS secrets manager.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "secret_name_template": {
                "type": "string",
                "description": "Template describing how to generate external secret names.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of secrets destination.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_secrets_sync_azure_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "client_id": {
                "type": "string",
                "description": "Client ID of an Azure app registration.",
                "description_kind": "plain",
                "optional": true
              },
              "client_secret": {
                "type": "string",
                "description": "Client Secret of an Azure app registration.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "cloud": {
                "type": "string",
                "description": "Specifies a cloud for the client.",
                "description_kind": "plain",
                "optional": true
              },
              "custom_tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Custom tags to set on the secret managed at the destination.",
                "description_kind": "plain",
                "optional": true
              },
              "granularity": {
                "type": "string",
                "description": "Determines what level of information is synced as a distinct resource at the destination. Can be 'secret-path' or 'secret-key'",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_vault_uri": {
                "type": "string",
                "description": "URI of an existing Azure Key Vault instance.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Unique name of the Azure destination.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "secret_name_template": {
                "type": "string",
                "description": "Template describing how to generate external secret names.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tenant_id": {
                "type": "string",
                "description": "ID of the target Azure tenant.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Type of secrets destination.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_secrets_sync_config": {
          "version": 0,
          "block": {
            "attributes": {
              "disabled": {
                "type": "bool",
                "description": "Disables the syncing process between Vault and external destinations.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "queue_capacity": {
                "type": "number",
                "description": "Maximum number of pending sync operations allowed on the queue.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_secrets_sync_gcp_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "credentials": {
                "type": "string",
                "description": "JSON-encoded credentials to use to connect to GCP.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "custom_tags": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Custom tags to set on the secret managed at the destination.",
                "description_kind": "plain",
                "optional": true
              },
              "granularity": {
                "type": "string",
                "description": "Determines what level of information is synced as a distinct resource at the destination. Can be 'secret-path' or 'secret-key'",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name of the GCP destination.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "project_id": {
                "type": "string",
                "description": "The target project to manage secrets in.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_name_template": {
                "type": "string",
                "description": "Template describing how to generate external secret names.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of secrets destination.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_secrets_sync_gh_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "access_token": {
                "type": "string",
                "description": "Fine-grained or personal access token.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "app_name": {
                "type": "string",
                "description": "The user-defined name of the GitHub App configuration.",
                "description_kind": "plain",
                "optional": true
              },
              "granularity": {
                "type": "string",
                "description": "Determines what level of information is synced as a distinct resource at the destination. Can be 'secret-path' or 'secret-key'",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "installation_id": {
                "type": "number",
                "description": "The ID of the installation generated by GitHub when the app referenced by the app_name was installed in the user\u2019s GitHub account. Necessary if the app_name field is also provided.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Unique name of the github destination.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "repository_name": {
                "type": "string",
                "description": "Name of the repository.",
                "description_kind": "plain",
                "optional": true
              },
              "repository_owner": {
                "type": "string",
                "description": "GitHub organization or username that owns the repository.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_name_template": {
                "type": "string",
                "description": "Template describing how to generate external secret names.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of secrets destination.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_secrets_sync_github_apps": {
          "version": 0,
          "block": {
            "attributes": {
              "app_id": {
                "type": "number",
                "description": "The GitHub application ID.",
                "description_kind": "plain",
                "required": true
              },
              "fingerprint": {
                "type": "string",
                "description": "A fingerprint of a private key.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The user-defined name of the GitHub App configuration.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "private_key": {
                "type": "string",
                "description": "The content of a PEM formatted private key generated on GitHub for the app.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_secrets_sync_vercel_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "access_token": {
                "type": "string",
                "description": "Vercel API access token with the permissions to manage environment variables.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "deployment_environments": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Deployment environments where the environment variables are available. Accepts 'development', 'preview' & 'production'.",
                "description_kind": "plain",
                "required": true
              },
              "granularity": {
                "type": "string",
                "description": "Determines what level of information is synced as a distinct resource at the destination. Can be 'secret-path' or 'secret-key'",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name of the Vercel destination.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "project_id": {
                "type": "string",
                "description": "Project ID where to manage environment variables.",
                "description_kind": "plain",
                "required": true
              },
              "secret_name_template": {
                "type": "string",
                "description": "Template describing how to generate external secret names.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "team_id": {
                "type": "string",
                "description": "Team ID the project belongs to.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Type of secrets destination.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ssh_secret_backend_ca": {
          "version": 1,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The path of the SSH Secret Backend where the CA should be configured",
                "description_kind": "plain",
                "optional": true
              },
              "generate_signing_key": {
                "type": "bool",
                "description": "Whether Vault should generate the signing key pair internally.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_bits": {
                "type": "number",
                "description": "Specifies the desired key bits for the generated SSH CA key when `generate_signing_key` is set to `true`.",
                "description_kind": "plain",
                "optional": true
              },
              "key_type": {
                "type": "string",
                "description": "Specifies the desired key type for the generated SSH CA key when `generate_signing_key` is set to `true`.",
                "description_kind": "plain",
                "optional": true
              },
              "managed_key_id": {
                "type": "string",
                "description": "The id of the managed key to use. When using a managed key, this field or managed_key_name is required.",
                "description_kind": "plain",
                "optional": true
              },
              "managed_key_name": {
                "type": "string",
                "description": "The name of the managed key to use. When using a managed key, this field or managed_key_id is required.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "private_key": {
                "type": "string",
                "description": "Private key part the SSH CA key pair; required if generate_signing_key is false.",
                "description_kind": "plain",
                "optional": true,
                "computed": true,
                "sensitive": true
              },
              "public_key": {
                "type": "string",
                "description": "Public key part the SSH CA key pair; required if generate_signing_key is false.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ssh_secret_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "algorithm_signer": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allow_bare_domains": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "allow_empty_principals": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "allow_host_certificates": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "allow_subdomains": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "allow_user_certificates": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "allow_user_key_ids": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_critical_options": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_domains": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_domains_template": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allowed_extensions": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_users": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_users_template": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "cidr_list": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "default_critical_options": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "default_extensions": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "default_user": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "default_user_template": {
                "type": "bool",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_id_format": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "key_type": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "max_ttl": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Unique name for the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "not_before_duration": {
                "type": "string",
                "description": "Specifies the duration by which to backdate the ValidAfter property. Uses duration format strings.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ttl": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "block_types": {
              "allowed_user_key_config": {
                "nesting_mode": "set",
                "block": {
                  "attributes": {
                    "lengths": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "List of allowed key lengths, vault-1.10 and above",
                      "description_kind": "plain",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Key type, choices:\nrsa, ecdsa, ec, dsa, ed25519, ssh-rsa, ssh-dss, ssh-ed25519, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "description": "Set of allowed public key types and their relevant configuration",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_terraform_cloud_secret_backend": {
          "version": 1,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "Accessor of the mount",
                "description_kind": "plain",
                "computed": true
              },
              "address": {
                "type": "string",
                "description": "Specifies the address of the Terraform Cloud instance, provided as \"host:port\" like \"127.0.0.1:8500\".",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_managed_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of managed key registry entry names that the mount in question is allowed to access",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_response_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "audit_non_hmac_request_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "audit_non_hmac_response_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the Vault Terraform Cloud mount to configure",
                "description_kind": "plain",
                "optional": true
              },
              "base_path": {
                "type": "string",
                "description": "Specifies the base path for the Terraform Cloud or Enterprise API.",
                "description_kind": "plain",
                "optional": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "delegated_auth_accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "Human-friendly description of the mount for the backend.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_remount": {
                "type": "bool",
                "description": "If set, opts out of mount migration on path updates.",
                "description_kind": "plain",
                "optional": true
              },
              "external_entropy_access": {
                "type": "bool",
                "description": "Enable the secrets engine to access Vault's external entropy source",
                "description_kind": "plain",
                "optional": true
              },
              "force_no_cache": {
                "type": "bool",
                "description": "If set to true, disables caching.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "identity_token_key": {
                "type": "string",
                "description": "The key to use for signing plugin workload identity tokens",
                "description_kind": "plain",
                "optional": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint",
                "description_kind": "plain",
                "optional": true
              },
              "local": {
                "type": "bool",
                "description": "Local mount flag that can be explicitly set to true to enforce local mount in HA environment",
                "description_kind": "plain",
                "optional": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration for secrets in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies mount type specific options that are passed to the backend",
                "description_kind": "plain",
                "optional": true
              },
              "passthrough_request_headers": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of headers to allow and pass from the request to the plugin",
                "description_kind": "plain",
                "optional": true
              },
              "plugin_version": {
                "type": "string",
                "description": "Specifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
                "description_kind": "plain",
                "optional": true
              },
              "seal_wrap": {
                "type": "bool",
                "description": "Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "token": {
                "type": "string",
                "description": "Specifies the Terraform Cloud access token to use.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_terraform_cloud_secret_creds": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Terraform Cloud secret backend to generate tokens from",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lease_id": {
                "type": "string",
                "description": "Associated Vault lease ID, if one exists",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "organization": {
                "type": "string",
                "description": "Name of the Terraform Cloud or Enterprise organization",
                "description_kind": "plain",
                "computed": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "team_id": {
                "type": "string",
                "description": "ID of the Terraform Cloud or Enterprise team under organization (e.g., settings/teams/team-xxxxxxxxxxxxx)",
                "description_kind": "plain",
                "computed": true
              },
              "token": {
                "type": "string",
                "description": "Terraform Token provided by the Vault backend",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "token_id": {
                "type": "string",
                "description": "ID of the Terraform Token provided",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_terraform_cloud_secret_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The path of the Terraform Cloud Secret Backend the role belongs to.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "max_ttl": {
                "type": "number",
                "description": "Maximum allowed lease for generated credentials. If not set or set to 0, will use system default.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of an existing role against which to create this Terraform Cloud credential",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "organization": {
                "type": "string",
                "description": "Name of the Terraform Cloud or Enterprise organization",
                "description_kind": "plain",
                "optional": true
              },
              "team_id": {
                "type": "string",
                "description": "ID of the Terraform Cloud or Enterprise team under organization (e.g., settings/teams/team-xxxxxxxxxxxxx)",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "number",
                "description": "Default lease for generated credentials. If not set or set to 0, will use system default.",
                "description_kind": "plain",
                "optional": true
              },
              "user_id": {
                "type": "string",
                "description": "ID of the Terraform Cloud or Enterprise user (e.g., user-xxxxxxxxxxxxxxxx)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_token": {
          "version": 0,
          "block": {
            "attributes": {
              "client_token": {
                "type": "string",
                "description": "The client token.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "display_name": {
                "type": "string",
                "description": "The display name of the token.",
                "description_kind": "plain",
                "optional": true
              },
              "explicit_max_ttl": {
                "type": "string",
                "description": "The explicit max TTL of the token.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lease_duration": {
                "type": "number",
                "description": "The token lease duration.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_started": {
                "type": "string",
                "description": "The token lease started on.",
                "description_kind": "plain",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata to be associated with the token.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "no_default_policy": {
                "type": "bool",
                "description": "Flag to disable the default policy.",
                "description_kind": "plain",
                "optional": true
              },
              "no_parent": {
                "type": "bool",
                "description": "Flag to create a token without parent.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "num_uses": {
                "type": "number",
                "description": "The number of allowed uses of the token.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "period": {
                "type": "string",
                "description": "The period of the token.",
                "description_kind": "plain",
                "optional": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of policies.",
                "description_kind": "plain",
                "optional": true
              },
              "renew_increment": {
                "type": "number",
                "description": "The renew increment.",
                "description_kind": "plain",
                "optional": true
              },
              "renew_min_lease": {
                "type": "number",
                "description": "The minimum lease to renew token.",
                "description_kind": "plain",
                "optional": true
              },
              "renewable": {
                "type": "bool",
                "description": "Flag to allow the token to be renewed",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description": "The token role name.",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "string",
                "description": "The TTL period of the token.",
                "description_kind": "plain",
                "optional": true
              },
              "wrapped_token": {
                "type": "string",
                "description": "The client wrapped token.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "wrapping_accessor": {
                "type": "string",
                "description": "The client wrapping accessor.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "wrapping_ttl": {
                "type": "string",
                "description": "The TTL period of the wrapped token.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_token_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_entity_aliases": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of allowed entity aliases for this role.",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of allowed policies for given role.",
                "description_kind": "plain",
                "optional": true
              },
              "allowed_policies_glob": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of allowed policies with glob match for given role.",
                "description_kind": "plain",
                "optional": true
              },
              "disallowed_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of disallowed policies for given role.",
                "description_kind": "plain",
                "optional": true
              },
              "disallowed_policies_glob": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Set of disallowed policies with glob match for given role.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "orphan": {
                "type": "bool",
                "description": "If true, tokens created against this policy will be orphan tokens.",
                "description_kind": "plain",
                "optional": true
              },
              "path_suffix": {
                "type": "string",
                "description": "Tokens created against this role will have the given suffix as part of their path in addition to the role name.",
                "description_kind": "plain",
                "optional": true
              },
              "renewable": {
                "type": "bool",
                "description": "Whether to disable the ability of the token to be renewed past its initial TTL.",
                "description_kind": "plain",
                "optional": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transform_alphabet": {
          "version": 0,
          "block": {
            "attributes": {
              "alphabet": {
                "type": "string",
                "description": "A string of characters that contains the alphabet set.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the alphabet.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The mount path for a back-end, for example, the path given in \"$ vault auth enable -path=my-aws aws\".",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transform_role": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The mount path for a back-end, for example, the path given in \"$ vault auth enable -path=my-aws aws\".",
                "description_kind": "plain",
                "required": true
              },
              "transformations": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A comma separated string or slice of transformations to use.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transform_template": {
          "version": 0,
          "block": {
            "attributes": {
              "alphabet": {
                "type": "string",
                "description": "The alphabet to use for this template. This is only used during FPE transformations.",
                "description_kind": "plain",
                "optional": true
              },
              "decode_formats": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "The map of regular expression templates used to customize decoded outputs.\nOnly applicable to FPE transformations.",
                "description_kind": "plain",
                "optional": true
              },
              "encode_format": {
                "type": "string",
                "description": "The regular expression template used for encoding values.\nOnly applicable to FPE transformations.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the template.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The mount path for a back-end, for example, the path given in \"$ vault auth enable -path=my-aws aws\".",
                "description_kind": "plain",
                "required": true
              },
              "pattern": {
                "type": "string",
                "description": "The pattern used for matching. Currently, only regular expression pattern is supported.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "The pattern type to use for match detection. Currently, only regex is supported.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transform_transformation": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_roles": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The set of roles allowed to perform this transformation.",
                "description_kind": "plain",
                "optional": true
              },
              "deletion_allowed": {
                "type": "bool",
                "description": "If true, this transform can be deleted. Otherwise deletion is blocked while this value remains false.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "masking_character": {
                "type": "string",
                "description": "The character used to replace data when in masking mode",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of the transformation.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The mount path for a back-end, for example, the path given in \"$ vault auth enable -path=my-aws aws\".",
                "description_kind": "plain",
                "required": true
              },
              "template": {
                "type": "string",
                "description": "The name of the template to use.",
                "description_kind": "plain",
                "optional": true
              },
              "templates": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Templates configured for transformation.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tweak_source": {
                "type": "string",
                "description": "The source of where the tweak value comes from. Only valid when in FPE mode.",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "The type of transformation to perform.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transit_secret_backend_key": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_plaintext_backup": {
                "type": "bool",
                "description": "If set, enables taking backup of named key in the plaintext format. Once set, this cannot be disabled.",
                "description_kind": "plain",
                "optional": true
              },
              "auto_rotate_period": {
                "type": "number",
                "description": "Amount of seconds the key should live before being automatically rotated. A value of 0 disables automatic rotation for the key.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "The Transit secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "convergent_encryption": {
                "type": "bool",
                "description": "Whether or not to support convergent encryption, where the same plaintext creates the same ciphertext. This requires derived to be set to true.",
                "description_kind": "plain",
                "optional": true
              },
              "deletion_allowed": {
                "type": "bool",
                "description": "Specifies if the key is allowed to be deleted.",
                "description_kind": "plain",
                "optional": true
              },
              "derived": {
                "type": "bool",
                "description": "Specifies if key derivation is to be used. If enabled, all encrypt/decrypt requests to this key must provide a context which is used for key derivation.",
                "description_kind": "plain",
                "optional": true
              },
              "exportable": {
                "type": "bool",
                "description": "Enables keys to be exportable. This allows for all the valid keys in the key ring to be exported. Once set, this cannot be disabled.",
                "description_kind": "plain",
                "optional": true
              },
              "hybrid_key_type_ec": {
                "type": "string",
                "description": "The elliptic curve algorithm to use for hybrid signatures. Supported key types are `ecdsa-p256`, `ecdsa-p384`, `ecdsa-p521`, and `ed25519`.",
                "description_kind": "plain",
                "optional": true
              },
              "hybrid_key_type_pqc": {
                "type": "string",
                "description": "The post-quantum algorithm to use for hybrid signatures. Currently, ML-DSA is the only supported key type.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_size": {
                "type": "number",
                "description": "The key size in bytes for algorithms that allow variable key sizes. Currently only applicable to HMAC; this value must be between 32 and 512.",
                "description_kind": "plain",
                "optional": true
              },
              "keys": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "List of key versions in the keyring.",
                "description_kind": "plain",
                "computed": true
              },
              "latest_version": {
                "type": "number",
                "description": "Latest key version in use in the keyring",
                "description_kind": "plain",
                "computed": true
              },
              "min_available_version": {
                "type": "number",
                "description": "Minimum key version available for use.",
                "description_kind": "plain",
                "computed": true
              },
              "min_decryption_version": {
                "type": "number",
                "description": "Minimum key version to use for decryption.",
                "description_kind": "plain",
                "optional": true
              },
              "min_encryption_version": {
                "type": "number",
                "description": "Minimum key version to use for encryption",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the encryption key to create.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "parameter_set": {
                "type": "string",
                "description": "The parameter set to use for ML-DSA. Required for ML-DSA and hybrid keys.  Valid values for ML-DSA are `44`, `65`, and `87`. Valid values for SLH-DSA are `slh-dsa-sha2-128s`, `slh-dsa-shake-128s`, `slh-dsa-sha2-128f`, `slh-dsa-shake-128`, `slh-dsa-sha2-192s`, `slh-dsa-shake-192s`, `slh-dsa-sha2-192f`, `slh-dsa-shake-192f`, `slh-dsa-sha2-256s`, `slh-dsa-shake-256s`, `slh-dsa-sha2-256f`, and `slh-dsa-shake-256f`.",
                "description_kind": "plain",
                "optional": true
              },
              "supports_decryption": {
                "type": "bool",
                "description": "Whether or not the key supports decryption, based on key type.",
                "description_kind": "plain",
                "computed": true
              },
              "supports_derivation": {
                "type": "bool",
                "description": "Whether or not the key supports derivation, based on key type.",
                "description_kind": "plain",
                "computed": true
              },
              "supports_encryption": {
                "type": "bool",
                "description": "Whether or not the key supports encryption, based on key type.",
                "description_kind": "plain",
                "computed": true
              },
              "supports_signing": {
                "type": "bool",
                "description": "Whether or not the key supports signing, based on key type.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Specifies the type of key to create. The currently-supported types are: `aes128-gcm96`, `aes256-gcm96` (default), `chacha20-poly1305`, `ed25519`, `ecdsa-p256`, `ecdsa-p384`, `ecdsa-p521`, `hmac`, `rsa-2048`, `rsa-3072`, `rsa-4096`, `managed_key`, `aes128-cmac`, `aes192-cmac`, `aes256-cmac`, `ml-dsa`, `hybrid`, and `slh-dsa`.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transit_secret_cache_config": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The Transit secret backend the resource belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "size": {
                "type": "number",
                "description": "Number of cache entries. A size of 0 mean unlimited.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        }
      },
      "data_source_schemas": {
        "vault_ad_access_credentials": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "AD Secret Backend to read credentials from.",
                "description_kind": "plain",
                "required": true
              },
              "current_password": {
                "type": "string",
                "description": "Password for the service account.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_password": {
                "type": "string",
                "description": "Last known password for the service account.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "username": {
                "type": "string",
                "description": "Name of the service account.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "vault_approle_auth_backend_role_id": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role_id": {
                "type": "string",
                "description": "The RoleID of the role.",
                "description_kind": "plain",
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_auth_backend": {
          "version": 0,
          "block": {
            "attributes": {
              "accessor": {
                "type": "string",
                "description": "The accessor of the auth backend.",
                "description_kind": "plain",
                "computed": true
              },
              "default_lease_ttl_seconds": {
                "type": "number",
                "description": "Default lease duration in seconds",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The description of the auth backend.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "listing_visibility": {
                "type": "string",
                "description": "Specifies whether to show this mount in the UI-specific listing endpoint.",
                "description_kind": "plain",
                "computed": true
              },
              "local": {
                "type": "bool",
                "description": "Specifies if the auth method is local only",
                "description_kind": "plain",
                "computed": true
              },
              "max_lease_ttl_seconds": {
                "type": "number",
                "description": "Maximum possible lease duration in seconds",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The auth backend mount point.",
                "description_kind": "plain",
                "required": true
              },
              "type": {
                "type": "string",
                "description": "The name of the auth backend.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_auth_backends": {
          "version": 0,
          "block": {
            "attributes": {
              "accessors": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The accessors of the auth backends.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "paths": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The auth backend mount points.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "The type of the auth backend.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_access_credentials": {
          "version": 0,
          "block": {
            "attributes": {
              "access_key": {
                "type": "string",
                "description": "AWS access key ID read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "backend": {
                "type": "string",
                "description": "AWS Secret Backend to read credentials from.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lease_duration": {
                "type": "number",
                "description": "Lease duration in seconds relative to the time in lease_start_time.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_id": {
                "type": "string",
                "description": "Lease identifier assigned by vault.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_renewable": {
                "type": "bool",
                "description": "True if the duration of this lease can be extended through renewal.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_start_time": {
                "type": "string",
                "description": "Time at which the lease was read, using the clock of the system where Terraform was running",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "region": {
                "type": "string",
                "description": "Region the read credentials belong to.",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "AWS Secret Role to read credentials from.",
                "description_kind": "plain",
                "required": true
              },
              "role_arn": {
                "type": "string",
                "description": "ARN to use if multiple are available in the role. Required if the role has multiple ARNs.",
                "description_kind": "plain",
                "optional": true
              },
              "secret_key": {
                "type": "string",
                "description": "AWS secret key read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "security_token": {
                "type": "string",
                "description": "AWS security token read from Vault. (Only returned if type is 'sts').",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "ttl": {
                "type": "string",
                "description": "User specified Time-To-Live for the STS token. Uses the Role defined default_sts_ttl when not specified",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description": "Type of credentials to read. Must be either 'creds' for Access Key and Secret Key, or 'sts' for STS.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_aws_static_access_credentials": {
          "version": 0,
          "block": {
            "attributes": {
              "access_key": {
                "type": "string",
                "description": "AWS access key ID read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "backend": {
                "type": "string",
                "description": "AWS Secret Backend to read credentials from.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "secret_key": {
                "type": "string",
                "description": "AWS secret key read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_azure_access_credentials": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Azure Secret Backend to read credentials from.",
                "description_kind": "plain",
                "required": true
              },
              "client_id": {
                "type": "string",
                "description": "The client id for credentials to query the Azure APIs.",
                "description_kind": "plain",
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "The client secret for credentials to query the Azure APIs.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "environment": {
                "type": "string",
                "description": "The Azure environment to use during credential validation.\nDefaults to the Azure Public Cloud.\nSome possible values: AzurePublicCloud, AzureUSGovernmentCloud",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lease_duration": {
                "type": "number",
                "description": "Lease duration in seconds relative to the time in lease_start_time.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_id": {
                "type": "string",
                "description": "Lease identifier assigned by vault.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_renewable": {
                "type": "bool",
                "description": "True if the duration of this lease can be extended through renewal.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_start_time": {
                "type": "string",
                "description": "Time at which the lease was read, using the clock of the system where Terraform was running",
                "description_kind": "plain",
                "computed": true
              },
              "max_cred_validation_seconds": {
                "type": "number",
                "description": "If 'validate_creds' is true, the number of seconds after which to give up validating credentials.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "num_seconds_between_tests": {
                "type": "number",
                "description": "If 'validate_creds' is true, the number of seconds to wait between each test of generated credentials.",
                "description_kind": "plain",
                "optional": true
              },
              "num_sequential_successes": {
                "type": "number",
                "description": "If 'validate_creds' is true, the number of sequential successes required to validate generated credentials.",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "Azure Secret Role to read credentials from.",
                "description_kind": "plain",
                "required": true
              },
              "subscription_id": {
                "type": "string",
                "description": "The subscription ID to use during credential validation. Defaults to the subscription ID configured in the Vault backend",
                "description_kind": "plain",
                "optional": true
              },
              "tenant_id": {
                "type": "string",
                "description": "The tenant ID to use during credential validation. Defaults to the tenant ID configured in the Vault backend",
                "description_kind": "plain",
                "optional": true
              },
              "validate_creds": {
                "type": "bool",
                "description": "Whether generated credentials should be validated before being returned.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_gcp_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the auth backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_instance_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "bound_labels": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "bound_projects": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "bound_regions": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "bound_service_accounts": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "bound_zones": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role_id": {
                "type": "string",
                "description": "The RoleID of the GCP auth role.",
                "description_kind": "plain",
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              },
              "type": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_generic_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of strings read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "data_json": {
                "type": "string",
                "description": "JSON-encoded secret data read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lease_duration": {
                "type": "number",
                "description": "Lease duration in seconds relative to the time in lease_start_time.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_id": {
                "type": "string",
                "description": "Lease identifier assigned by vault.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_renewable": {
                "type": "bool",
                "description": "True if the duration of this lease can be extended through renewal.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_start_time": {
                "type": "string",
                "description": "Time at which the lease was read, using the clock of the system where Terraform was running",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path from which a secret will be read.",
                "description_kind": "plain",
                "required": true
              },
              "version": {
                "type": "number",
                "description_kind": "plain",
                "optional": true
              },
              "with_lease_start_time": {
                "type": "bool",
                "description": "If set to true, stores 'lease_start_time' in the TF state.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_entity": {
          "version": 0,
          "block": {
            "attributes": {
              "alias_id": {
                "type": "string",
                "description": "ID of the alias.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "alias_mount_accessor": {
                "type": "string",
                "description": "Accessor of the mount to which the alias belongs to. This should be supplied in conjunction with `alias_name`.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "alias_name": {
                "type": "string",
                "description": "Name of the alias. This should be supplied in conjunction with `alias_mount_accessor`.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "aliases": {
                "type": [
                  "set",
                  [
                    "object",
                    {
                      "canonical_id": "string",
                      "creation_time": "string",
                      "id": "string",
                      "last_update_time": "string",
                      "merged_from_canonical_ids": [
                        "set",
                        "string"
                      ],
                      "metadata": [
                        "map",
                        "string"
                      ],
                      "mount_accessor": "string",
                      "mount_path": "string",
                      "mount_type": "string",
                      "name": "string"
                    }
                  ]
                ],
                "description_kind": "plain",
                "computed": true
              },
              "creation_time": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "data_json": {
                "type": "string",
                "description": "Entity data from Vault in JSON String form",
                "description_kind": "plain",
                "computed": true
              },
              "direct_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "disabled": {
                "type": "bool",
                "description_kind": "plain",
                "computed": true
              },
              "entity_id": {
                "type": "string",
                "description": "ID of the entity.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "entity_name": {
                "type": "string",
                "description": "Name of the entity.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "inherited_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "last_update_time": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "merged_entity_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_group": {
          "version": 0,
          "block": {
            "attributes": {
              "alias_canonical_id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "alias_creation_time": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "alias_id": {
                "type": "string",
                "description": "ID of the alias.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "alias_last_update_time": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "alias_merged_from_canonical_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "alias_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "alias_mount_accessor": {
                "type": "string",
                "description": "Accessor of the mount to which the alias belongs to. This should be supplied in conjunction with `alias_name`.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "alias_mount_path": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "alias_mount_type": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "alias_name": {
                "type": "string",
                "description": "Name of the alias. This should be supplied in conjunction with `alias_mount_accessor`.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "creation_time": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "data_json": {
                "type": "string",
                "description": "Group data from Vault in JSON String form",
                "description_kind": "plain",
                "computed": true
              },
              "group_id": {
                "type": "string",
                "description": "ID of the group.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "group_name": {
                "type": "string",
                "description": "Name of the group.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_update_time": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "member_entity_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "member_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "modify_index": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "parent_group_ids": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_client_creds": {
          "version": 0,
          "block": {
            "attributes": {
              "client_id": {
                "type": "string",
                "description": "The Client ID from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "client_secret": {
                "type": "string",
                "description": "The Client Secret from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the client.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_openid_config": {
          "version": 0,
          "block": {
            "attributes": {
              "authorization_endpoint": {
                "type": "string",
                "description": "The Authorization Endpoint for the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "grant_types_supported": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The grant types supported by the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id_token_signing_alg_values_supported": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The signing algorithms supported by the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "The URL of the issuer for the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "jwks_uri": {
                "type": "string",
                "description": "The well known keys URI for the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the provider.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "request_uri_parameter_supported": {
                "type": "bool",
                "description": "Specifies whether Request URI Parameter is supported by the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "response_types_supported": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The response types supported by the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "scopes_supported": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The scopes supported by the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "subject_types_supported": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The subject types supported by the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "token_endpoint": {
                "type": "string",
                "description": "The Token Endpoint for the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "token_endpoint_auth_methods_supported": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The token endpoint auth methods supported by the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "userinfo_endpoint": {
                "type": "string",
                "description": "The User Info Endpoint for the provider.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_identity_oidc_public_keys": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "keys": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "The public portion of keys for an OIDC provider. Clients can use them to validate the authenticity of an identity token.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the provider.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kubernetes_auth_backend_config": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Unique name of the kubernetes backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_iss_validation": {
                "type": "bool",
                "description": "Optional disable JWT issuer validation. Allows to skip ISS validation.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "disable_local_ca_jwt": {
                "type": "bool",
                "description": "Optional disable defaulting to the local CA cert and service account JWT when running in a Kubernetes pod.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer": {
                "type": "string",
                "description": "Optional JWT issuer. If no issuer is specified, kubernetes.io/serviceaccount will be used as the default issuer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "kubernetes_ca_cert": {
                "type": "string",
                "description": "PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "kubernetes_host": {
                "type": "string",
                "description": "Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "pem_keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "use_annotations_as_alias_metadata": {
                "type": "bool",
                "description": "Use annotations from the client token's associated service account as alias metadata for the Vault entity.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kubernetes_auth_backend_role": {
          "version": 0,
          "block": {
            "attributes": {
              "alias_name_source": {
                "type": "string",
                "description": "Method used for generating identity aliases.",
                "description_kind": "plain",
                "computed": true
              },
              "audience": {
                "type": "string",
                "description": "Optional Audience claim to verify in the JWT.",
                "description_kind": "plain",
                "optional": true
              },
              "backend": {
                "type": "string",
                "description": "Unique name of the kubernetes backend to configure.",
                "description_kind": "plain",
                "optional": true
              },
              "bound_service_account_names": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of service account names able to access this role. If set to \"*\" all names are allowed, both this and bound_service_account_namespaces can not be \"*\".",
                "description_kind": "plain",
                "computed": true
              },
              "bound_service_account_namespaces": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of namespaces allowed to access this role. If set to \"*\" all namespaces are allowed, both this and bound_service_account_names can not be set to \"*\".",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "token_bound_cidrs": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_explicit_max_ttl": {
                "type": "number",
                "description": "Generated Token's Explicit Maximum TTL in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_max_ttl": {
                "type": "number",
                "description": "The maximum lifetime of the generated token",
                "description_kind": "plain",
                "optional": true
              },
              "token_no_default_policy": {
                "type": "bool",
                "description": "If true, the 'default' policy will not automatically be added to generated tokens",
                "description_kind": "plain",
                "optional": true
              },
              "token_num_uses": {
                "type": "number",
                "description": "The maximum number of times a token may be used, a value of zero means unlimited",
                "description_kind": "plain",
                "optional": true
              },
              "token_period": {
                "type": "number",
                "description": "Generated Token's Period",
                "description_kind": "plain",
                "optional": true
              },
              "token_policies": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Generated Token's Policies",
                "description_kind": "plain",
                "optional": true
              },
              "token_ttl": {
                "type": "number",
                "description": "The initial ttl of the token to generate in seconds",
                "description_kind": "plain",
                "optional": true
              },
              "token_type": {
                "type": "string",
                "description": "The type of token to generate, service or batch",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kubernetes_service_account_token": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The Kubernetes secret backend to generate service account tokens from.",
                "description_kind": "plain",
                "required": true
              },
              "cluster_role_binding": {
                "type": "bool",
                "description": "If true, generate a ClusterRoleBinding to grant permissions across the whole cluster instead of within a namespace.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "kubernetes_namespace": {
                "type": "string",
                "description": "The name of the Kubernetes namespace in which to generate the credentials.",
                "description_kind": "plain",
                "required": true
              },
              "lease_duration": {
                "type": "number",
                "description": "The duration of the lease in seconds.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_id": {
                "type": "string",
                "description": "The lease identifier assigned by Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_renewable": {
                "type": "bool",
                "description": "True if the duration of this lease can be extended through renewal.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "The name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "service_account_name": {
                "type": "string",
                "description": "The name of the service account associated with the token.",
                "description_kind": "plain",
                "computed": true
              },
              "service_account_namespace": {
                "type": "string",
                "description": "The Kubernetes namespace that the service account resides in.",
                "description_kind": "plain",
                "computed": true
              },
              "service_account_token": {
                "type": "string",
                "description": "The Kubernetes service account token.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "ttl": {
                "type": "string",
                "description": "The TTL of the generated Kubernetes service account token, specified in seconds or as a Go duration format string",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kv_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of strings read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "data_json": {
                "type": "string",
                "description": "JSON-encoded secret data read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lease_duration": {
                "type": "number",
                "description": "Lease duration in seconds.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_id": {
                "type": "string",
                "description": "Lease identifier assigned by Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_renewable": {
                "type": "bool",
                "description": "True if the duration of this lease can be extended through renewal.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path of the KV-V1 secret.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kv_secret_subkeys_v2": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Subkeys stored as a map of strings.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "data_json": {
                "type": "string",
                "description": "Subkeys for the KV-V2 secret read from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "depth": {
                "type": "number",
                "description": "Specifies the deepest nesting level to provide in the output.If non-zero, keys that reside at the specified depth value will be artificially treated as leaves and will thus be 'null' even if further underlying sub-keys exist.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "Path where KV-V2 engine is mounted",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Full name of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path where the generic secret will be written.",
                "description_kind": "plain",
                "computed": true
              },
              "version": {
                "type": "number",
                "description": "Specifies the version to return. If not set the latest version is returned.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kv_secret_v2": {
          "version": 0,
          "block": {
            "attributes": {
              "created_time": {
                "type": "string",
                "description": "Time at which the secret was created",
                "description_kind": "plain",
                "computed": true
              },
              "custom_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Custom metadata for the secret",
                "description_kind": "plain",
                "computed": true
              },
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of strings read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "data_json": {
                "type": "string",
                "description": "JSON-encoded secret data read from Vault.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "deletion_time": {
                "type": "string",
                "description": "Deletion time for the secret",
                "description_kind": "plain",
                "computed": true
              },
              "destroyed": {
                "type": "bool",
                "description": "Indicates whether the secret has been destroyed",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "Path where KV-V2 engine is mounted",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Full name of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path where the KVV2 secret is written.",
                "description_kind": "plain",
                "computed": true
              },
              "version": {
                "type": "number",
                "description": "Version of the secret to retrieve",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain",
            "deprecated": true
          }
        },
        "vault_kv_secrets_list": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of all secret names.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full KV-V1 path where secrets will be listed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_kv_secrets_list_v2": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "Path where KV-V2 engine is mounted",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "Full named path of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'",
                "description_kind": "plain",
                "optional": true
              },
              "names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of all secret names.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path where the KV-V2 secrets are listed.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ldap_dynamic_credentials": {
          "version": 0,
          "block": {
            "attributes": {
              "distinguished_names": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of the distinguished names (DN) created.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "lease_duration": {
                "type": "number",
                "description": "Lease duration in seconds.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_id": {
                "type": "string",
                "description": "Lease identifier assigned by Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "lease_renewable": {
                "type": "bool",
                "description": "True if the duration of this lease can be extended through renewal.",
                "description_kind": "plain",
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "LDAP Secret Backend to read credentials from.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "Password for the dynamic role.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "username": {
                "type": "string",
                "description": "Name of the dynamic role.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ldap_static_credentials": {
          "version": 0,
          "block": {
            "attributes": {
              "dn": {
                "type": "string",
                "description": "Distinguished name (DN) of the existing LDAP entry to manage password rotation for.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_password": {
                "type": "string",
                "description": "Last known password for the static role.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "last_vault_rotation": {
                "type": "string",
                "description": "Last time Vault rotated this static role's password.",
                "description_kind": "plain",
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "LDAP Secret Backend to read credentials from.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "Password for the static role.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "role_name": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "rotation_period": {
                "type": "number",
                "description": "How often Vault should rotate the password of the user entry.",
                "description_kind": "plain",
                "computed": true
              },
              "ttl": {
                "type": "number",
                "description": "Duration in seconds after which the issued credential should expire.",
                "description_kind": "plain",
                "computed": true
              },
              "username": {
                "type": "string",
                "description": "Name of the static role.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_namespace": {
          "version": 0,
          "block": {
            "attributes": {
              "custom_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Metadata associated with this namespace.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "namespace_id": {
                "type": "string",
                "description": "Namespace ID.",
                "description_kind": "plain",
                "computed": true
              },
              "path": {
                "type": "string",
                "description": "Namespace path.",
                "description_kind": "plain",
                "optional": true
              },
              "path_fq": {
                "type": "string",
                "description": "The fully qualified namespace path.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_namespaces": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "paths": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Namespace paths.",
                "description_kind": "plain",
                "computed": true
              },
              "paths_fq": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The fully qualified namespace paths.",
                "description_kind": "plain",
                "computed": true
              },
              "recursive": {
                "type": "bool",
                "description": "True to fetch all child namespaces.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_nomad_access_token": {
          "version": 0,
          "block": {
            "attributes": {
              "accessor_id": {
                "type": "string",
                "description": "The public identifier for a specific token. It can be used to look up information about a token or to revoke a token.",
                "description_kind": "plain",
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "Nomad secret backend to generate tokens from.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "role": {
                "type": "string",
                "description": "Name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "secret_id": {
                "type": "string",
                "description": "Used to make requests to Nomad and should be kept private.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_cert_metadata": {
          "version": 0,
          "block": {
            "attributes": {
              "cert_metadata": {
                "type": "string",
                "description": "The metadata returned from Vault",
                "description_kind": "plain",
                "computed": true
              },
              "expiration": {
                "type": "string",
                "description": "The certificate expiration as a Unix-style timestamp.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer_id": {
                "type": "string",
                "description": "ID of the issuer.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "role": {
                "type": "string",
                "description": "The role that issued the certificate",
                "description_kind": "plain",
                "computed": true
              },
              "serial": {
                "type": "string",
                "description": "Specifies the serial of the certificate whose metadata to read.",
                "description_kind": "plain",
                "required": true
              },
              "serial_number": {
                "type": "string",
                "description": "The certificate serial number",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_cmpv2": {
          "version": 0,
          "block": {
            "attributes": {
              "audit_fields": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Fields parsed from the CSR that appear in the audit and can be used by sentinel policies",
                "description_kind": "plain",
                "computed": true
              },
              "authenticators": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cert": [
                        "map",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Lists the mount accessors CMPv2 should delegate authentication requests towards",
                "description_kind": "plain",
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "Path where PKI engine is mounted",
                "description_kind": "plain",
                "required": true
              },
              "default_path_policy": {
                "type": "string",
                "description": "Can be sign-verbatim or a role given by role:<role_name>",
                "description_kind": "plain",
                "computed": true
              },
              "disabled_validations": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A comma-separated list of validations not to perform on CMPv2 messages.",
                "description_kind": "plain",
                "optional": true
              },
              "enable_sentinel_parsing": {
                "type": "bool",
                "description": "If set, parse out fields from the provided CSR making them available for Sentinel policies",
                "description_kind": "plain",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Specifies whether CMPv2 is enabled",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_updated": {
                "type": "string",
                "description": "A read-only timestamp representing the last time the configuration was updated",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Reads Vault PKI CMPv2 configuration",
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_est": {
          "version": 0,
          "block": {
            "attributes": {
              "audit_fields": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Fields parsed from the CSR that appear in the audit and can be used by sentinel policies",
                "description_kind": "plain",
                "computed": true
              },
              "authenticators": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cert": [
                        "map",
                        "string"
                      ],
                      "userpass": [
                        "map",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Lists the mount accessors EST should delegate authentication requests towards",
                "description_kind": "plain",
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "Path where PKI engine is mounted",
                "description_kind": "plain",
                "required": true
              },
              "default_mount": {
                "type": "bool",
                "description": "If set, this mount is registered as the default `.well-known/est` URL path. Only a single mount can enable this across a Vault cluster",
                "description_kind": "plain",
                "computed": true
              },
              "default_path_policy": {
                "type": "string",
                "description": "Required to be set if default_mount is enabled. Specifies the behavior for requests using the default EST label. Can be sign-verbatim or a role given by role:<role_name>",
                "description_kind": "plain",
                "computed": true
              },
              "enable_sentinel_parsing": {
                "type": "bool",
                "description": "If set, parse out fields from the provided CSR making them available for Sentinel policies",
                "description_kind": "plain",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Specifies whether EST is enabled",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "label_to_path_policy": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "A pairing of an EST label with the redirected behavior for requests hitting that role. The path policy can be sign-verbatim or a role given by role:<role_name>. Labels must be unique across Vault cluster, and will register .well-known/est/<label> URL paths",
                "description_kind": "plain",
                "computed": true
              },
              "last_updated": {
                "type": "string",
                "description": "A read-only timestamp representing the last time the configuration was updated",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "Reads Vault PKI EST configuration",
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_config_scep": {
          "version": 0,
          "block": {
            "attributes": {
              "allowed_digest_algorithms": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of allowed digest algorithms for SCEP requests",
                "description_kind": "plain",
                "computed": true
              },
              "allowed_encryption_algorithms": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of allowed encryption algorithms for SCEP requests",
                "description_kind": "plain",
                "computed": true
              },
              "authenticators": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "cert": [
                        "map",
                        "string"
                      ],
                      "scep": [
                        "map",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Lists the mount accessors SCEP should delegate authentication requests towards",
                "description_kind": "plain",
                "computed": true
              },
              "backend": {
                "type": "string",
                "description": "Path where PKI engine is mounted",
                "description_kind": "plain",
                "required": true
              },
              "default_path_policy": {
                "type": "string",
                "description": "Specifies the policy to be used for non-role-qualified SCEP requests; valid values are 'sign-verbatim', or \"role:<role_name>\" to specify a role to use as this policy.",
                "description_kind": "plain",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Specifies whether SCEP is enabled",
                "description_kind": "plain",
                "computed": true
              },
              "external_validation": {
                "type": [
                  "list",
                  [
                    "object",
                    {
                      "intune": [
                        "map",
                        "string"
                      ]
                    }
                  ]
                ],
                "description": "Lists the 3rd party validation of SCEP requests",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "last_updated": {
                "type": "string",
                "description": "A read-only timestamp representing the last time the configuration was updated",
                "description_kind": "plain",
                "computed": true
              },
              "log_level": {
                "type": "string",
                "description": "The level of logging verbosity, affects only SCEP logs on this mount",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "restrict_ca_chain_to_issuer": {
                "type": "bool",
                "description": "If true, only return the issuer CA, otherwise the entire CA certificate chain will be returned if available from the PKI mount",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Reads Vault PKI SCEP configuration",
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_issuer": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "ca_chain": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The CA chain as a list of format specific certificates",
                "description_kind": "plain",
                "computed": true
              },
              "certificate": {
                "type": "string",
                "description": "The certificate.",
                "description_kind": "plain",
                "computed": true
              },
              "disable_critical_extension_checks": {
                "type": "bool",
                "description": "This determines whether this issuer is able to issue certificates where the chain of trust (including the issued certificate) contain critical extensions not processed by Vault.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_name_checks": {
                "type": "bool",
                "description": "This determines whether this issuer is able to issue certificates where the chain of trust (including the final issued certificate) contains a link in which the subject of the issuing certificate does not match the named issuer of the certificate it signed.",
                "description_kind": "plain",
                "optional": true
              },
              "disable_name_constraint_checks": {
                "type": "bool",
                "description": "This determines whether this issuer is able to issue certificates where the chain of trust (including the final issued certificate) violates the name constraints critical extension of one of the issuer certificates in the chain",
                "description_kind": "plain",
                "optional": true
              },
              "disable_path_length_checks": {
                "type": "bool",
                "description": "This determines whether this issuer is able to issue certificates where the chain of trust (including the final issued certificate) is longer than allowed by a certificate authority in that chain.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "issuer_id": {
                "type": "string",
                "description": "ID of the issuer.",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_name": {
                "type": "string",
                "description": "Name of the issuer.",
                "description_kind": "plain",
                "computed": true
              },
              "issuer_ref": {
                "type": "string",
                "description": "Reference to an existing issuer.",
                "description_kind": "plain",
                "required": true
              },
              "key_id": {
                "type": "string",
                "description": "ID of the key used by the issuer.",
                "description_kind": "plain",
                "computed": true
              },
              "leaf_not_after_behavior": {
                "type": "string",
                "description": "Behavior of a leaf's NotAfter field during issuance.",
                "description_kind": "plain",
                "computed": true
              },
              "manual_chain": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Chain of issuer references to build this issuer's computed CAChain field from, when non-empty",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "usage": {
                "type": "string",
                "description": "Allowed usages for this issuer.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_issuers": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_info": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of issuer strings read from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "key_info_json": {
                "type": "string",
                "description": "JSON-encoded key info data read from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Keys used by issuers under the backend path.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_key": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "description": "ID of the key used.",
                "description_kind": "plain",
                "computed": true
              },
              "key_name": {
                "type": "string",
                "description": "Name of the key.",
                "description_kind": "plain",
                "computed": true
              },
              "key_ref": {
                "type": "string",
                "description": "Reference to an existing key.",
                "description_kind": "plain",
                "required": true
              },
              "key_type": {
                "type": "string",
                "description": "Type of the key.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_pki_secret_backend_keys": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "Full path where PKI backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_info": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of key strings read from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "key_info_json": {
                "type": "string",
                "description": "JSON-encoded key data read from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "keys": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Keys used under the backend path.",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_policy_document": {
          "version": 0,
          "block": {
            "attributes": {
              "hcl": {
                "type": "string",
                "description": "The above arguments serialized as a standard Vault HCL policy document.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              }
            },
            "block_types": {
              "rule": {
                "nesting_mode": "list",
                "block": {
                  "attributes": {
                    "capabilities": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of capabilities to apply to the specified path.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the rule.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_wrapping_ttl": {
                      "type": "string",
                      "description": "The maximum allowed TTL that clients can specify for a wrapped response.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "min_wrapping_ttl": {
                      "type": "string",
                      "description": "The minimum allowed TTL that clients can specify for a wrapped response.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description": "A path in Vault that this rule applies to.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "required_parameters": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of parameters that must be specified.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "subscribe_event_types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of event types to subscribe to when using `subscribe` capability",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "block_types": {
                    "allowed_parameter": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "key": {
                            "type": "string",
                            "description": "Name of permitted key.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "value": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of values what are permitted by policy rule.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description": "Whitelists a list of keys and values that are permitted on the given path.",
                        "description_kind": "plain"
                      }
                    },
                    "denied_parameter": {
                      "nesting_mode": "list",
                      "block": {
                        "attributes": {
                          "key": {
                            "type": "string",
                            "description": "Name of denied key.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "value": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "A list of values what are denied by policy rule.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "description": "Blacklists a list of parameter and values.",
                        "description_kind": "plain"
                      }
                    }
                  },
                  "description": "The policy rule",
                  "description_kind": "plain"
                }
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_raft_autopilot_state": {
          "version": 0,
          "block": {
            "attributes": {
              "failure_tolerance": {
                "type": "number",
                "description": "How many nodes could fail before the cluster becomes unhealthy",
                "description_kind": "plain",
                "computed": true
              },
              "healthy": {
                "type": "bool",
                "description": "Health status",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "leader": {
                "type": "string",
                "description": "Current leader of Vault",
                "description_kind": "plain",
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "optimistic_failure_tolerance": {
                "type": "number",
                "description": "The cluster-level optimistic failure tolerance.",
                "description_kind": "plain",
                "computed": true
              },
              "redundancy_zones": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Additional output related to redundancy zones stored as a map of strings.",
                "description_kind": "plain",
                "computed": true
              },
              "redundancy_zones_json": {
                "type": "string",
                "description": "Subkeys for the redundancy zones read from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "servers": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Additional output related to servers stored as a map of strings.",
                "description_kind": "plain",
                "computed": true
              },
              "servers_json": {
                "type": "string",
                "description": "Subkeys for the servers read from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "upgrade_info": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Additional output related to upgrade info stored as a map of strings.",
                "description_kind": "plain",
                "computed": true
              },
              "upgrade_info_json": {
                "type": "string",
                "description": "Subkeys for the servers read from Vault.",
                "description_kind": "plain",
                "computed": true
              },
              "voters": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The voters in the Vault cluster.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_ssh_secret_backend_sign": {
          "version": 0,
          "block": {
            "attributes": {
              "cert_type": {
                "type": "string",
                "description": "Specifies the type of certificate to be created; either \"user\" or \"host\".",
                "description_kind": "plain",
                "optional": true
              },
              "critical_options": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies a map of the critical options that the certificate should be signed for. Defaults to none.",
                "description_kind": "plain",
                "optional": true
              },
              "extensions": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Specifies a map of the extensions that the certificate should be signed for. Defaults to none.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_id": {
                "type": "string",
                "description": "Specifies the key id that the created certificate should have. If not specified, the display name of the token will be used.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Specifies the name of the role to sign.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Full path where SSH backend is mounted.",
                "description_kind": "plain",
                "required": true
              },
              "public_key": {
                "type": "string",
                "description": "Specifies the SSH public key that should be signed.",
                "description_kind": "plain",
                "required": true
              },
              "serial_number": {
                "type": "string",
                "description": "The serial number of the certificate returned from Vault",
                "description_kind": "plain",
                "computed": true
              },
              "signed_key": {
                "type": "string",
                "description": "The signed certificate returned from Vault",
                "description_kind": "plain",
                "computed": true
              },
              "ttl": {
                "type": "string",
                "description": "Specifies the Requested Time To Live. Cannot be greater than the role's max_ttl value. If not provided, the role's ttl value will be used. Note that the role values default to system values if not explicitly set.",
                "description_kind": "plain",
                "optional": true
              },
              "valid_principals": {
                "type": "string",
                "description": "Specifies valid principals, either usernames or hostnames, that the certificate should be signed for. Required unless the role has specified allow_empty_principals or a value has been set for either the default_user or default_user_template role parameters.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transform_decode": {
          "version": 0,
          "block": {
            "attributes": {
              "batch_input": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "Specifies a list of items to be decoded in a single batch. If this parameter is set, the top-level parameters 'value', 'transformation' and 'tweak' will be ignored. Each batch item within the list can specify these parameters instead.",
                "description_kind": "plain",
                "optional": true
              },
              "batch_results": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "The result of decoding batch_input.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "decoded_value": {
                "type": "string",
                "description": "The result of decoding a value.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path to backend from which to retrieve data.",
                "description_kind": "plain",
                "required": true
              },
              "role_name": {
                "type": "string",
                "description": "The name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "transformation": {
                "type": "string",
                "description": "The transformation to perform. If no value is provided and the role contains a single transformation, this value will be inferred from the role.",
                "description_kind": "plain",
                "optional": true
              },
              "tweak": {
                "type": "string",
                "description": "The tweak value to use. Only applicable for FPE transformations",
                "description_kind": "plain",
                "optional": true
              },
              "value": {
                "type": "string",
                "description": "The value in which to decode.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transform_encode": {
          "version": 0,
          "block": {
            "attributes": {
              "batch_input": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "Specifies a list of items to be encoded in a single batch. If this parameter is set, the parameters 'value', 'transformation' and 'tweak' will be ignored. Each batch item within the list can specify these parameters instead.",
                "description_kind": "plain",
                "optional": true
              },
              "batch_results": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "The result of encoding batch_input.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "encoded_value": {
                "type": "string",
                "description": "The result of encoding a value.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Path to backend from which to retrieve data.",
                "description_kind": "plain",
                "required": true
              },
              "role_name": {
                "type": "string",
                "description": "The name of the role.",
                "description_kind": "plain",
                "required": true
              },
              "transformation": {
                "type": "string",
                "description": "The transformation to perform. If no value is provided and the role contains a single transformation, this value will be inferred from the role.",
                "description_kind": "plain",
                "optional": true
              },
              "tweak": {
                "type": "string",
                "description": "The tweak value to use. Only applicable for FPE transformations",
                "description_kind": "plain",
                "optional": true
              },
              "value": {
                "type": "string",
                "description": "The value in which to encode.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transit_cmac": {
          "version": 0,
          "block": {
            "attributes": {
              "batch_input": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "Specifies a list of items for processing. When this parameter is set, any supplied 'input' or 'context' parameters will be ignored. Responses are returned in the 'batch_results' array component of the 'data' element of the response. Any batch output will preserve the order of the batch input. If the input data value of an item is invalid, the corresponding item in the 'batch_results' will have the key 'error' with a value describing the error.",
                "description_kind": "plain",
                "optional": true
              },
              "batch_results": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "The results returned from Vault if using batch_input",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "cmac": {
                "type": "string",
                "description": "The CMAC returned from Vault if using input",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "input": {
                "type": "string",
                "description": "Specifies the base64 encoded input data. One of input or batch_input must be supplied.",
                "description_kind": "plain",
                "optional": true
              },
              "key_version": {
                "type": "number",
                "description": "The version of the key to use",
                "description_kind": "plain",
                "optional": true
              },
              "mac_length": {
                "type": "number",
                "description": "Specifies the MAC length to use (POST body parameter). The mac_length cannot be larger than the cipher's block size.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the CMAC key to use.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The Transit secret backend the key belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "url_mac_length": {
                "type": "number",
                "description": "Specifies the MAC length to use (URL parameter). If provided, this value overrides mac_length. The url_mac_length cannot be larger than the cipher's block size.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transit_decrypt": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The Transit secret backend the key belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "ciphertext": {
                "type": "string",
                "description": "Transit encrypted cipher text.",
                "description_kind": "plain",
                "required": true
              },
              "context": {
                "type": "string",
                "description": "Specifies the context for key derivation",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "Name of the decryption key to use.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "plaintext": {
                "type": "string",
                "description": "Decrypted plain text",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transit_encrypt": {
          "version": 0,
          "block": {
            "attributes": {
              "backend": {
                "type": "string",
                "description": "The Transit secret backend the key belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "ciphertext": {
                "type": "string",
                "description": "Transit encrypted cipher text.",
                "description_kind": "plain",
                "computed": true
              },
              "context": {
                "type": "string",
                "description": "Specifies the context for key derivation",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "Name of the encryption key to use.",
                "description_kind": "plain",
                "required": true
              },
              "key_version": {
                "type": "number",
                "description": "The version of the key to use for encryption",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "plaintext": {
                "type": "string",
                "description": "Map of strings read from Vault.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transit_sign": {
          "version": 0,
          "block": {
            "attributes": {
              "batch_input": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "Specifies a list of items for processing. When this parameter is set, any supplied 'input' or 'context' parameters will be ignored. Responses are returned in the 'batch_results' array component of the 'data' element of the response. Any batch output will preserve the order of the batch input. If the input data value of an item is invalid, the corresponding item in the 'batch_results' will have the key 'error' with a value describing the error.",
                "description_kind": "plain",
                "optional": true
              },
              "batch_results": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "The results returned from Vault if using batch_input",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "context": {
                "type": "string",
                "description": "Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys.",
                "description_kind": "plain",
                "optional": true
              },
              "hash_algorithm": {
                "type": "string",
                "description": "Specifies the hash algorithm to use for supporting key types (notably, not including ed25519 which specifies its own hash algorithm).",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "input": {
                "type": "string",
                "description": "Specifies the base64 encoded input data. One of input or batch_input must be supplied.",
                "description_kind": "plain",
                "optional": true
              },
              "key_version": {
                "type": "number",
                "description": "The version of the key to use",
                "description_kind": "plain",
                "optional": true
              },
              "marshaling_algorithm": {
                "type": "string",
                "description": "Specifies the way in which the signature should be marshaled. This currently only applies to ECDSA keys.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the signing key to use.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The Transit secret backend the key belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "prehashed": {
                "type": "bool",
                "description": "Set to true when the input is already hashed. If the key type is rsa-2048, rsa-3072 or rsa-4096, then the algorithm used to hash the input should be indicated by the hash_algorithm parameter. Just as the value to sign should be the base64-encoded representation of the exact binary data you want signed, when set, input is expected to be base64-encoded binary hashed data, not hex-formatted. (As an example, on the command line, you could generate a suitable input via openssl dgst -sha256 -binary | base64.)",
                "description_kind": "plain",
                "optional": true
              },
              "reference": {
                "type": "string",
                "description": "A user-supplied string that will be present in the reference field on the corresponding batch_results item in the response, to assist in understanding which result corresponds to a particular input. Only valid on batch requests when using \u2018batch_input\u2019 below.",
                "description_kind": "plain",
                "optional": true
              },
              "salt_length": {
                "type": "string",
                "description": "The salt length used to sign. This currently only applies to the RSA PSS signature scheme.",
                "description_kind": "plain",
                "optional": true
              },
              "signature": {
                "type": "string",
                "description": "The signature returned from Vault if using input",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "signature_algorithm": {
                "type": "string",
                "description": "When using a RSA key, specifies the RSA signature algorithm to use for signing.",
                "description_kind": "plain",
                "optional": true
              },
              "signature_context": {
                "type": "string",
                "description": "Base64 encoded context for Ed25519ctx and Ed25519ph signatures.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description_kind": "plain"
          }
        },
        "vault_transit_verify": {
          "version": 0,
          "block": {
            "attributes": {
              "batch_input": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "Specifies a list of items for processing. When this parameter is set, any supplied 'input' or 'context' parameters will be ignored. Responses are returned in the 'batch_results' array component of the 'data' element of the response. Any batch output will preserve the order of the batch input. If the input data value of an item is invalid, the corresponding item in the 'batch_results' will have the key 'error' with a value describing the error.",
                "description_kind": "plain",
                "optional": true
              },
              "batch_results": {
                "type": [
                  "list",
                  [
                    "map",
                    "string"
                  ]
                ],
                "description": "The results returned from Vault if using batch_input",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "cmac": {
                "type": "string",
                "description": "(Enterprise only) Specifies the signature output from the /transit/cmac function. One of the following arguments must be supplied signature, hmac or cmac.",
                "description_kind": "plain",
                "optional": true
              },
              "context": {
                "type": "string",
                "description": "Base64 encoded context for key derivation. Required if key derivation is enabled; currently only available with ed25519 keys.",
                "description_kind": "plain",
                "optional": true
              },
              "hash_algorithm": {
                "type": "string",
                "description": "Specifies the hash algorithm to use.",
                "description_kind": "plain",
                "optional": true
              },
              "hmac": {
                "type": "string",
                "description": "Specifies the signature output from the /transit/hmac function. One of the following arguments must be supplied signature, hmac or cmac.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "input": {
                "type": "string",
                "description": "Specifies the base64 encoded input data. One of input or batch_input must be supplied.",
                "description_kind": "plain",
                "optional": true
              },
              "mac_length": {
                "type": "number",
                "description": "Specifies the MAC length used to generate a CMAC. The mac_length cannot be larger than the cipher's block size.",
                "description_kind": "plain",
                "optional": true
              },
              "marshaling_algorithm": {
                "type": "string",
                "description": "Specifies the way in which the signature was originally marshaled. This currently only applies to ECDSA keys.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Specifies the name of the encryption key that was used to generate the signature or HMAC.",
                "description_kind": "plain",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The Transit secret backend the key belongs to.",
                "description_kind": "plain",
                "required": true
              },
              "prehashed": {
                "type": "bool",
                "description": "Set to true when the input is already hashed. If the key type is rsa-2048, rsa-3072 or rsa-4096, then the algorithm used to hash the input should be indicated by the hash_algorithm parameter. Just as the value to sign should be the base64-encoded representation of the exact binary data you want signed, when set, input is expected to be base64-encoded binary hashed data, not hex-formatted. (As an example, on the command line, you could generate a suitable input via openssl dgst -sha256 -binary | base64.)",
                "description_kind": "plain",
                "optional": true
              },
              "reference": {
                "type": "string",
                "description": "A user-supplied string that will be present in the reference field on the corresponding batch_results item in the response, to assist in understanding which result corresponds to a particular input. Only valid on batch requests when using \u2018batch_input\u2019 below.",
                "description_kind": "plain",
                "optional": true
              },
              "salt_length": {
                "type": "string",
                "description": "The salt length used to sign. This currently only applies to the RSA PSS signature scheme.",
                "description_kind": "plain",
                "optional": true
              },
              "signature": {
                "type": "string",
                "description": "Specifies the signature output from the /transit/sign function. One of the following arguments must be supplied signature, hmac or cmac.",
                "description_kind": "plain",
                "optional": true
              },
              "signature_algorithm": {
                "type": "string",
                "description": "When using a RSA key, specifies the RSA signature algorithm to use for signature verification.",
                "description_kind": "plain",
                "optional": true
              },
              "signature_context": {
                "type": "string",
                "description": "Base64 encoded context for Ed25519ctx and Ed25519ph signatures.",
                "description_kind": "plain",
                "optional": true
              },
              "valid": {
                "type": "bool",
                "description": "Indicates whether verification succeeded",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description_kind": "plain"
          }
        }
      },
      "ephemeral_resource_schemas": {
        "vault_database_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "mount": {
                "type": "string",
                "description": "Mount path for the DB engine in Vault.",
                "description_kind": "markdown",
                "required": true
              },
              "mount_id": {
                "type": "string",
                "description": "Terraform ID of the mount resource. Used to defer the provisioning of the ephemeral resource till the apply stage.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": " Specifies the name of the role to create credentials against.",
                "description_kind": "markdown",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "markdown",
                "optional": true
              },
              "password": {
                "type": "string",
                "description": "Password for the newly created DB user.",
                "description_kind": "markdown",
                "computed": true
              },
              "username": {
                "type": "string",
                "description": "Username for the newly created DB user.",
                "description_kind": "markdown",
                "computed": true
              }
            },
            "description": "Provides an ephemeral resource to read a DB Secret from Vault.",
            "description_kind": "markdown"
          }
        },
        "vault_kv_secret_v2": {
          "version": 0,
          "block": {
            "attributes": {
              "created_time": {
                "type": "string",
                "description": "Time at which the secret was created.",
                "description_kind": "markdown",
                "computed": true
              },
              "custom_metadata": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Custom metadata for the secret.",
                "description_kind": "markdown",
                "computed": true
              },
              "data": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of strings read from Vault.",
                "description_kind": "markdown",
                "computed": true
              },
              "data_json": {
                "type": "string",
                "description": "JSON-encoded secret data read from Vault.",
                "description_kind": "markdown",
                "computed": true
              },
              "deletion_time": {
                "type": "string",
                "description": "Deletion time for the secret.",
                "description_kind": "markdown",
                "computed": true
              },
              "destroyed": {
                "type": "bool",
                "description": "Indicates whether the secret has been destroyed.",
                "description_kind": "markdown",
                "computed": true
              },
              "mount": {
                "type": "string",
                "description": "Mount path for the KVV2 engine in Vault.",
                "description_kind": "markdown",
                "required": true
              },
              "mount_id": {
                "type": "string",
                "description": "Terraform ID of the mount resource. Used to defer the provisioning of the ephemeral resource till the apply stage.",
                "description_kind": "markdown",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Full name of the secret.",
                "description_kind": "markdown",
                "required": true
              },
              "namespace": {
                "type": "string",
                "description": "Target namespace. (requires Enterprise)",
                "description_kind": "markdown",
                "optional": true
              },
              "version": {
                "type": "number",
                "description": "Version of the secret to retrieve.",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "Provides an ephemeral resource to read a KVV2 Secret from Vault.",
            "description_kind": "markdown"
          }
        }
      }
    },
    "registry.terraform.io/kong/konnect": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "konnect_access_token": {
              "type": "string",
              "description_kind": "plain",
              "optional": true,
              "sensitive": true
            },
            "personal_access_token": {
              "type": "string",
              "description_kind": "plain",
              "optional": true,
              "sensitive": true
            },
            "server_url": {
              "type": "string",
              "description": "Server URL (defaults to https://global.api.konghq.com)",
              "description_kind": "plain",
              "optional": true
            },
            "service_access_token": {
              "type": "string",
              "description_kind": "plain",
              "optional": true,
              "sensitive": true
            },
            "system_account_access_token": {
              "type": "string",
              "description_kind": "plain",
              "optional": true,
              "sensitive": true
            }
          },
          "description": "Konnect API: The Konnect platform API",
          "description_kind": "markdown"
        }
      },
      "resource_schemas": {
        "konnect_api": {
          "version": 0,
          "block": {
            "attributes": {
              "api_spec_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of API specification ids for the API.",
                "description_kind": "plain",
                "deprecated": true,
                "computed": true
              },
              "attributes": {
                "type": "string",
                "description": "A set of attributes that describe the API. Parsed as JSON.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "A description of your API. Will be visible on your live Portal.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The API identifier.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of your API. The `name + version` combination must be unique for each API you publish.",
                "description_kind": "plain",
                "required": true
              },
              "portals": {
                "nested_type": {
                  "attributes": {
                    "display_name": {
                      "type": "string",
                      "description": "The display name of the portal. This value will be the portal's `name` in Portal API.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The portal identifier.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the portal, used to distinguish it from other portals.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "The list of portals which this API is published to.",
                "description_kind": "plain",
                "computed": true
              },
              "slug": {
                "type": "string",
                "description": "The `slug` is used in generated URLs to provide human readable paths.\n\nDefaults to `slugify(name + version)`",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "spec_content": {
                "type": "string",
                "description": "The content of the API specification. This is the raw content of the API specification, in json or yaml. By including this field, you can add a API specification without having to make a separate call to update the API specification. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              },
              "version": {
                "type": "string",
                "description": "An optional version for your API. Leave this empty if your API is unversioned.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "API Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_api_document": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "description": "The UUID API identifier",
                "description_kind": "plain",
                "required": true
              },
              "content": {
                "type": "string",
                "description": "Raw markdown content to display in your Portal",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The API document identifier.",
                "description_kind": "plain",
                "computed": true
              },
              "parent_document_id": {
                "type": "string",
                "description": "API Documents may be rendered as a tree of files.\n\nSpecify the `id` of another API Document as the `parent_document_id` to add some heirarchy do your documents.",
                "description_kind": "markdown",
                "optional": true
              },
              "slug": {
                "type": "string",
                "description": "The `slug` is used in generated URLs to provide human readable paths.\n\nDefaults to `slugify(title)`",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "status": {
                "type": "string",
                "description": "If `status=published` the document will be visible in your live portal. Default: \"unpublished\"; must be one of [\"published\", \"unpublished\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "title": {
                "type": "string",
                "description": "The title of the document. Used to populate the `<title>` tag for the page",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "APIDocument Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_api_implementation": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "description": "The UUID API identifier. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "control_plane_id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "A Gateway service that implements an API",
                "description_kind": "plain",
                "computed": true
              },
              "service_reference": {
                "nested_type": {
                  "attributes": {
                    "created_at": {
                      "type": "string",
                      "description": "An ISO-8601 timestamp representation of entity creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "Contains a unique identifier used for this resource.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "service": {
                      "nested_type": {
                        "attributes": {
                          "control_plane_id": {
                            "type": "string",
                            "description": "Not Null; Requires replacement if changed.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "id": {
                            "type": "string",
                            "description": "Not Null; Requires replacement if changed.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "A Gateway service that implements an API. Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An ISO-8601 timestamp representation of entity update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "A gateway service that implements an API. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "APIImplementation Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_api_product": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The description of the API product.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The API product ID.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the API product.",
                "description_kind": "plain",
                "required": true
              },
              "portal_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The list of portal identifiers which this API product should be published to",
                "description_kind": "plain",
                "required": true
              },
              "portals": {
                "nested_type": {
                  "attributes": {
                    "portal_id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "portal_name": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "The list of portals which this API product is published to",
                "description_kind": "plain",
                "computed": true
              },
              "public_labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Public labels store information about an entity that can be used for filtering a list of objects.\n\nPublic labels are intended to store **PUBLIC** metadata. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              },
              "version_count": {
                "type": "number",
                "description": "The number of product versions attached to this API product",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "APIProduct Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_api_product_document": {
          "version": 0,
          "block": {
            "attributes": {
              "api_product_id": {
                "type": "string",
                "description": "The API product identifier",
                "description_kind": "plain",
                "required": true
              },
              "content": {
                "type": "string",
                "description": "Can be markdown string content or base64 encoded string",
                "description_kind": "plain",
                "optional": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The document identifier related to the API product",
                "description_kind": "plain",
                "computed": true
              },
              "metadata": {
                "nested_type": {
                  "nesting_mode": "single"
                },
                "description": "metadata of the document",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "parent_document_id": {
                "type": "string",
                "description": "parent document id",
                "description_kind": "plain",
                "optional": true
              },
              "slug": {
                "type": "string",
                "description": "document slug. must be unique accross documents belonging to an api product",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "must be one of [\"published\", \"unpublished\"]",
                "description_kind": "plain",
                "required": true
              },
              "title": {
                "type": "string",
                "description": "document title",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "APIProductDocument Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_api_product_specification": {
          "version": 0,
          "block": {
            "attributes": {
              "api_product_id": {
                "type": "string",
                "description": "The API product identifier",
                "description_kind": "plain",
                "required": true
              },
              "api_product_version_id": {
                "type": "string",
                "description": "The API product version identifier",
                "description_kind": "plain",
                "required": true
              },
              "content": {
                "type": "string",
                "description": "The base64 encoded contents of the API product version specification",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The API product version specification identifier.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the API product version specification",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "APIProductSpecification Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_api_product_version": {
          "version": 0,
          "block": {
            "attributes": {
              "api_product_id": {
                "type": "string",
                "description": "The API Product ID",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "deprecated": {
                "type": "bool",
                "description": "Indicates if the version of the API product is deprecated. Applies deprecation or removes deprecation from all related portal product versions. This field is deprecated: Use [PortalProductVersion.deprecated](https://docs.konghq.com/konnect/api/portal-management/v2/#/operations/create-portal-product-version) instead. Default: false",
                "description_kind": "plain",
                "deprecated": true,
                "optional": true,
                "computed": true
              },
              "gateway_service": {
                "nested_type": {
                  "attributes": {
                    "control_plane_id": {
                      "type": "string",
                      "description": "The identifier of the control plane that the gateway service resides in",
                      "description_kind": "plain",
                      "required": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The identifier of a gateway service associated with the version of the API product.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "runtime_group_id": {
                      "type": "string",
                      "description": "This field is deprecated, please use `control_plane_id` instead. The identifier of the control plane that the gateway service resides in",
                      "description_kind": "plain",
                      "deprecated": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The API product version identifier.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The version name of the API product version.",
                "description_kind": "plain",
                "required": true
              },
              "portals": {
                "nested_type": {
                  "attributes": {
                    "application_registration_enabled": {
                      "type": "bool",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "auth_strategies": {
                      "nested_type": {
                        "attributes": {
                          "id": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "auto_approve_registration": {
                      "type": "bool",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "deprecated": {
                      "type": "bool",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "portal_id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "portal_name": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "portal_product_version_id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "publish_status": {
                      "type": "string",
                      "description": "must be one of [\"published\", \"unpublished\"]",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "The list of portals which this API product version is configured for",
                "description_kind": "plain",
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "APIProductVersion Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_api_publication": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "description": "The UUID API identifier",
                "description_kind": "plain",
                "required": true
              },
              "auth_strategy_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "The auth strategy the API enforces for applications in the portal.\nOmitting this property means the portal's default application auth strategy will be used.\nSetting to null means the API will not require application authentication.\nDCR support for application registration is currently in development.",
                "description_kind": "markdown",
                "optional": true
              },
              "auto_approve_registrations": {
                "type": "bool",
                "description": "Whether the application registration auto approval on this portal for the api is enabled. If set to false, fallbacks on portal's auto_approve_applications value.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              },
              "visibility": {
                "type": "string",
                "description": "The visibility of the API in the portal.\nPublic API publications do not require authentication to view and retrieve information about them.\nPrivate API publications require authentication to retrieve information about them.\nDefault: \"private\"; must be one of [\"public\", \"private\"]",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "description": "APIPublication Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_api_specification": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "description": "The UUID API identifier",
                "description_kind": "plain",
                "required": true
              },
              "content": {
                "type": "string",
                "description": "The raw content of your API specification, in json or yaml format (OpenAPI or AsyncAPI).",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The API specification identifier.",
                "description_kind": "plain",
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "The type of specification being stored. This allows us to render the specification correctly. must be one of [\"oas2\", \"oas3\", \"asyncapi\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              },
              "validation_messages": {
                "nested_type": {
                  "attributes": {
                    "message": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "The errors that occurred while parsing the API specification.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "APISpecification Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_api_version": {
          "version": 0,
          "block": {
            "attributes": {
              "api_id": {
                "type": "string",
                "description": "The UUID API identifier",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The API version identifier.",
                "description_kind": "plain",
                "computed": true
              },
              "spec": {
                "nested_type": {
                  "attributes": {
                    "content": {
                      "type": "string",
                      "description": "The raw content of your API spec, in json or yaml format (OpenAPI or AsyncAPI).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of specification being stored. This allows us to render the specification correctly. must be one of [\"oas2\", \"oas3\", \"asyncapi\"]",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "validation_messages": {
                      "nested_type": {
                        "attributes": {
                          "message": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "The errors that occurred while parsing the API version spec.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              },
              "version": {
                "type": "string",
                "description": "The version of the api.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "APIVersion Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_application_auth_strategy": {
          "version": 0,
          "block": {
            "attributes": {
              "active": {
                "type": "bool",
                "description": "At least one published entity is using this auth strategy.",
                "description_kind": "plain",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description": "The display name of the Auth strategy. This is used to identify the Auth strategy in the Portal UI.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "key_auth": {
                "nested_type": {
                  "attributes": {
                    "active": {
                      "type": "bool",
                      "description": "At least one published entity is using this auth strategy.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "configs": {
                      "nested_type": {
                        "attributes": {
                          "key_auth": {
                            "nested_type": {
                              "attributes": {
                                "key_names": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "The names of the headers containing the API key. You can specify multiple header names. Requires replacement if changed.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "The most basic mode to configure an Application Auth Strategy for an API Product Version. \nUsing this mode will allow developers to generate API keys that will authenticate their application requests. \nOnce authenticated, an application will be granted access to any Product Version it is registered for that is configured for Key Auth.\nNot Null; Requires replacement if changed.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "JSON-B object containing the configuration for the Key Auth strategy. Not Null; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "An ISO-8601 timestamp representation of entity creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "dcr_provider": {
                      "nested_type": {
                        "attributes": {
                          "display_name": {
                            "type": "string",
                            "description": "The display name of the DCR provider. This is used to identify the DCR provider in the Portal UI.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "id": {
                            "type": "string",
                            "description": "Contains a unique identifier used for this resource.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "provider_type": {
                            "type": "string",
                            "description": "The type of DCR provider. Can be one of the following - auth0, azureAd, curity, okta, http. must be one of [\"auth0\", \"azureAd\", \"curity\", \"okta\", \"http\"]",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The display name of the Auth strategy. This is used to identify the Auth strategy in the Portal UI. Not Null; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "Contains a unique identifier used for this resource.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".\nRequires replacement if changed.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the auth strategy. This is used to identify the auth strategy in the Konnect UI. Not Null; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "strategy_type": {
                      "type": "string",
                      "description": "Not Null; must be \"key_auth\"; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An ISO-8601 timestamp representation of entity update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Response payload from creating or updating a Key Auth Application Auth Strategy. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the auth strategy. This is used to identify the auth strategy in the Konnect UI.",
                "description_kind": "plain",
                "computed": true
              },
              "openid_connect": {
                "nested_type": {
                  "attributes": {
                    "active": {
                      "type": "bool",
                      "description": "At least one published entity is using this auth strategy.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "configs": {
                      "nested_type": {
                        "attributes": {
                          "openid_connect": {
                            "nested_type": {
                              "attributes": {
                                "additional_properties": {
                                  "type": "string",
                                  "description": "Requires replacement if changed.; Parsed as JSON.",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "auth_methods": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Not Null; Requires replacement if changed.",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "credential_claim": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Not Null; Requires replacement if changed.",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "issuer": {
                                  "type": "string",
                                  "description": "Not Null; Requires replacement if changed.",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "scopes": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "Not Null; Requires replacement if changed.",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "A more advanced mode to configure an API Product Version\u2019s Application Auth Strategy. \nUsing this mode will allow developers to use API credentials issued from an external IdP that will authenticate their application requests. \nOnce authenticated, an application will be granted access to any Product Version it is registered for that is configured for the same Auth Strategy. \nAn OIDC strategy may be used in conjunction with a DCR provider to automatically create the IdP application.\nNot Null; Requires replacement if changed.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "JSON-B object containing the configuration for the OIDC strategy. Not Null; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "An ISO-8601 timestamp representation of entity creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "dcr_provider": {
                      "nested_type": {
                        "attributes": {
                          "display_name": {
                            "type": "string",
                            "description": "The display name of the DCR provider. This is used to identify the DCR provider in the Portal UI.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "id": {
                            "type": "string",
                            "description": "Contains a unique identifier used for this resource.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "provider_type": {
                            "type": "string",
                            "description": "The type of DCR provider. Can be one of the following - auth0, azureAd, curity, okta, http. must be one of [\"auth0\", \"azureAd\", \"curity\", \"okta\", \"http\"]",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "dcr_provider_id": {
                      "type": "string",
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The display name of the Auth strategy. This is used to identify the Auth strategy in the Portal UI. Not Null; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "Contains a unique identifier used for this resource.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".\nRequires replacement if changed.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the auth strategy. This is used to identify the auth strategy in the Konnect UI. Not Null; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "strategy_type": {
                      "type": "string",
                      "description": "Not Null; must be \"openid_connect\"; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An ISO-8601 timestamp representation of entity update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Response payload from creating an OIDC Application Auth Strategy. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "ApplicationAuthStrategy Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_audit_log": {
          "version": 0,
          "block": {
            "attributes": {
              "authorization": {
                "type": "string",
                "description": "The value to include in the `Authorization` header when sending audit logs to the webhook.",
                "description_kind": "plain",
                "optional": true
              },
              "enabled": {
                "type": "bool",
                "description": "Indicates if the data should be sent to the webhook. Default: false",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "description": "The endpoint that will receive audit log messages.",
                "description_kind": "plain",
                "optional": true
              },
              "log_format": {
                "type": "string",
                "description": "The output format of each log messages. Default: \"cef\"; must be one of [\"cef\", \"json\", \"cps\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "skip_ssl_verification": {
                "type": "bool",
                "description": "Indicates if the SSL certificate verification of the host endpoint should be skipped when delivering payloads.\nWe strongly recommend not setting this to 'true' as you are subject to man-in-the-middle and other attacks.\nThis option should be considered only for self-signed SSL certificates used in a non-production environment.\nDefault: false",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "Timestamp when this webhook was last updated. Initial value is 0001-01-01T00:00:0Z.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "AuditLog Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_audit_log_destination": {
          "version": 0,
          "block": {
            "attributes": {
              "authorization": {
                "type": "string",
                "description": "The value to include in the `Authorization` header when sending audit logs to the webhook.",
                "description_kind": "plain",
                "optional": true
              },
              "created_at": {
                "type": "string",
                "description": "Timestamp when this webhook was created.",
                "description_kind": "plain",
                "computed": true
              },
              "endpoint": {
                "type": "string",
                "description": "The endpoint that will receive audit log messages.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The unique ID of the audit log destination.",
                "description_kind": "plain",
                "computed": true
              },
              "log_format": {
                "type": "string",
                "description": "The output format of each log messages. Default: \"cef\"; must be one of [\"cef\", \"json\", \"cps\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the audit log destination.",
                "description_kind": "plain",
                "required": true
              },
              "skip_ssl_verification": {
                "type": "bool",
                "description": "Indicates if the SSL certificate verification of the host endpoint should be skipped when delivering payloads.\nWe strongly recommend not setting this to 'true' as you are subject to man-in-the-middle and other attacks.\nThis option should be considered only for self-signed SSL certificates used in a non-production environment.\nDefault: false",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "Timestamp when this webhook was last updated. Initial value is 0001-01-01T00:00:0Z.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "AuditLogDestination Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_catalog_service": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "custom_fields": {
                "type": "string",
                "description": "Map of customizable, catalog-defined fields providing information about a service. Parsed as JSON.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Optionally provide a description of the Service.",
                "description_kind": "plain",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "The display name of the Service.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The service ID.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The machine name of the Service that uniquely identifies it within the catalog.",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "CatalogService Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_centralized_consumer": {
          "version": 0,
          "block": {
            "attributes": {
              "consumer_groups": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of consumer groups that the Consumer is in.\nIf `consumer_groups` are provided on the Consumer object _and_ on the Realm, the Consumer will be placed in all defined consumer groups.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "custom_id": {
                "type": "string",
                "description": "Field for storing an existing unique ID for the Consumer - useful for mapping Kong with users in your existing database.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The Consumer ID.",
                "description_kind": "plain",
                "computed": true
              },
              "realm_id": {
                "type": "string",
                "description": "ID of the realm",
                "description_kind": "plain",
                "required": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Type of the consumer. Default: \"proxy\"; must be one of [\"proxy\", \"developer\", \"admin\", \"application\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              },
              "username": {
                "type": "string",
                "description": "The unique username of the Consumer.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "CentralizedConsumer Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_centralized_consumer_key": {
          "version": 0,
          "block": {
            "attributes": {
              "consumer_id": {
                "type": "string",
                "description": "ID of the of the consumer. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "realm_id": {
                "type": "string",
                "description": "ID of the realm. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "secret": {
                "type": "string",
                "description": "secret to be created. Must be unique within the realm. If not specified a secret will be automatically generated. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true,
                "sensitive": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "type": {
                "type": "string",
                "description": "Default: \"legacy\"; must be one of [\"new\", \"legacy\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "CentralizedConsumerKey Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_cloud_gateway_configuration": {
          "version": 0,
          "block": {
            "attributes": {
              "api_access": {
                "type": "string",
                "description": "Type of API access data-plane groups will support for a configuration. Default: \"private+public\"; must be one of [\"private\", \"public\", \"private+public\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_geo": {
                "type": "string",
                "description": "Set of control-plane geos supported for deploying cloud-gateways configurations. must be one of [\"us\", \"eu\", \"au\", \"me\", \"in\"]",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An RFC-3339 timestamp representation of configuration creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "dataplane_groups": {
                "nested_type": {
                  "attributes": {
                    "autoscale": {
                      "nested_type": {
                        "attributes": {
                          "configuration_data_plane_group_autoscale_autopilot": {
                            "nested_type": {
                              "attributes": {
                                "base_rps": {
                                  "type": "number",
                                  "description": "Base number of requests per second that the deployment target should support. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Not Null; must be \"autopilot\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "max_rps": {
                                  "type": "number",
                                  "description": "Max number of requests per second that the deployment target should support. If not set, this defaults to 10x base_rps. This field is deprecated and shouldn't be used in new configurations as it will be removed in a future version. max_rps is now calculated as 10x base_rps.",
                                  "description_kind": "plain",
                                  "deprecated": true,
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Object that describes the autopilot autoscaling strategy.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "configuration_data_plane_group_autoscale_static": {
                            "nested_type": {
                              "attributes": {
                                "instance_type": {
                                  "type": "string",
                                  "description": "Instance type name to indicate capacity. Not Null; must be one of [\"small\", \"medium\", \"large\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Not Null; must be \"static\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "requested_instances": {
                                  "type": "number",
                                  "description": "Number of data-planes the deployment target will contain. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Object that describes the static autoscaling strategy. Deprecated in favor of the autopilot autoscaling strategy. Static autoscaling will be removed in a future version.",
                            "description_kind": "plain",
                            "deprecated": true,
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Not Null",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cloud_gateway_network_id": {
                      "type": "string",
                      "description": "Not Null",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of data-plane group creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "egress_ip_addresses": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of egress IP addresses for the network that this data-plane group runs on.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "environment": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Name of the environment variable field to set for the data-plane group. Must be prefixed by KONG_. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "value": {
                            "type": "string",
                            "description": "Value assigned to the environment variable field for the data-plane group. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Array of environment variables to set for a data-plane group.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "ID of the data-plane group that represents a deployment target for a set of data-planes.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "private_ip_addresses": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of private IP addresses of the internal load balancer that proxies traffic to this data-plane group.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "provider": {
                      "type": "string",
                      "description": "Name of cloud provider. Not Null; must be one of [\"aws\", \"azure\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "region": {
                      "type": "string",
                      "description": "Region ID for cloud provider region. Not Null",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "state": {
                      "type": "string",
                      "description": "State of the data-plane group. must be one of [\"created\", \"initializing\", \"ready\", \"terminating\", \"terminated\"]",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of data-plane group update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "set"
                },
                "description": "List of data-plane groups that describe where to deploy instances, along with how many instances.",
                "description_kind": "plain",
                "required": true
              },
              "entity_version": {
                "type": "number",
                "description": "Positive, monotonically increasing version integer, to serialize configuration changes.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An RFC-3339 timestamp representation of configuration update date.",
                "description_kind": "plain",
                "computed": true
              },
              "version": {
                "type": "string",
                "description": "Supported gateway version.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "CloudGatewayConfiguration Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_cloud_gateway_custom_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate_id": {
                "type": "string",
                "description": "Certificate ID for the certificate representing this domain and stored on data-planes for this\ncontrol-plane. Can be retrieved via the control-planes API for this custom domain's control-plane.",
                "description_kind": "markdown",
                "computed": true
              },
              "control_plane_geo": {
                "type": "string",
                "description": "Set of control-plane geos supported for deploying cloud-gateways configurations. must be one of [\"us\", \"eu\", \"au\", \"me\", \"in\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An RFC-3339 timestamp representation of custom domain creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "domain": {
                "type": "string",
                "description": "Domain name of the custom domain. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "entity_version": {
                "type": "number",
                "description": "Monotonically-increasing version count of the custom domain, to indicate the order of updates to the custom\ndomain.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "sni_id": {
                "type": "string",
                "description": "Server Name Indication ID for this domain and stored on data-planes for this control-plane. Can be retrieved\nvia the control-planes API for this custom domain's control-plane.",
                "description_kind": "markdown",
                "computed": true
              },
              "state": {
                "type": "string",
                "description": "State of the custom domain. must be one of [\"created\", \"initializing\", \"ready\", \"terminating\", \"terminated\", \"error\"]",
                "description_kind": "plain",
                "computed": true
              },
              "state_metadata": {
                "nested_type": {
                  "attributes": {
                    "reason": {
                      "type": "string",
                      "description": "Reason why the custom domain may be in an erroneous state, reported from backing infrastructure.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "reported_status": {
                      "type": "string",
                      "description": "Reported status of the custom domain from backing infrastructure.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Metadata describing the backing state of the custom domain and why it may be in an erroneous state.",
                "description_kind": "plain",
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An RFC-3339 timestamp representation of custom domain update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "CloudGatewayCustomDomain Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_cloud_gateway_network": {
          "version": 0,
          "block": {
            "attributes": {
              "availability_zones": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "List of availability zones that the network is attached to. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "cidr_block": {
                "type": "string",
                "description": "CIDR block configuration for the network. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "cloud_gateway_provider_account_id": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "configuration_reference_count": {
                "type": "number",
                "description": "The number of configurations that reference this network.",
                "description_kind": "plain",
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "An RFC-3339 timestamp representation of network creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "default": {
                "type": "bool",
                "description": "Whether the network is a default network or not. Default networks are Networks that are created\nautomatically by Konnect when an organization is linked to a provider account.",
                "description_kind": "markdown",
                "computed": true
              },
              "entity_version": {
                "type": "number",
                "description": "Monotonically-increasing version count of the network, to indicate the order of updates to the network.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Human-readable name of the network.",
                "description_kind": "plain",
                "required": true
              },
              "provider_metadata": {
                "nested_type": {
                  "attributes": {
                    "subnet_ids": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "computed": true
                    },
                    "vpc_id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Metadata describing attributes returned by cloud-provider for the network.",
                "description_kind": "plain",
                "computed": true
              },
              "region": {
                "type": "string",
                "description": "Region ID for cloud provider region. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "transit_gateway_count": {
                "type": "number",
                "description": "The number of transit gateways attached to this network.",
                "description_kind": "plain",
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An RFC-3339 timestamp representation of network update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "CloudGatewayNetwork Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_cloud_gateway_private_dns": {
          "version": 0,
          "block": {
            "attributes": {
              "aws_private_dns_resolver_response": {
                "nested_type": {
                  "attributes": {
                    "created_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of Private DNS creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "entity_version": {
                      "type": "number",
                      "description": "Monotonically-increasing version count of the Private DNS, to indicate the order of updates to the\nPrivate DNS.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the Private DNS.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "private_dns_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "dns_config": {
                            "nested_type": {
                              "attributes": {
                                "remote_dns_server_ip_addresses": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "IP addresses of remote DNS servers used by the Private DNS Resolver for DNS resolution.",
                                  "description_kind": "plain",
                                  "computed": true
                                }
                              },
                              "nesting_mode": "map"
                            },
                            "description": "Object that contains mappings from proxied internal domains to remote DNS server IP address for a Private DNS Resolver.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "kind": {
                            "type": "string",
                            "description": "must be \"aws-outbound-resolver\"",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "state": {
                      "type": "string",
                      "description": "The current state of the Private DNS attachment. Possible values:\n- `created` - The attachment has been created but is not attached to Private DNS.\n- `initializing` - The attachment is in the process of being initialized and is setting up necessary resources.\n- `pending-association` The attachment request is awaiting association to the cloud provider infrastructure in order for provisioning to proceed.\n- `ready` - The attachment is fully operational and can route traffic as configured.\n- `error` - The attachment is in an error state, and is not operational.\n- `terminating` - The attachment is in the process of being deleted.\n- `terminated` - The attachment has been fully deleted and is no longer available.\nmust be one of [\"created\", \"initializing\", \"pending-association\", \"ready\", \"error\", \"terminating\", \"terminated\"]",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "state_metadata": {
                      "nested_type": {
                        "attributes": {
                          "reason": {
                            "type": "string",
                            "description": "Reason why the Private Dns may be in an erroneous state, reported from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "reported_status": {
                            "type": "string",
                            "description": "Reported status of the Private Dns from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Metadata describing the backing state of the Private Dns and why it may be in an erroneous state.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of Private DNS update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "computed": true
              },
              "aws_private_hosted_zone_response": {
                "nested_type": {
                  "attributes": {
                    "created_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of Private DNS creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "entity_version": {
                      "type": "number",
                      "description": "Monotonically-increasing version count of the Private DNS, to indicate the order of updates to the\nPrivate DNS.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the Private DNS.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "private_dns_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "hosted_zone_id": {
                            "type": "string",
                            "description": "AWS Hosted Zone to create attachment to.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "kind": {
                            "type": "string",
                            "description": "must be \"aws-private-hosted-zone-attachment\"",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "state": {
                      "type": "string",
                      "description": "The current state of the Private DNS attachment. Possible values:\n- `created` - The attachment has been created but is not attached to Private DNS.\n- `initializing` - The attachment is in the process of being initialized and is setting up necessary resources.\n- `pending-association` The attachment request is awaiting association to the cloud provider infrastructure in order for provisioning to proceed.\n- `ready` - The attachment is fully operational and can route traffic as configured.\n- `error` - The attachment is in an error state, and is not operational.\n- `terminating` - The attachment is in the process of being deleted.\n- `terminated` - The attachment has been fully deleted and is no longer available.\nmust be one of [\"created\", \"initializing\", \"pending-association\", \"ready\", \"error\", \"terminating\", \"terminated\"]",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "state_metadata": {
                      "nested_type": {
                        "attributes": {
                          "reason": {
                            "type": "string",
                            "description": "Reason why the Private Dns may be in an erroneous state, reported from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "reported_status": {
                            "type": "string",
                            "description": "Reported status of the Private Dns from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Metadata describing the backing state of the Private Dns and why it may be in an erroneous state.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of Private DNS update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "computed": true
              },
              "entity_version": {
                "type": "number",
                "description": "Monotonically-increasing version count of the Private DNS, to indicate the order of updates to the\nPrivate DNS.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Human-readable name of the Private DNS. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "network_id": {
                "type": "string",
                "description": "The network to operate on.",
                "description_kind": "plain",
                "required": true
              },
              "private_dns_attachment_config": {
                "nested_type": {
                  "attributes": {
                    "aws_private_dns_resolver_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "dns_config": {
                            "nested_type": {
                              "attributes": {
                                "remote_dns_server_ip_addresses": {
                                  "type": [
                                    "list",
                                    "string"
                                  ],
                                  "description": "IP addresses of remote DNS servers used by the Private DNS Resolver for DNS resolution. Requires replacement if changed.",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "map"
                            },
                            "description": "Object that contains mappings from proxied internal domains to remote DNS server IP address for a Private DNS Resolver. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "kind": {
                            "type": "string",
                            "description": "must be \"aws-outbound-resolver\"; Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "aws_private_hosted_zone_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "hosted_zone_id": {
                            "type": "string",
                            "description": "AWS Hosted Zone to create attachment to. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "kind": {
                            "type": "string",
                            "description": "must be \"aws-private-hosted-zone-attachment\"; Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "CloudGatewayPrivateDNS Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_cloud_gateway_transit_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "aws_transit_gateway": {
                "nested_type": {
                  "attributes": {
                    "cidr_blocks": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "CIDR blocks for constructing a route table for the transit gateway, when attaching to the owning\nnetwork.\nRequires replacement if changed.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "dns_config": {
                      "nested_type": {
                        "attributes": {
                          "domain_proxy_list": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Internal domain names to proxy for DNS resolution from the listed remote DNS server IP addresses,\nfor a transit gateway.\nRequires replacement if changed.",
                            "description_kind": "markdown",
                            "required": true
                          },
                          "remote_dns_server_ip_addresses": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Remote DNS Server IP Addresses to connect to for resolving internal DNS via a transit gateway. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway\nattachment.\nRequires replacement if changed.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the transit gateway. Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "transit_gateway_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "kind": {
                            "type": "string",
                            "description": "must be \"aws-transit-gateway-attachment\"; Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "ram_share_arn": {
                            "type": "string",
                            "description": "Resource Share ARN to verify request to create transit gateway attachment. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "transit_gateway_id": {
                            "type": "string",
                            "description": "AWS Transit Gateway ID to create attachment to. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_transit_gateway_response": {
                "nested_type": {
                  "attributes": {
                    "cidr_blocks": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "CIDR blocks for constructing a route table for the transit gateway, when attaching to the owning\nnetwork.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of transit gateway creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "dns_config": {
                      "nested_type": {
                        "attributes": {
                          "domain_proxy_list": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Internal domain names to proxy for DNS resolution from the listed remote DNS server IP addresses,\nfor a transit gateway.",
                            "description_kind": "markdown",
                            "computed": true
                          },
                          "remote_dns_server_ip_addresses": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Remote DNS Server IP Addresses to connect to for resolving internal DNS via a transit gateway.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway\nattachment.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "entity_version": {
                      "type": "number",
                      "description": "Monotonically-increasing version count of the transit gateway, to indicate the order of updates to the\ntransit gateway.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the transit gateway.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "state": {
                      "type": "string",
                      "description": "The current state of the Transit Gateway. Possible values:\n- `created` - The attachment has been created but is not attached to transit gateway.\n- `initializing` - The attachment is in the process of being initialized and is setting up necessary resources.\n- `pending-acceptance` The attachment request is awaiting acceptance in customer VPC.\n- `pending-user-action` The attachment request is awaiting user action in customer VPC.\n- `ready` - The transit gateway attachment is fully operational and can route traffic as configured.\n- `terminating` - The attachment is in the process of being deleted and is no longer accepting new traffic.\n- `terminated` - The attachment has been fully deleted and is no longer available.\nmust be one of [\"created\", \"initializing\", \"pending-acceptance\", \"pending-user-action\", \"ready\", \"terminating\", \"terminated\"]",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "state_metadata": {
                      "nested_type": {
                        "attributes": {
                          "reason": {
                            "type": "string",
                            "description": "Reason why the transit gateway may be in an erroneous state, reported from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "reported_status": {
                            "type": "string",
                            "description": "Reported status of the transit gateway from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Metadata describing the backing state of the transit gateway and why it may be in an erroneous state.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "transit_gateway_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "kind": {
                            "type": "string",
                            "description": "must be \"aws-transit-gateway-attachment\"",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "ram_share_arn": {
                            "type": "string",
                            "description": "Resource Share ARN to verify request to create transit gateway attachment.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "transit_gateway_id": {
                            "type": "string",
                            "description": "AWS Transit Gateway ID to create attachment to.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of transit gateway update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "computed": true
              },
              "aws_vpc_peering_gateway": {
                "nested_type": {
                  "attributes": {
                    "cidr_blocks": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "CIDR blocks for constructing a route table for the transit gateway, when attaching to the owning\nnetwork.\nRequires replacement if changed.",
                      "description_kind": "markdown",
                      "required": true
                    },
                    "dns_config": {
                      "nested_type": {
                        "attributes": {
                          "domain_proxy_list": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Internal domain names to proxy for DNS resolution from the listed remote DNS server IP addresses,\nfor a transit gateway.\nRequires replacement if changed.",
                            "description_kind": "markdown",
                            "required": true
                          },
                          "remote_dns_server_ip_addresses": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Remote DNS Server IP Addresses to connect to for resolving internal DNS via a transit gateway. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway\nattachment.\nRequires replacement if changed.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the transit gateway. Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "transit_gateway_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "kind": {
                            "type": "string",
                            "description": "must be \"aws-vpc-peering-attachment\"; Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "peer_account_id": {
                            "type": "string",
                            "description": "Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "peer_vpc_id": {
                            "type": "string",
                            "description": "Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "peer_vpc_region": {
                            "type": "string",
                            "description": "Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "aws_vpc_peering_gateway_response": {
                "nested_type": {
                  "attributes": {
                    "cidr_blocks": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "CIDR blocks for constructing a route table for the transit gateway, when attaching to the owning\nnetwork.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of transit gateway creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "dns_config": {
                      "nested_type": {
                        "attributes": {
                          "domain_proxy_list": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Internal domain names to proxy for DNS resolution from the listed remote DNS server IP addresses,\nfor a transit gateway.",
                            "description_kind": "markdown",
                            "computed": true
                          },
                          "remote_dns_server_ip_addresses": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Remote DNS Server IP Addresses to connect to for resolving internal DNS via a transit gateway.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway\nattachment.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "entity_version": {
                      "type": "number",
                      "description": "Monotonically-increasing version count of the transit gateway, to indicate the order of updates to the\ntransit gateway.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the transit gateway.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "state": {
                      "type": "string",
                      "description": "The current state of the Transit Gateway. Possible values:\n- `created` - The attachment has been created but is not attached to transit gateway.\n- `initializing` - The attachment is in the process of being initialized and is setting up necessary resources.\n- `pending-acceptance` The attachment request is awaiting acceptance in customer VPC.\n- `pending-user-action` The attachment request is awaiting user action in customer VPC.\n- `ready` - The transit gateway attachment is fully operational and can route traffic as configured.\n- `terminating` - The attachment is in the process of being deleted and is no longer accepting new traffic.\n- `terminated` - The attachment has been fully deleted and is no longer available.\nmust be one of [\"created\", \"initializing\", \"pending-acceptance\", \"pending-user-action\", \"ready\", \"terminating\", \"terminated\"]",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "state_metadata": {
                      "nested_type": {
                        "attributes": {
                          "reason": {
                            "type": "string",
                            "description": "Reason why the transit gateway may be in an erroneous state, reported from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "reported_status": {
                            "type": "string",
                            "description": "Reported status of the transit gateway from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Metadata describing the backing state of the transit gateway and why it may be in an erroneous state.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "transit_gateway_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "kind": {
                            "type": "string",
                            "description": "must be \"aws-vpc-peering-attachment\"",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "peer_account_id": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "peer_vpc_id": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "peer_vpc_region": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of transit gateway update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "computed": true
              },
              "azure_transit_gateway": {
                "nested_type": {
                  "attributes": {
                    "dns_config": {
                      "nested_type": {
                        "attributes": {
                          "domain_proxy_list": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Internal domain names to proxy for DNS resolution from the listed remote DNS server IP addresses,\nfor a transit gateway.\nRequires replacement if changed.",
                            "description_kind": "markdown",
                            "required": true
                          },
                          "remote_dns_server_ip_addresses": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Remote DNS Server IP Addresses to connect to for resolving internal DNS via a transit gateway. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway\nattachment.\nRequires replacement if changed.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the transit gateway. Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "transit_gateway_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "kind": {
                            "type": "string",
                            "description": "must be \"azure-vnet-peering-attachment\"; Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "resource_group_name": {
                            "type": "string",
                            "description": "Resource Group Name for the Azure VNET Peering attachment. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "subscription_id": {
                            "type": "string",
                            "description": "Subscription ID for the Azure VNET Peering attachment. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "tenant_id": {
                            "type": "string",
                            "description": "Tenant ID for the Azure VNET Peering attachment. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "vnet_name": {
                            "type": "string",
                            "description": "VNET Name for the Azure VNET Peering attachment. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "azure_transit_gateway_response": {
                "nested_type": {
                  "attributes": {
                    "created_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of transit gateway creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "dns_config": {
                      "nested_type": {
                        "attributes": {
                          "domain_proxy_list": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Internal domain names to proxy for DNS resolution from the listed remote DNS server IP addresses,\nfor a transit gateway.",
                            "description_kind": "markdown",
                            "computed": true
                          },
                          "remote_dns_server_ip_addresses": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Remote DNS Server IP Addresses to connect to for resolving internal DNS via a transit gateway.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway\nattachment.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "entity_version": {
                      "type": "number",
                      "description": "Monotonically-increasing version count of the transit gateway, to indicate the order of updates to the\ntransit gateway.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the transit gateway.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "state": {
                      "type": "string",
                      "description": "The current state of the Transit Gateway. Possible values:\n- `created` - The attachment has been created but is not attached to transit gateway.\n- `initializing` - The attachment is in the process of being initialized and is setting up necessary resources.\n- `pending-acceptance` The attachment request is awaiting acceptance in customer VPC.\n- `pending-user-action` The attachment request is awaiting user action in customer VPC.\n- `ready` - The transit gateway attachment is fully operational and can route traffic as configured.\n- `terminating` - The attachment is in the process of being deleted and is no longer accepting new traffic.\n- `terminated` - The attachment has been fully deleted and is no longer available.\nmust be one of [\"created\", \"initializing\", \"pending-acceptance\", \"pending-user-action\", \"ready\", \"terminating\", \"terminated\"]",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "state_metadata": {
                      "nested_type": {
                        "attributes": {
                          "reason": {
                            "type": "string",
                            "description": "Reason why the transit gateway may be in an erroneous state, reported from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "reported_status": {
                            "type": "string",
                            "description": "Reported status of the transit gateway from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Metadata describing the backing state of the transit gateway and why it may be in an erroneous state.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "transit_gateway_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "kind": {
                            "type": "string",
                            "description": "must be \"azure-vnet-peering-attachment\"",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "resource_group_name": {
                            "type": "string",
                            "description": "Resource Group Name for the Azure VNET Peering attachment.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "subscription_id": {
                            "type": "string",
                            "description": "Subscription ID for the Azure VNET Peering attachment.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "tenant_id": {
                            "type": "string",
                            "description": "Tenant ID for the Azure VNET Peering attachment.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "vnet_name": {
                            "type": "string",
                            "description": "VNET Name for the Azure VNET Peering attachment.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of transit gateway update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "computed": true
              },
              "entity_version": {
                "type": "number",
                "description": "Monotonically-increasing version count of the transit gateway, to indicate the order of updates to the\ntransit gateway.",
                "description_kind": "markdown",
                "computed": true
              },
              "gcp_vpc_peering_transit_gateway": {
                "nested_type": {
                  "attributes": {
                    "dns_config": {
                      "nested_type": {
                        "attributes": {
                          "domain_proxy_list": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Internal domain names to proxy for DNS resolution from the listed remote DNS server IP addresses,\nfor a transit gateway.\nRequires replacement if changed.",
                            "description_kind": "markdown",
                            "required": true
                          },
                          "remote_dns_server_ip_addresses": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Remote DNS Server IP Addresses to connect to for resolving internal DNS via a transit gateway. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway\nattachment.\nRequires replacement if changed.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the transit gateway. Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "transit_gateway_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "kind": {
                            "type": "string",
                            "description": "must be \"gcp-vpc-peering-attachment\"; Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "peer_project_id": {
                            "type": "string",
                            "description": "GCP Project ID of the peer account to create attachment to. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "peer_vpc_name": {
                            "type": "string",
                            "description": "GCP VPC Name of the peer account to create attachment to. Requires replacement if changed.",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "gcpvpc_peering_gateway_response": {
                "nested_type": {
                  "attributes": {
                    "created_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of transit gateway creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "dns_config": {
                      "nested_type": {
                        "attributes": {
                          "domain_proxy_list": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Internal domain names to proxy for DNS resolution from the listed remote DNS server IP addresses,\nfor a transit gateway.",
                            "description_kind": "markdown",
                            "computed": true
                          },
                          "remote_dns_server_ip_addresses": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Remote DNS Server IP Addresses to connect to for resolving internal DNS via a transit gateway.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway\nattachment.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "entity_version": {
                      "type": "number",
                      "description": "Monotonically-increasing version count of the transit gateway, to indicate the order of updates to the\ntransit gateway.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Human-readable name of the transit gateway.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "state": {
                      "type": "string",
                      "description": "The current state of the Transit Gateway. Possible values:\n- `created` - The attachment has been created but is not attached to transit gateway.\n- `initializing` - The attachment is in the process of being initialized and is setting up necessary resources.\n- `pending-acceptance` The attachment request is awaiting acceptance in customer VPC.\n- `pending-user-action` The attachment request is awaiting user action in customer VPC.\n- `ready` - The transit gateway attachment is fully operational and can route traffic as configured.\n- `terminating` - The attachment is in the process of being deleted and is no longer accepting new traffic.\n- `terminated` - The attachment has been fully deleted and is no longer available.\nmust be one of [\"created\", \"initializing\", \"pending-acceptance\", \"pending-user-action\", \"ready\", \"terminating\", \"terminated\"]",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "state_metadata": {
                      "nested_type": {
                        "attributes": {
                          "reason": {
                            "type": "string",
                            "description": "Reason why the transit gateway may be in an erroneous state, reported from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "reported_status": {
                            "type": "string",
                            "description": "Reported status of the transit gateway from backing infrastructure.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Metadata describing the backing state of the transit gateway and why it may be in an erroneous state.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "transit_gateway_attachment_config": {
                      "nested_type": {
                        "attributes": {
                          "kind": {
                            "type": "string",
                            "description": "must be \"gcp-vpc-peering-attachment\"",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "peer_project_id": {
                            "type": "string",
                            "description": "GCP Project ID of the peer account to create attachment to.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "peer_vpc_name": {
                            "type": "string",
                            "description": "GCP VPC Name of the peer account to create attachment to.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of transit gateway update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Human-readable name of the transit gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "network_id": {
                "type": "string",
                "description": "The network to operate on. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "CloudGatewayTransitGateway Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_cmek": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "An optional description of the CMEK.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Customer Managed Encryption Key identifier. This ID is selected from a predefined, Konnect-specific list of allowed values and uniquely identifies a CMEK configuration within a given organization and Konnect region. While not global in function, these IDs behave like scoped namespaces with enforced uniqueness and enumeration constraints. Default: \"default\"; must be \"default\"",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key_arn": {
                "type": "string",
                "description": "The Amazon Resource Name (ARN) of the Key Management Service (KMS) key to use for encryption and decryption. We recommend using one multi-region key (MRK) per Konnect region to enhance security and compliance, while also supporting failover to other AWS regions.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The name of the CMEK. We recommend you match the key's name used in KMS.",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Cmek Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "consumer_id": {
                "type": "string",
                "description": "Consumer ID for nested entities. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "group": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier). Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A set of strings representing tags. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "GatewayACL Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_basic_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "consumer_id": {
                "type": "string",
                "description": "Consumer ID for nested entities. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier). Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "password": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A set of strings representing tags. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "GatewayBasicAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_ca_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "cert": {
                "type": "string",
                "description": "PEM-encoded public certificate of the CA.",
                "description_kind": "plain",
                "required": true
              },
              "cert_digest": {
                "type": "string",
                "description": "SHA256 hex digest of the public certificate. This field is read-only and it cannot be set by the caller, the value is automatically computed.",
                "description_kind": "plain",
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Certificate for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayCACertificate Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "cert": {
                "type": "string",
                "description": "PEM-encoded public certificate chain of the SSL key pair. This field is _referenceable_, which means it can be securely stored as a [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started) in a vault. References must follow a [specific format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).",
                "description_kind": "plain",
                "required": true
              },
              "cert_alt": {
                "type": "string",
                "description": "PEM-encoded public certificate chain of the alternate SSL key pair. This should only be set if you have both RSA and ECDSA types of certificate available and would like Kong to prefer serving using ECDSA certs when client advertises support for it. This field is _referenceable_, which means it can be securely stored as a [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started) in a vault. References must follow a [specific format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).",
                "description_kind": "plain",
                "optional": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "PEM-encoded private key of the SSL key pair. This field is _referenceable_, which means it can be securely stored as a [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started) in a vault. References must follow a [specific format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).",
                "description_kind": "plain",
                "required": true
              },
              "key_alt": {
                "type": "string",
                "description": "PEM-encoded private key of the alternate SSL key pair. This should only be set if you have both RSA and ECDSA types of certificate available and would like Kong to prefer serving using ECDSA certs when client advertises support for it. This field is _referenceable_, which means it can be securely stored as a [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started) in a vault. References must follow a [specific format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).",
                "description_kind": "plain",
                "optional": true
              },
              "snis": {
                "type": [
                  "list",
                  "string"
                ],
                "description_kind": "plain",
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Certificate for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayCertificate Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_config_store": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The Config Store ID.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "GatewayConfigStore Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_config_store_secret": {
          "version": 0,
          "block": {
            "attributes": {
              "config_store_id": {
                "type": "string",
                "description": "Config Store identifier",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "Config Store Secret key. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              },
              "value": {
                "type": "string",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              }
            },
            "description": "GatewayConfigStoreSecret Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_consumer": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "custom_id": {
                "type": "string",
                "description": "Field for storing an existing unique ID for the Consumer - useful for mapping Kong with users in your existing database. You must send either this field or `username` with the request.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Consumer for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "username": {
                "type": "string",
                "description": "The unique username of the Consumer. You must send either this field or `custom_id` with the request.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "GatewayConsumer Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_consumer_group": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the consumer group.",
                "description_kind": "plain",
                "required": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A set of strings representing tags.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayConsumerGroup Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_consumer_group_member": {
          "version": 0,
          "block": {
            "attributes": {
              "consumer_group_id": {
                "type": "string",
                "description": "The UUID or name of the consumer group. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "consumer_id": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "GatewayConsumerGroupMember Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_control_plane": {
          "version": 0,
          "block": {
            "attributes": {
              "auth_type": {
                "type": "string",
                "description": "The auth type value of the cluster associated with the Runtime Group. must be one of [\"pinned_client_certs\", \"pki_client_certs\"]",
                "description_kind": "plain",
                "optional": true
              },
              "cloud_gateway": {
                "type": "bool",
                "description": "Whether this control-plane can be used for cloud-gateways. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_type": {
                "type": "string",
                "description": "The ClusterType value of the cluster associated with the Control Plane. must be one of [\"CLUSTER_TYPE_CONTROL_PLANE\", \"CLUSTER_TYPE_K8S_INGRESS_CONTROLLER\", \"CLUSTER_TYPE_CONTROL_PLANE_GROUP\", \"CLUSTER_TYPE_SERVERLESS\", \"CLUSTER_TYPE_HYBRID\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "config": {
                "nested_type": {
                  "attributes": {
                    "auth_type": {
                      "type": "string",
                      "description": "The auth type value of the cluster associated with the Runtime Group. must be one of [\"pinned_client_certs\", \"pki_client_certs\"]",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "cloud_gateway": {
                      "type": "bool",
                      "description": "Whether the Control Plane can be used for cloud-gateways.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "cluster_type": {
                      "type": "string",
                      "description": "The ClusterType value of the cluster associated with the Control Plane. must be one of [\"CLUSTER_TYPE_CONTROL_PLANE\", \"CLUSTER_TYPE_K8S_INGRESS_CONTROLLER\", \"CLUSTER_TYPE_CONTROL_PLANE_GROUP\", \"CLUSTER_TYPE_SERVERLESS\", \"CLUSTER_TYPE_HYBRID\"]",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "control_plane_endpoint": {
                      "type": "string",
                      "description": "Control Plane Endpoint.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "proxy_urls": {
                      "nested_type": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "description": "Hostname of the proxy URL.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "Port of the proxy URL.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Protocol of the proxy URL.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "set"
                      },
                      "description": "Array of proxy URLs associated with reaching the data-planes connected to a control-plane.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "telemetry_endpoint": {
                      "type": "string",
                      "description": "Telemetry Endpoint.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "CP configuration object for related access endpoints.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The description of the control plane in Konnect.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "The control plane ID.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the control plane.",
                "description_kind": "plain",
                "required": true
              },
              "proxy_urls": {
                "nested_type": {
                  "attributes": {
                    "host": {
                      "type": "string",
                      "description": "Hostname of the proxy URL.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "port": {
                      "type": "number",
                      "description": "Port of the proxy URL.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "Protocol of the proxy URL.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "set"
                },
                "description": "Array of proxy URLs associated with reaching the data-planes connected to a control-plane.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "GatewayControlPlane Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_control_plane_membership": {
          "version": 0,
          "block": {
            "attributes": {
              "id": {
                "type": "string",
                "description": "ID of a control plane group. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "members": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "GatewayControlPlaneMembership Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_custom_plugin": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "type": "dynamic",
                "description": "Configuration",
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed. ",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Plugin ID",
                "description_kind": "plain",
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "Plugin Name",
                "description_kind": "plain",
                "required": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "protocols": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `\"tcp\"` and `\"tls\"`.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Gateway Custom Plugin Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_custom_plugin_schema": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "An ISO-8604 timestamp representation of custom plugin schema creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "lua_schema": {
                "type": "string",
                "description": "The custom plugin schema; `jq -Rs '.' schema.lua`.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The custom plugin name determined by the custom plugin schema.",
                "description_kind": "plain",
                "computed": true
              },
              "updated_at": {
                "type": "number",
                "description": "An ISO-8604 timestamp representation of custom plugin schema update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "GatewayCustomPluginSchema Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_custom_plugin_streaming": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "handler": {
                "type": "string",
                "description": "The handler for the given custom plugin.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name to associate with the given custom plugin.",
                "description_kind": "plain",
                "required": true
              },
              "schema": {
                "type": "string",
                "description": "The schema for the given custom plugin.",
                "description_kind": "plain",
                "required": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A set of strings representing tags.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayCustomPluginStreaming Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_data_plane_client_certificate": {
          "version": 0,
          "block": {
            "attributes": {
              "cert": {
                "type": "string",
                "description": "JSON escaped string of the certificate. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Date certificate was created.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Unique ID of the certificate entity.",
                "description_kind": "plain",
                "computed": true
              },
              "updated_at": {
                "type": "number",
                "description": "Date certificate was last updated.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "GatewayDataPlaneClientCertificate Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_hmac_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "consumer_id": {
                "type": "string",
                "description": "Consumer ID for nested entities. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier). Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "secret": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A set of strings representing tags. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "username": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "GatewayHMACAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_jwt": {
          "version": 0,
          "block": {
            "attributes": {
              "algorithm": {
                "type": "string",
                "description": "Default: \"HS256\"; must be one of [\"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\", \"ESP256\", \"ESP384\", \"ESP512\", \"ESB256\", \"ESB320\", \"ESB384\", \"ESB512\", \"ES256K\", \"EdDSA\", \"Ed25519\", \"Ed448\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_id": {
                "type": "string",
                "description": "Consumer ID for nested entities. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier). Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "rsa_public_key": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "secret": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A set of strings representing tags. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "GatewayJWT Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_key": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "jwk": {
                "type": "string",
                "description": "A JSON Web Key represented as a string.",
                "description_kind": "plain",
                "optional": true
              },
              "kid": {
                "type": "string",
                "description": "A unique identifier for a key.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The name to associate with the given keys.",
                "description_kind": "plain",
                "optional": true
              },
              "pem": {
                "nested_type": {
                  "attributes": {
                    "private_key": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "public_key": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "A keypair in PEM format.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "set": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "The id (an UUID) of the key-set with which to associate the key.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Key for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "x5t": {
                "type": "string",
                "description": "X.509 certificate SHA-1 thumbprint.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "GatewayKey Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_key_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "consumer_id": {
                "type": "string",
                "description": "Consumer ID for nested entities. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier). Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "key": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A set of strings representing tags. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "ttl": {
                "type": "number",
                "description": "key-auth ttl in seconds. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayKeyAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_key_set": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name to associate with the given key-set.",
                "description_kind": "plain",
                "optional": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A set of strings representing tags.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayKeySet Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_mtls_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "ca_certificate": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_id": {
                "type": "string",
                "description": "Consumer ID for nested entities. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier). Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "subject_name": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A set of strings representing tags. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "GatewayMTLSAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_partial": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "computed": true
              },
              "redis_ce": {
                "nested_type": {
                  "attributes": {
                    "config": {
                      "nested_type": {
                        "attributes": {
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Not Null",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "created_at": {
                      "type": "number",
                      "description": "Unix epoch when the resource was created.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tags": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A set of strings representing tags.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "updated_at": {
                      "type": "number",
                      "description": "Unix epoch when the resource was last updated.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "redis_ee": {
                "nested_type": {
                  "attributes": {
                    "config": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"master\", \"slave\", \"any\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Not Null",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "created_at": {
                      "type": "number",
                      "description": "Unix epoch when the resource was created.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tags": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A set of strings representing tags.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "updated_at": {
                      "type": "number",
                      "description": "Unix epoch when the resource was last updated.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "GatewayPartial Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_acl": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Arbitrary group names that are allowed to consume the service or route. One of `config.allow` or `config.deny` must be specified.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "always_use_authenticated_groups": {
                      "type": "bool",
                      "description": "If enabled (`true`), the authenticated groups will always be used even when an authenticated consumer already exists. If the authenticated groups don't exist, it will fallback to use the groups associated with the consumer. By default the authenticated groups will only be used when there is no consumer or the consumer is anonymous. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "deny": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Arbitrary group names that are not allowed to consume the service or route. One of `config.allow` or `config.deny` must be specified.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_groups_header": {
                      "type": "bool",
                      "description": "If enabled (`true`), prevents the `X-Consumer-Groups` header from being sent in the request to the upstream service. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "include_consumer_groups": {
                      "type": "bool",
                      "description": "If enabled (`true`), allows the consumer-groups to be used in the `allow|deny` fields. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginACL Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_acme": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "account_email": {
                      "type": "string",
                      "description": "The account identifier. Can be reused in a different plugin instance.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "account_key": {
                      "nested_type": {
                        "attributes": {
                          "key_id": {
                            "type": "string",
                            "description": "The Key ID.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "key_set": {
                            "type": "string",
                            "description": "The ID of the key set to associate the Key ID with.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The private key associated with the account.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow_any_domain": {
                      "type": "bool",
                      "description": "If set to `true`, the plugin allows all domains and ignores any values in the `domains` list. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "api_uri": {
                      "type": "string",
                      "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search. Default: \"https://acme-v02.api.letsencrypt.org/directory\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cert_type": {
                      "type": "string",
                      "description": "The certificate type to create. The possible values are `rsa` for RSA certificate or `ecc` for EC certificate. Default: \"rsa\"; must be one of [\"ecc\", \"rsa\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "domains": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "An array of strings representing hosts. A valid host is a string containing one or more labels separated by periods, with at most one wildcard label ('*')",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "eab_hmac_key": {
                      "type": "string",
                      "description": "External account binding (EAB) base64-encoded URL string of the HMAC key. You usually don't need to set this unless it is explicitly required by the CA.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "eab_kid": {
                      "type": "string",
                      "description": "External account binding (EAB) key id. You usually don't need to set this unless it is explicitly required by the CA.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "enable_ipv4_common_name": {
                      "type": "bool",
                      "description": "A boolean value that controls whether to include the IPv4 address in the common name field of generated certificates. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "fail_backoff_minutes": {
                      "type": "number",
                      "description": "Minutes to wait for each domain that fails to create a certificate. This applies to both a\nnew certificate and a renewal certificate.\nDefault: 5",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "preferred_chain": {
                      "type": "string",
                      "description": "A string value that specifies the preferred certificate chain to use when generating certificates.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "renew_threshold_days": {
                      "type": "number",
                      "description": "Days remaining to renew the certificate before it expires. Default: 14",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "rsa_key_size": {
                      "type": "number",
                      "description": "RSA private key size for the certificate. The possible values are 2048, 3072, or 4096. Default: 4096; must be one of [\"2048\", \"3072\", \"4096\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "storage": {
                      "type": "string",
                      "description": "The backend storage type to use. In DB-less mode and Konnect, `kong` storage is unavailable. In hybrid mode and Konnect, `shm` storage is unavailable. `shm` storage does not persist during Kong restarts and does not work for Kong running on different machines, so consider using one of `kong`, `redis`, `consul`, or `vault` in production. Default: \"shm\"; must be one of [\"consul\", \"kong\", \"redis\", \"shm\", \"vault\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "storage_config": {
                      "nested_type": {
                        "attributes": {
                          "consul": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "https": {
                                  "type": "bool",
                                  "description": "Boolean representation of https. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "kv_path": {
                                  "type": "string",
                                  "description": "KV prefix path.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "timeout": {
                                  "type": "number",
                                  "description": "Timeout in milliseconds.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "token": {
                                  "type": "string",
                                  "description": "Consul ACL token.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "kong": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          },
                          "redis": {
                            "nested_type": {
                              "attributes": {
                                "database": {
                                  "type": "number",
                                  "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "extra_options": {
                                  "nested_type": {
                                    "attributes": {
                                      "namespace": {
                                        "type": "string",
                                        "description": "A namespace to prepend to all keys stored in Redis. Default: \"\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "scan_count": {
                                        "type": "number",
                                        "description": "The number of keys to return in Redis SCAN calls. Default: 10",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Custom ACME Redis options",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "server_name": {
                                  "type": "string",
                                  "description": "A string representing an SNI (server name indication) value for TLS.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "If set to true, uses SSL to connect to Redis. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "username": {
                                  "type": "string",
                                  "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "shm": {
                            "nested_type": {
                              "attributes": {
                                "shm_name": {
                                  "type": "string",
                                  "description": "Name of shared memory zone used for Kong API gateway storage. Default: \"kong\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "vault": {
                            "nested_type": {
                              "attributes": {
                                "auth_method": {
                                  "type": "string",
                                  "description": "Auth Method, default to token, can be 'token' or 'kubernetes'. Default: \"token\"; must be one of [\"kubernetes\", \"token\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "auth_path": {
                                  "type": "string",
                                  "description": "Vault's authentication path to use.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "auth_role": {
                                  "type": "string",
                                  "description": "The role to try and assign.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "https": {
                                  "type": "bool",
                                  "description": "Boolean representation of https. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "jwt_path": {
                                  "type": "string",
                                  "description": "The path to the JWT.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "kv_path": {
                                  "type": "string",
                                  "description": "KV prefix path.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "timeout": {
                                  "type": "number",
                                  "description": "Timeout in milliseconds.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "tls_server_name": {
                                  "type": "string",
                                  "description": "SNI used in request, default to host if omitted.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "tls_verify": {
                                  "type": "bool",
                                  "description": "Turn on TLS verification. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "token": {
                                  "type": "string",
                                  "description": "Consul ACL token.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "tos_accepted": {
                      "type": "bool",
                      "description": "If you are using Let's Encrypt, you must set this to `true` to agree the terms of service. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAcme Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_aws_guardrails": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "aws_access_key_id": {
                      "type": "string",
                      "description": "The AWS access key ID to use for authentication",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "aws_region": {
                      "type": "string",
                      "description": "The AWS region to use for the Bedrock API",
                      "description_kind": "plain",
                      "required": true
                    },
                    "aws_secret_access_key": {
                      "type": "string",
                      "description": "The AWS secret access key to use for authentication",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "guarding_mode": {
                      "type": "string",
                      "description": "The guardrail mode to use for the request. Default: \"INPUT\"; must be one of [\"BOTH\", \"INPUT\", \"OUTPUT\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "guardrails_id": {
                      "type": "string",
                      "description": "The guardrail identifier used in the request to apply the guardrail",
                      "description_kind": "plain",
                      "required": true
                    },
                    "guardrails_version": {
                      "type": "string",
                      "description": "The guardrail version used in the request to apply the guardrail",
                      "description_kind": "plain",
                      "required": true
                    },
                    "response_buffer_size": {
                      "type": "number",
                      "description": "The amount of token receiving from upstream to be buffered before sending to the guardrails service. This only applies to the response content guard. Default: 100",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "stop_on_error": {
                      "type": "bool",
                      "description": "Stop processing if an error occurs. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "text_source": {
                      "type": "string",
                      "description": "Select where to pick the 'text' for the Content Guard Services request. Default: \"concatenate_all_content\"; must be one of [\"concatenate_all_content\", \"concatenate_user_content\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Connection timeout with the bedrock service. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiAwsGuardrails Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_azure_content_safety": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "azure_api_version": {
                      "type": "string",
                      "description": "Sets the ?api-version URL parameter, used for defining the Azure Content Services interchange format. Default: \"2023-10-01\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "azure_client_id": {
                      "type": "string",
                      "description": "If `azure_use_managed_identity` is true, set the client ID if required.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "azure_client_secret": {
                      "type": "string",
                      "description": "If `azure_use_managed_identity` is true, set the client secret if required.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "azure_tenant_id": {
                      "type": "string",
                      "description": "If `azure_use_managed_identity` is true, set the tenant ID if required.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "azure_use_managed_identity": {
                      "type": "bool",
                      "description": "If checked, uses (if set) `azure_client_id`, `azure_client_secret`, and/or `azure_tenant_id` for Azure authentication, via Managed or User-assigned identity. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "blocklist_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Use these configured blocklists (in Azure Content Services) when inspecting content.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "categories": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "rejection_level": {
                            "type": "number",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Array of categories, and their thresholds, to measure on.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "content_safety_key": {
                      "type": "string",
                      "description": "If `azure_use_managed_identity` is true, set the API key to call Content Safety.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "content_safety_url": {
                      "type": "string",
                      "description": "Full URL, inc protocol, of the Azure Content Safety instance.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "halt_on_blocklist_hit": {
                      "type": "bool",
                      "description": "Tells Azure to reject the request if any blocklist filter is hit. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "output_type": {
                      "type": "string",
                      "description": "See https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/content-filter#content-filtering-categories. Default: \"FourSeverityLevels\"; must be one of [\"EightSeverityLevels\", \"FourSeverityLevels\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "reveal_failure_reason": {
                      "type": "bool",
                      "description": "Set true to tell the caller why their request was rejected, if so. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "text_source": {
                      "type": "string",
                      "description": "Select where to pick the 'text' for the Azure Content Services request. Default: \"concatenate_all_content\"; must be one of [\"concatenate_all_content\", \"concatenate_user_content\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiAzureContentSafety Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_prompt_compressor": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "compression_ranges": {
                      "nested_type": {
                        "attributes": {
                          "max_tokens": {
                            "type": "number",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "min_tokens": {
                            "type": "number",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "value": {
                            "type": "number",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "What value to be used to compress with. The 'value' is interpreted as rate or target_token depending on compressor_type.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "compressor_type": {
                      "type": "string",
                      "description": "What compression type to use to compress with. Default: \"rate\"; must be one of [\"rate\", \"target_token\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "compressor_url": {
                      "type": "string",
                      "description": "The url of the compressor. Default: \"http://localhost:8080\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive_timeout": {
                      "type": "number",
                      "description": "The keepalive timeout for the established http connnection. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "log_text_data": {
                      "type": "bool",
                      "description": "Log the text data. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "message_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "stop_on_error": {
                      "type": "bool",
                      "description": "Stop processing if an error occurs. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Connection timeout with the compressor. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiPromptCompressor Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_prompt_decorator": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "llm_format": {
                      "type": "string",
                      "description": "LLM input and output format and schema to use. Default: \"openai\"; must be one of [\"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"openai\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_request_body_size": {
                      "type": "number",
                      "description": "max allowed body size allowed to be introspected. 0 means unlimited, but the size of this body will still be limited by Nginx's client_max_body_size. Default: 8192",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "prompts": {
                      "nested_type": {
                        "attributes": {
                          "append": {
                            "nested_type": {
                              "attributes": {
                                "content": {
                                  "type": "string",
                                  "description": "Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "role": {
                                  "type": "string",
                                  "description": "Default: \"system\"; must be one of [\"assistant\", \"system\", \"user\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Insert chat messages at the end of the chat message array. This array preserves exact order when adding messages.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "prepend": {
                            "nested_type": {
                              "attributes": {
                                "content": {
                                  "type": "string",
                                  "description": "Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "role": {
                                  "type": "string",
                                  "description": "Default: \"system\"; must be one of [\"assistant\", \"system\", \"user\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Insert chat messages at the beginning of the chat message array. This array preserves exact order when adding messages.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiPromptDecorator Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_prompt_guard": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_all_conversation_history": {
                      "type": "bool",
                      "description": "If true, will ignore all previous chat prompts from the conversation history. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow_patterns": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Array of valid regex patterns, or valid questions from the 'user' role in chat.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "deny_patterns": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Array of invalid regex patterns, or invalid questions from the 'user' role in chat.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "genai_category": {
                      "type": "string",
                      "description": "Generative AI category of the request. Default: \"text/generation\"; must be one of [\"audio/speech\", \"audio/transcription\", \"image/generation\", \"realtime/generation\", \"text/embeddings\", \"text/generation\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "llm_format": {
                      "type": "string",
                      "description": "LLM input and output format and schema to use. Default: \"openai\"; must be one of [\"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"openai\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "match_all_roles": {
                      "type": "bool",
                      "description": "If true, will match all roles in addition to 'user' role in conversation history. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_request_body_size": {
                      "type": "number",
                      "description": "max allowed body size allowed to be introspected. 0 means unlimited, but the size of this body will still be limited by Nginx's client_max_body_size. Default: 8192",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiPromptGuard Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_prompt_template": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_untemplated_requests": {
                      "type": "bool",
                      "description": "Set true to allow requests that don't call or match any template. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "log_original_request": {
                      "type": "bool",
                      "description": "Set true to add the original request to the Kong log plugin(s) output. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_request_body_size": {
                      "type": "number",
                      "description": "max allowed body size allowed to be introspected. 0 means unlimited, but the size of this body will still be limited by Nginx's client_max_body_size. Default: 8192",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "templates": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Unique name for the template, can be called with `{template://NAME}`. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "template": {
                            "type": "string",
                            "description": "Template string for this request, supports mustache-style `{{placeholders}}`. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Array of templates available to the request context.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiPromptTemplate Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_proxy": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "auth": {
                      "nested_type": {
                        "attributes": {
                          "allow_override": {
                            "type": "bool",
                            "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "aws_access_key_id": {
                            "type": "string",
                            "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "aws_secret_access_key": {
                            "type": "string",
                            "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "azure_client_id": {
                            "type": "string",
                            "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "azure_client_secret": {
                            "type": "string",
                            "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "azure_tenant_id": {
                            "type": "string",
                            "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "azure_use_managed_identity": {
                            "type": "bool",
                            "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "gcp_service_account_json": {
                            "type": "string",
                            "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "gcp_use_service_account": {
                            "type": "bool",
                            "description": "Use service account auth for GCP-based providers and models. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "header_name": {
                            "type": "string",
                            "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "header_value": {
                            "type": "string",
                            "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "param_location": {
                            "type": "string",
                            "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of [\"body\", \"query\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "param_name": {
                            "type": "string",
                            "description": "If AI model requires authentication via query parameter, specify its name here.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "param_value": {
                            "type": "string",
                            "description": "Specify the full parameter value for 'param_name'.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "genai_category": {
                      "type": "string",
                      "description": "Generative AI category of the request. Default: \"text/generation\"; must be one of [\"audio/speech\", \"audio/transcription\", \"image/generation\", \"text/embeddings\", \"text/generation\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "llm_format": {
                      "type": "string",
                      "description": "LLM input and output format and schema to use. Default: \"openai\"; must be one of [\"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"openai\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "logging": {
                      "nested_type": {
                        "attributes": {
                          "log_payloads": {
                            "type": "bool",
                            "description": "If enabled, will log the request and response body into the Kong log plugin(s) output. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "log_statistics": {
                            "type": "bool",
                            "description": "If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_request_body_size": {
                      "type": "number",
                      "description": "max allowed body size allowed to be introspected. 0 means unlimited, but the size of this body will still be limited by Nginx's client_max_body_size. Default: 8192",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "model": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Model name to execute.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "options": {
                            "nested_type": {
                              "attributes": {
                                "anthropic_version": {
                                  "type": "string",
                                  "description": "Defines the schema/API version, if using Anthropic provider.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_api_version": {
                                  "type": "string",
                                  "description": "'api-version' for Azure OpenAI instances. Default: \"2023-05-15\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "azure_deployment_id": {
                                  "type": "string",
                                  "description": "Deployment ID for Azure OpenAI instances.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_instance": {
                                  "type": "string",
                                  "description": "Instance name for Azure OpenAI hosted models.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "bedrock": {
                                  "nested_type": {
                                    "attributes": {
                                      "aws_assume_role_arn": {
                                        "type": "string",
                                        "description": "If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "aws_region": {
                                        "type": "string",
                                        "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "aws_role_session_name": {
                                        "type": "string",
                                        "description": "If using AWS providers (Bedrock), set the identifier of the assumed role session.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "aws_sts_endpoint_url": {
                                        "type": "string",
                                        "description": "If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "embeddings_normalize": {
                                        "type": "bool",
                                        "description": "If using AWS providers (Bedrock), set to true to normalize the embeddings. Default: false",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "performance_config_latency": {
                                        "type": "string",
                                        "description": "Force the client's performance configuration 'latency' for all requests. Leave empty to let the consumer select the performance configuration.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "cohere": {
                                  "nested_type": {
                                    "attributes": {
                                      "embedding_input_type": {
                                        "type": "string",
                                        "description": "The purpose of the input text to calculate embedding vectors. Default: \"classification\"; must be one of [\"classification\", \"clustering\", \"image\", \"search_document\", \"search_query\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "wait_for_model": {
                                        "type": "bool",
                                        "description": "Wait for the model if it is not ready",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "embeddings_dimensions": {
                                  "type": "number",
                                  "description": "If using embeddings models, set the number of dimensions to generate.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "gemini": {
                                  "nested_type": {
                                    "attributes": {
                                      "api_endpoint": {
                                        "type": "string",
                                        "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only).",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "location_id": {
                                        "type": "string",
                                        "description": "If running Gemini on Vertex, specify the location ID.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "project_id": {
                                        "type": "string",
                                        "description": "If running Gemini on Vertex, specify the project ID.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "huggingface": {
                                  "nested_type": {
                                    "attributes": {
                                      "use_cache": {
                                        "type": "bool",
                                        "description": "Use the cache layer on the inference API",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "wait_for_model": {
                                        "type": "bool",
                                        "description": "Wait for the model if it is not ready",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "input_cost": {
                                  "type": "number",
                                  "description": "Defines the cost per 1M tokens in your prompt.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "llama2_format": {
                                  "type": "string",
                                  "description": "If using llama2 provider, select the upstream message format. must be one of [\"ollama\", \"openai\", \"raw\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "max_tokens": {
                                  "type": "number",
                                  "description": "Defines the max_tokens, if using chat or completion models.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "mistral_format": {
                                  "type": "string",
                                  "description": "If using mistral provider, select the upstream message format. must be one of [\"ollama\", \"openai\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "output_cost": {
                                  "type": "number",
                                  "description": "Defines the cost per 1M tokens in the output of the AI.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "temperature": {
                                  "type": "number",
                                  "description": "Defines the matching temperature, if using chat or completion models.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "top_k": {
                                  "type": "number",
                                  "description": "Defines the top-k most likely tokens, if supported.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "top_p": {
                                  "type": "number",
                                  "description": "Defines the top-p probability mass, if supported.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "upstream_path": {
                                  "type": "string",
                                  "description": "Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "upstream_url": {
                                  "type": "string",
                                  "description": "Manually specify or override the full URL to the AI operation endpoints, when calling (self-)hosted models, or for running via a private endpoint.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Key/value settings for the model",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "provider": {
                            "type": "string",
                            "description": "AI provider request format - Kong translates requests to and from the specified backend compatible formats. must be one of [\"anthropic\", \"azure\", \"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"llama2\", \"mistral\", \"openai\"]",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    },
                    "model_name_header": {
                      "type": "bool",
                      "description": "Display the model name selected in the X-Kong-LLM-Model response header. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_streaming": {
                      "type": "string",
                      "description": "Whether to 'optionally allow', 'deny', or 'always' (force) the streaming of answers via server sent events. Default: \"allow\"; must be one of [\"allow\", \"always\", \"deny\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "route_type": {
                      "type": "string",
                      "description": "The model's operation implementation, for this provider. must be one of [\"audio/v1/audio/speech\", \"audio/v1/audio/transcriptions\", \"audio/v1/audio/translations\", \"image/v1/images/edits\", \"image/v1/images/generations\", \"llm/v1/assistants\", \"llm/v1/batches\", \"llm/v1/chat\", \"llm/v1/completions\", \"llm/v1/embeddings\", \"llm/v1/files\", \"llm/v1/responses\", \"preserve\", \"realtime/v1/realtime\"]",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiProxy Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_proxy_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "balancer": {
                      "nested_type": {
                        "attributes": {
                          "algorithm": {
                            "type": "string",
                            "description": "Which load balancing algorithm to use. Default: \"round-robin\"; must be one of [\"consistent-hashing\", \"lowest-latency\", \"lowest-usage\", \"priority\", \"round-robin\", \"semantic\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "Default: 60000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "failover_criteria": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Specifies in which cases an upstream response should be failover to the next target. Each option in the array is equivalent to the function of http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "hash_on_header": {
                            "type": "string",
                            "description": "The header to use for consistent-hashing. Default: \"X-Kong-LLM-Request-ID\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "latency_strategy": {
                            "type": "string",
                            "description": "What metrics to use for latency. Available values are: `tpot` (time-per-output-token) and `e2e`. Default: \"tpot\"; must be one of [\"e2e\", \"tpot\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "Default: 60000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "retries": {
                            "type": "number",
                            "description": "The number of retries to execute upon failure to proxy. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "slots": {
                            "type": "number",
                            "description": "The number of slots in the load balancer algorithm. Default: 10000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "tokens_count_strategy": {
                            "type": "string",
                            "description": "What tokens to use for usage calculation. Available values are: `total_tokens` `prompt_tokens`, `completion_tokens` and `cost`. Default: \"total-tokens\"; must be one of [\"completion-tokens\", \"cost\", \"prompt-tokens\", \"total-tokens\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "write_timeout": {
                            "type": "number",
                            "description": "Default: 60000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "embeddings": {
                      "nested_type": {
                        "attributes": {
                          "auth": {
                            "nested_type": {
                              "attributes": {
                                "allow_override": {
                                  "type": "bool",
                                  "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "aws_access_key_id": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "aws_secret_access_key": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_secret": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_tenant_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_use_managed_identity": {
                                  "type": "bool",
                                  "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "gcp_service_account_json": {
                                  "type": "string",
                                  "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "gcp_use_service_account": {
                                  "type": "bool",
                                  "description": "Use service account auth for GCP-based providers and models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "header_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "header_value": {
                                  "type": "string",
                                  "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_location": {
                                  "type": "string",
                                  "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of [\"body\", \"query\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "param_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via query parameter, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_value": {
                                  "type": "string",
                                  "description": "Specify the full parameter value for 'param_name'.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "model": {
                            "nested_type": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Model name to execute.",
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "options": {
                                  "nested_type": {
                                    "attributes": {
                                      "azure": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_version": {
                                              "type": "string",
                                              "description": "'api-version' for Azure OpenAI instances. Default: \"2023-05-15\"",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "deployment_id": {
                                              "type": "string",
                                              "description": "Deployment ID for Azure OpenAI instances.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "instance": {
                                              "type": "string",
                                              "description": "Instance name for Azure OpenAI hosted models.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "required": true
                                      },
                                      "bedrock": {
                                        "nested_type": {
                                          "attributes": {
                                            "aws_assume_role_arn": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_region": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_role_session_name": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), set the identifier of the assumed role session.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_sts_endpoint_url": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "embeddings_normalize": {
                                              "type": "bool",
                                              "description": "If using AWS providers (Bedrock), set to true to normalize the embeddings. Default: false",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "performance_config_latency": {
                                              "type": "string",
                                              "description": "Force the client's performance configuration 'latency' for all requests. Leave empty to let the consumer select the performance configuration.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "gemini": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_endpoint": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only).",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "location_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the location ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "project_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the project ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "huggingface": {
                                        "nested_type": {
                                          "attributes": {
                                            "use_cache": {
                                              "type": "bool",
                                              "description": "Use the cache layer on the inference API",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "upstream_url": {
                                        "type": "string",
                                        "description": "upstream url for the embeddings",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Key/value settings for the model",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "provider": {
                                  "type": "string",
                                  "description": "AI provider format to use for embeddings API. must be one of [\"azure\", \"bedrock\", \"gemini\", \"huggingface\", \"mistral\", \"openai\"]",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "genai_category": {
                      "type": "string",
                      "description": "Generative AI category of the request. Default: \"text/generation\"; must be one of [\"audio/speech\", \"audio/transcription\", \"image/generation\", \"realtime/generation\", \"text/embeddings\", \"text/generation\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "llm_format": {
                      "type": "string",
                      "description": "LLM input and output format and schema to use. Default: \"openai\"; must be one of [\"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"openai\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_request_body_size": {
                      "type": "number",
                      "description": "max allowed body size allowed to be introspected. 0 means unlimited, but the size of this body will still be limited by Nginx's client_max_body_size. Default: 8192",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "model_name_header": {
                      "type": "bool",
                      "description": "Display the model name selected in the X-Kong-LLM-Model response header. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_streaming": {
                      "type": "string",
                      "description": "Whether to 'optionally allow', 'deny', or 'always' (force) the streaming of answers via server sent events. Default: \"allow\"; must be one of [\"allow\", \"always\", \"deny\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "targets": {
                      "nested_type": {
                        "attributes": {
                          "auth": {
                            "nested_type": {
                              "attributes": {
                                "allow_override": {
                                  "type": "bool",
                                  "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "aws_access_key_id": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "aws_secret_access_key": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_secret": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_tenant_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_use_managed_identity": {
                                  "type": "bool",
                                  "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "gcp_service_account_json": {
                                  "type": "string",
                                  "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "gcp_use_service_account": {
                                  "type": "bool",
                                  "description": "Use service account auth for GCP-based providers and models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "header_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "header_value": {
                                  "type": "string",
                                  "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_location": {
                                  "type": "string",
                                  "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of [\"body\", \"query\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "param_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via query parameter, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_value": {
                                  "type": "string",
                                  "description": "Specify the full parameter value for 'param_name'.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The semantic description of the target, required if using semantic load balancing. Specially, setting this to 'CATCHALL' will indicate such target to be used when no other targets match the semantic threshold.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "logging": {
                            "nested_type": {
                              "attributes": {
                                "log_payloads": {
                                  "type": "bool",
                                  "description": "If enabled, will log the request and response body into the Kong log plugin(s) output. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "log_statistics": {
                                  "type": "bool",
                                  "description": "If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "model": {
                            "nested_type": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Model name to execute.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "options": {
                                  "nested_type": {
                                    "attributes": {
                                      "anthropic_version": {
                                        "type": "string",
                                        "description": "Defines the schema/API version, if using Anthropic provider.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "azure_api_version": {
                                        "type": "string",
                                        "description": "'api-version' for Azure OpenAI instances. Default: \"2023-05-15\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "azure_deployment_id": {
                                        "type": "string",
                                        "description": "Deployment ID for Azure OpenAI instances.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "azure_instance": {
                                        "type": "string",
                                        "description": "Instance name for Azure OpenAI hosted models.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "bedrock": {
                                        "nested_type": {
                                          "attributes": {
                                            "aws_assume_role_arn": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_region": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_role_session_name": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), set the identifier of the assumed role session.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_sts_endpoint_url": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "embeddings_normalize": {
                                              "type": "bool",
                                              "description": "If using AWS providers (Bedrock), set to true to normalize the embeddings. Default: false",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "performance_config_latency": {
                                              "type": "string",
                                              "description": "Force the client's performance configuration 'latency' for all requests. Leave empty to let the consumer select the performance configuration.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "cohere": {
                                        "nested_type": {
                                          "attributes": {
                                            "embedding_input_type": {
                                              "type": "string",
                                              "description": "The purpose of the input text to calculate embedding vectors. Default: \"classification\"; must be one of [\"classification\", \"clustering\", \"image\", \"search_document\", \"search_query\"]",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "embeddings_dimensions": {
                                        "type": "number",
                                        "description": "If using embeddings models, set the number of dimensions to generate.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "gemini": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_endpoint": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only).",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "location_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the location ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "project_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the project ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "huggingface": {
                                        "nested_type": {
                                          "attributes": {
                                            "use_cache": {
                                              "type": "bool",
                                              "description": "Use the cache layer on the inference API",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "input_cost": {
                                        "type": "number",
                                        "description": "Defines the cost per 1M tokens in your prompt.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "llama2_format": {
                                        "type": "string",
                                        "description": "If using llama2 provider, select the upstream message format. must be one of [\"ollama\", \"openai\", \"raw\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "max_tokens": {
                                        "type": "number",
                                        "description": "Defines the max_tokens, if using chat or completion models.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "mistral_format": {
                                        "type": "string",
                                        "description": "If using mistral provider, select the upstream message format. must be one of [\"ollama\", \"openai\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "output_cost": {
                                        "type": "number",
                                        "description": "Defines the cost per 1M tokens in the output of the AI.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "temperature": {
                                        "type": "number",
                                        "description": "Defines the matching temperature, if using chat or completion models.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "top_k": {
                                        "type": "number",
                                        "description": "Defines the top-k most likely tokens, if supported.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "top_p": {
                                        "type": "number",
                                        "description": "Defines the top-p probability mass, if supported.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "upstream_path": {
                                        "type": "string",
                                        "description": "Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "upstream_url": {
                                        "type": "string",
                                        "description": "Manually specify or override the full URL to the AI operation endpoints, when calling (self-)hosted models, or for running via a private endpoint.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Key/value settings for the model",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "provider": {
                                  "type": "string",
                                  "description": "AI provider request format - Kong translates requests to and from the specified backend compatible formats. Not Null; must be one of [\"anthropic\", \"azure\", \"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"llama2\", \"mistral\", \"openai\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "route_type": {
                            "type": "string",
                            "description": "The model's operation implementation, for this provider. Not Null; must be one of [\"audio/v1/audio/speech\", \"audio/v1/audio/transcriptions\", \"audio/v1/audio/translations\", \"image/v1/images/edits\", \"image/v1/images/generations\", \"llm/v1/assistants\", \"llm/v1/batches\", \"llm/v1/chat\", \"llm/v1/completions\", \"llm/v1/embeddings\", \"llm/v1/files\", \"llm/v1/responses\", \"preserve\", \"realtime/v1/realtime\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "weight": {
                            "type": "number",
                            "description": "The weight this target gets within the upstream loadbalancer (1-65535). Default: 100",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description_kind": "plain",
                      "required": true
                    },
                    "vectordb": {
                      "nested_type": {
                        "attributes": {
                          "dimensions": {
                            "type": "number",
                            "description": "the desired dimensionality for the vectors",
                            "description_kind": "plain",
                            "required": true
                          },
                          "distance_metric": {
                            "type": "string",
                            "description": "the distance metric to use for vector searches. must be one of [\"cosine\", \"euclidean\"]",
                            "description_kind": "plain",
                            "required": true
                          },
                          "pgvector": {
                            "nested_type": {
                              "attributes": {
                                "database": {
                                  "type": "string",
                                  "description": "the database of the pgvector database. Default: \"kong-pgvector\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "the host of the pgvector database. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "the password of the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "the port of the pgvector database. Default: 5432",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "whether to use ssl for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_cert": {
                                  "type": "string",
                                  "description": "the path of ssl cert to use for the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl_cert_key": {
                                  "type": "string",
                                  "description": "the path of ssl cert key to use for the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl_required": {
                                  "type": "bool",
                                  "description": "whether ssl is required for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "whether to verify ssl for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_version": {
                                  "type": "string",
                                  "description": "the ssl version to use for the pgvector database. Default: \"tlsv1_2\"; must be one of [\"any\", \"tlsv1_2\", \"tlsv1_3\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "timeout": {
                                  "type": "number",
                                  "description": "the timeout of the pgvector database. Default: 5000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "user": {
                                  "type": "string",
                                  "description": "the user of the pgvector database. Default: \"postgres\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          },
                          "redis": {
                            "nested_type": {
                              "attributes": {
                                "cluster_max_redirections": {
                                  "type": "number",
                                  "description": "Maximum retry attempts for redirection. Default: 5",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "cluster_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "ip": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "connect_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "connection_is_proxied": {
                                  "type": "bool",
                                  "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "database": {
                                  "type": "number",
                                  "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "keepalive_backlog": {
                                  "type": "number",
                                  "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "keepalive_pool_size": {
                                  "type": "number",
                                  "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "read_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "send_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_master": {
                                  "type": "string",
                                  "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_password": {
                                  "type": "string",
                                  "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_role": {
                                  "type": "string",
                                  "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_username": {
                                  "type": "string",
                                  "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "server_name": {
                                  "type": "string",
                                  "description": "A string representing an SNI (server name indication) value for TLS.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "If set to true, uses SSL to connect to Redis. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "username": {
                                  "type": "string",
                                  "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          },
                          "strategy": {
                            "type": "string",
                            "description": "which vector database driver to use. must be one of [\"pgvector\", \"redis\"]",
                            "description_kind": "plain",
                            "required": true
                          },
                          "threshold": {
                            "type": "number",
                            "description": "the default similarity threshold for accepting semantic search results (float)",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiProxyAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_rag_injector": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "embeddings": {
                      "nested_type": {
                        "attributes": {
                          "auth": {
                            "nested_type": {
                              "attributes": {
                                "allow_override": {
                                  "type": "bool",
                                  "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "aws_access_key_id": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "aws_secret_access_key": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_secret": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_tenant_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_use_managed_identity": {
                                  "type": "bool",
                                  "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "gcp_service_account_json": {
                                  "type": "string",
                                  "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "gcp_use_service_account": {
                                  "type": "bool",
                                  "description": "Use service account auth for GCP-based providers and models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "header_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "header_value": {
                                  "type": "string",
                                  "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_location": {
                                  "type": "string",
                                  "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of [\"body\", \"query\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "param_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via query parameter, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_value": {
                                  "type": "string",
                                  "description": "Specify the full parameter value for 'param_name'.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "model": {
                            "nested_type": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Model name to execute.",
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "options": {
                                  "nested_type": {
                                    "attributes": {
                                      "azure": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_version": {
                                              "type": "string",
                                              "description": "'api-version' for Azure OpenAI instances. Default: \"2023-05-15\"",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "deployment_id": {
                                              "type": "string",
                                              "description": "Deployment ID for Azure OpenAI instances.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "instance": {
                                              "type": "string",
                                              "description": "Instance name for Azure OpenAI hosted models.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "required": true
                                      },
                                      "bedrock": {
                                        "nested_type": {
                                          "attributes": {
                                            "aws_assume_role_arn": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_region": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_role_session_name": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), set the identifier of the assumed role session.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_sts_endpoint_url": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "embeddings_normalize": {
                                              "type": "bool",
                                              "description": "If using AWS providers (Bedrock), set to true to normalize the embeddings. Default: false",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "performance_config_latency": {
                                              "type": "string",
                                              "description": "Force the client's performance configuration 'latency' for all requests. Leave empty to let the consumer select the performance configuration.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "gemini": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_endpoint": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only).",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "location_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the location ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "project_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the project ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "huggingface": {
                                        "nested_type": {
                                          "attributes": {
                                            "use_cache": {
                                              "type": "bool",
                                              "description": "Use the cache layer on the inference API",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "upstream_url": {
                                        "type": "string",
                                        "description": "upstream url for the embeddings",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Key/value settings for the model",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "provider": {
                                  "type": "string",
                                  "description": "AI provider format to use for embeddings API. must be one of [\"azure\", \"bedrock\", \"gemini\", \"huggingface\", \"mistral\", \"openai\"]",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    },
                    "fetch_chunks_count": {
                      "type": "number",
                      "description": "The maximum number of chunks to fetch from vectordb. Default: 5",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "inject_as_role": {
                      "type": "string",
                      "description": "Default: \"user\"; must be one of [\"assistant\", \"system\", \"user\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "inject_template": {
                      "type": "string",
                      "description": "Default: \"<CONTEXT>\\n<PROMPT>\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "stop_on_failure": {
                      "type": "bool",
                      "description": "Halt the LLM request process in case of a vectordb or embeddings service failure. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "vectordb": {
                      "nested_type": {
                        "attributes": {
                          "dimensions": {
                            "type": "number",
                            "description": "the desired dimensionality for the vectors",
                            "description_kind": "plain",
                            "required": true
                          },
                          "distance_metric": {
                            "type": "string",
                            "description": "the distance metric to use for vector searches. must be one of [\"cosine\", \"euclidean\"]",
                            "description_kind": "plain",
                            "required": true
                          },
                          "pgvector": {
                            "nested_type": {
                              "attributes": {
                                "database": {
                                  "type": "string",
                                  "description": "the database of the pgvector database. Default: \"kong-pgvector\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "the host of the pgvector database. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "the password of the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "the port of the pgvector database. Default: 5432",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "whether to use ssl for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_cert": {
                                  "type": "string",
                                  "description": "the path of ssl cert to use for the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl_cert_key": {
                                  "type": "string",
                                  "description": "the path of ssl cert key to use for the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl_required": {
                                  "type": "bool",
                                  "description": "whether ssl is required for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "whether to verify ssl for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_version": {
                                  "type": "string",
                                  "description": "the ssl version to use for the pgvector database. Default: \"tlsv1_2\"; must be one of [\"any\", \"tlsv1_2\", \"tlsv1_3\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "timeout": {
                                  "type": "number",
                                  "description": "the timeout of the pgvector database. Default: 5000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "user": {
                                  "type": "string",
                                  "description": "the user of the pgvector database. Default: \"postgres\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "redis": {
                            "nested_type": {
                              "attributes": {
                                "cluster_max_redirections": {
                                  "type": "number",
                                  "description": "Maximum retry attempts for redirection. Default: 5",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "cluster_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "ip": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "connect_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "connection_is_proxied": {
                                  "type": "bool",
                                  "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "database": {
                                  "type": "number",
                                  "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "keepalive_backlog": {
                                  "type": "number",
                                  "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "keepalive_pool_size": {
                                  "type": "number",
                                  "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "read_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "send_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_master": {
                                  "type": "string",
                                  "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_password": {
                                  "type": "string",
                                  "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_role": {
                                  "type": "string",
                                  "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_username": {
                                  "type": "string",
                                  "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "server_name": {
                                  "type": "string",
                                  "description": "A string representing an SNI (server name indication) value for TLS.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "If set to true, uses SSL to connect to Redis. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "username": {
                                  "type": "string",
                                  "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "strategy": {
                            "type": "string",
                            "description": "which vector database driver to use. must be one of [\"pgvector\", \"redis\"]",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    },
                    "vectordb_namespace": {
                      "type": "string",
                      "description": "The namespace of the vectordb to use for embeddings lookup. Default: \"kong_rag_injector\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiRagInjector Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_rate_limiting_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "dictionary_name": {
                      "type": "string",
                      "description": "The shared dictionary where counters are stored. When the plugin is configured to synchronize counter data externally (that is `config.strategy` is `cluster` or `redis` and `config.sync_rate` isn't `-1`), this dictionary serves as a buffer to populate counters in the data store on each synchronization cycle. Default: \"kong_rate_limiting_counters\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "disable_penalty": {
                      "type": "bool",
                      "description": "If set to `true`, this doesn't count denied requests (status = `429`). If set to `false`, all requests, including denied ones, are counted. This parameter only affects the `sliding` window_type and the request prompt provider. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_code": {
                      "type": "number",
                      "description": "Set a custom error code to return when the rate limit is exceeded. Default: 429",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_hide_providers": {
                      "type": "bool",
                      "description": "Optionally hide informative response that would otherwise provide information about the provider in the error message. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_message": {
                      "type": "string",
                      "description": "Set a custom error message to return when the rate limit is exceeded. Default: \"AI token rate limit exceeded for provider(s): \"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_name": {
                      "type": "string",
                      "description": "A string representing an HTTP header name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_client_headers": {
                      "type": "bool",
                      "description": "Optionally hide informative response headers that would otherwise provide information about the current status of limits and counters. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "identifier": {
                      "type": "string",
                      "description": "The type of identifier used to generate the rate limit key. Defines the scope used to increment the rate limiting counters. Can be `ip`, `credential`, `consumer`, `service`, `header`, `path` or `consumer-group`. Note if `identifier` is `consumer-group`, the plugin must be applied on a consumer group entity. Because a consumer may belong to multiple consumer groups, the plugin needs to know explicitly which consumer group to limit the rate. Default: \"consumer\"; must be one of [\"consumer\", \"consumer-group\", \"credential\", \"header\", \"ip\", \"path\", \"service\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "llm_format": {
                      "type": "string",
                      "description": "LLM input and output format and schema to use. Default: \"openai\"; must be one of [\"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"openai\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "llm_providers": {
                      "nested_type": {
                        "attributes": {
                          "limit": {
                            "type": [
                              "list",
                              "number"
                            ],
                            "description": "One or more requests-per-window limits to apply. There must be a matching number of window limits and sizes specified. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The LLM provider to which the rate limit applies. Not Null; must be one of [\"anthropic\", \"azure\", \"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"llama2\", \"mistral\", \"openai\", \"requestPrompt\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "window_size": {
                            "type": [
                              "list",
                              "number"
                            ],
                            "description": "One or more window sizes to apply a limit to (defined in seconds). There must be a matching number of window limits and sizes specified. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "The provider config. Takes an array of `name`, `limit` and `window size` values.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The rate limiting library namespace to use for this plugin instance. Counter data and sync configuration is isolated in each namespace. NOTE: For the plugin instances sharing the same namespace, all the configurations that are required for synchronizing counters, e.g. `strategy`, `redis`, `sync_rate`, `dictionary_name`, need to be the same.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "request_prompt_count_function": {
                      "type": "string",
                      "description": "If defined, it use custom function to count requests for the request prompt provider",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "retry_after_jitter_max": {
                      "type": "number",
                      "description": "The upper bound of a jitter (random delay) in seconds to be added to the `Retry-After` header of denied requests (status = `429`) in order to prevent all the clients from coming back at the same time. The lower bound of the jitter is `0`; in this case, the `Retry-After` header is equal to the `RateLimit-Reset` header. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The rate-limiting strategy to use for retrieving and incrementing the limits. Available values are: `local` and `cluster`. Default: \"local\"; must be one of [\"cluster\", \"local\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "sync_rate": {
                      "type": "number",
                      "description": "How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 will sync the counters in the specified number of seconds. The minimum allowed interval is 0.02 seconds (20ms).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tokens_count_strategy": {
                      "type": "string",
                      "description": "What tokens to use for cost calculation. Available values are: `total_tokens` `prompt_tokens`, `completion_tokens` or `cost`. Default: \"total_tokens\"; must be one of [\"completion_tokens\", \"cost\", \"prompt_tokens\", \"total_tokens\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "window_type": {
                      "type": "string",
                      "description": "Sets the time window type to either `sliding` (default) or `fixed`. Sliding windows apply the rate limiting logic while taking into account previous hit rates (from the window that immediately precedes the current) using a dynamic weight. Fixed windows consist of buckets that are statically assigned to a definitive time range, each request is mapped to only one fixed window based on its timestamp and will affect only that window's counters. Default: \"sliding\"; must be one of [\"fixed\", \"sliding\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiRateLimitingAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_request_transformer": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "http_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_timeout": {
                      "type": "number",
                      "description": "Timeout in milliseconds for the AI upstream service. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "https_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_verify": {
                      "type": "bool",
                      "description": "Verify the TLS certificate of the AI upstream service. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "llm": {
                      "nested_type": {
                        "attributes": {
                          "auth": {
                            "nested_type": {
                              "attributes": {
                                "allow_override": {
                                  "type": "bool",
                                  "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "aws_access_key_id": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "aws_secret_access_key": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_secret": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_tenant_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_use_managed_identity": {
                                  "type": "bool",
                                  "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "gcp_service_account_json": {
                                  "type": "string",
                                  "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "gcp_use_service_account": {
                                  "type": "bool",
                                  "description": "Use service account auth for GCP-based providers and models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "header_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "header_value": {
                                  "type": "string",
                                  "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_location": {
                                  "type": "string",
                                  "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of [\"body\", \"query\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "param_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via query parameter, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_value": {
                                  "type": "string",
                                  "description": "Specify the full parameter value for 'param_name'.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "logging": {
                            "nested_type": {
                              "attributes": {
                                "log_payloads": {
                                  "type": "bool",
                                  "description": "If enabled, will log the request and response body into the Kong log plugin(s) output. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "log_statistics": {
                                  "type": "bool",
                                  "description": "If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "model": {
                            "nested_type": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Model name to execute.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "options": {
                                  "nested_type": {
                                    "attributes": {
                                      "anthropic_version": {
                                        "type": "string",
                                        "description": "Defines the schema/API version, if using Anthropic provider.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "azure_api_version": {
                                        "type": "string",
                                        "description": "'api-version' for Azure OpenAI instances. Default: \"2023-05-15\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "azure_deployment_id": {
                                        "type": "string",
                                        "description": "Deployment ID for Azure OpenAI instances.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "azure_instance": {
                                        "type": "string",
                                        "description": "Instance name for Azure OpenAI hosted models.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "bedrock": {
                                        "nested_type": {
                                          "attributes": {
                                            "aws_assume_role_arn": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_region": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_role_session_name": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), set the identifier of the assumed role session.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_sts_endpoint_url": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "embeddings_normalize": {
                                              "type": "bool",
                                              "description": "If using AWS providers (Bedrock), set to true to normalize the embeddings. Default: false",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "performance_config_latency": {
                                              "type": "string",
                                              "description": "Force the client's performance configuration 'latency' for all requests. Leave empty to let the consumer select the performance configuration.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "cohere": {
                                        "nested_type": {
                                          "attributes": {
                                            "embedding_input_type": {
                                              "type": "string",
                                              "description": "The purpose of the input text to calculate embedding vectors. Default: \"classification\"; must be one of [\"classification\", \"clustering\", \"image\", \"search_document\", \"search_query\"]",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "embeddings_dimensions": {
                                        "type": "number",
                                        "description": "If using embeddings models, set the number of dimensions to generate.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "gemini": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_endpoint": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only).",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "location_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the location ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "project_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the project ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "huggingface": {
                                        "nested_type": {
                                          "attributes": {
                                            "use_cache": {
                                              "type": "bool",
                                              "description": "Use the cache layer on the inference API",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "input_cost": {
                                        "type": "number",
                                        "description": "Defines the cost per 1M tokens in your prompt.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "llama2_format": {
                                        "type": "string",
                                        "description": "If using llama2 provider, select the upstream message format. must be one of [\"ollama\", \"openai\", \"raw\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "max_tokens": {
                                        "type": "number",
                                        "description": "Defines the max_tokens, if using chat or completion models.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "mistral_format": {
                                        "type": "string",
                                        "description": "If using mistral provider, select the upstream message format. must be one of [\"ollama\", \"openai\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "output_cost": {
                                        "type": "number",
                                        "description": "Defines the cost per 1M tokens in the output of the AI.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "temperature": {
                                        "type": "number",
                                        "description": "Defines the matching temperature, if using chat or completion models.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "top_k": {
                                        "type": "number",
                                        "description": "Defines the top-k most likely tokens, if supported.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "top_p": {
                                        "type": "number",
                                        "description": "Defines the top-p probability mass, if supported.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "upstream_path": {
                                        "type": "string",
                                        "description": "Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "upstream_url": {
                                        "type": "string",
                                        "description": "Manually specify or override the full URL to the AI operation endpoints, when calling (self-)hosted models, or for running via a private endpoint.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Key/value settings for the model",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "provider": {
                                  "type": "string",
                                  "description": "AI provider request format - Kong translates requests to and from the specified backend compatible formats. must be one of [\"anthropic\", \"azure\", \"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"llama2\", \"mistral\", \"openai\"]",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          },
                          "route_type": {
                            "type": "string",
                            "description": "The model's operation implementation, for this provider. must be one of [\"audio/v1/audio/speech\", \"audio/v1/audio/transcriptions\", \"audio/v1/audio/translations\", \"image/v1/images/edits\", \"image/v1/images/generations\", \"llm/v1/assistants\", \"llm/v1/batches\", \"llm/v1/chat\", \"llm/v1/completions\", \"llm/v1/embeddings\", \"llm/v1/files\", \"llm/v1/responses\", \"preserve\", \"realtime/v1/realtime\"]",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    },
                    "max_request_body_size": {
                      "type": "number",
                      "description": "max allowed body size allowed to be introspected. 0 means unlimited, but the size of this body will still be limited by Nginx's client_max_body_size. Default: 8192",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "prompt": {
                      "type": "string",
                      "description": "Use this prompt to tune the LLM system/assistant message for the incoming proxy request (from the client), and what you are expecting in return.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "transformation_extract_pattern": {
                      "type": "string",
                      "description": "Defines the regular expression that must match to indicate a successful AI transformation at the request phase. The first match will be set as the outgoing body. If the AI service's response doesn't match this pattern, it is marked as a failure.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiRequestTransformer Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_response_transformer": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "http_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_timeout": {
                      "type": "number",
                      "description": "Timeout in milliseconds for the AI upstream service. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "https_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_verify": {
                      "type": "bool",
                      "description": "Verify the TLS certificate of the AI upstream service. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "llm": {
                      "nested_type": {
                        "attributes": {
                          "auth": {
                            "nested_type": {
                              "attributes": {
                                "allow_override": {
                                  "type": "bool",
                                  "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "aws_access_key_id": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "aws_secret_access_key": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_secret": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_tenant_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_use_managed_identity": {
                                  "type": "bool",
                                  "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "gcp_service_account_json": {
                                  "type": "string",
                                  "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "gcp_use_service_account": {
                                  "type": "bool",
                                  "description": "Use service account auth for GCP-based providers and models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "header_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "header_value": {
                                  "type": "string",
                                  "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_location": {
                                  "type": "string",
                                  "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of [\"body\", \"query\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "param_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via query parameter, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_value": {
                                  "type": "string",
                                  "description": "Specify the full parameter value for 'param_name'.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "logging": {
                            "nested_type": {
                              "attributes": {
                                "log_payloads": {
                                  "type": "bool",
                                  "description": "If enabled, will log the request and response body into the Kong log plugin(s) output. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "log_statistics": {
                                  "type": "bool",
                                  "description": "If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "model": {
                            "nested_type": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Model name to execute.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "options": {
                                  "nested_type": {
                                    "attributes": {
                                      "anthropic_version": {
                                        "type": "string",
                                        "description": "Defines the schema/API version, if using Anthropic provider.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "azure_api_version": {
                                        "type": "string",
                                        "description": "'api-version' for Azure OpenAI instances. Default: \"2023-05-15\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "azure_deployment_id": {
                                        "type": "string",
                                        "description": "Deployment ID for Azure OpenAI instances.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "azure_instance": {
                                        "type": "string",
                                        "description": "Instance name for Azure OpenAI hosted models.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "bedrock": {
                                        "nested_type": {
                                          "attributes": {
                                            "aws_assume_role_arn": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_region": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_role_session_name": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), set the identifier of the assumed role session.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_sts_endpoint_url": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "embeddings_normalize": {
                                              "type": "bool",
                                              "description": "If using AWS providers (Bedrock), set to true to normalize the embeddings. Default: false",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "performance_config_latency": {
                                              "type": "string",
                                              "description": "Force the client's performance configuration 'latency' for all requests. Leave empty to let the consumer select the performance configuration.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "cohere": {
                                        "nested_type": {
                                          "attributes": {
                                            "embedding_input_type": {
                                              "type": "string",
                                              "description": "The purpose of the input text to calculate embedding vectors. Default: \"classification\"; must be one of [\"classification\", \"clustering\", \"image\", \"search_document\", \"search_query\"]",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "embeddings_dimensions": {
                                        "type": "number",
                                        "description": "If using embeddings models, set the number of dimensions to generate.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "gemini": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_endpoint": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only).",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "location_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the location ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "project_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the project ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "huggingface": {
                                        "nested_type": {
                                          "attributes": {
                                            "use_cache": {
                                              "type": "bool",
                                              "description": "Use the cache layer on the inference API",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "input_cost": {
                                        "type": "number",
                                        "description": "Defines the cost per 1M tokens in your prompt.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "llama2_format": {
                                        "type": "string",
                                        "description": "If using llama2 provider, select the upstream message format. must be one of [\"ollama\", \"openai\", \"raw\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "max_tokens": {
                                        "type": "number",
                                        "description": "Defines the max_tokens, if using chat or completion models.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "mistral_format": {
                                        "type": "string",
                                        "description": "If using mistral provider, select the upstream message format. must be one of [\"ollama\", \"openai\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "output_cost": {
                                        "type": "number",
                                        "description": "Defines the cost per 1M tokens in the output of the AI.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "temperature": {
                                        "type": "number",
                                        "description": "Defines the matching temperature, if using chat or completion models.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "top_k": {
                                        "type": "number",
                                        "description": "Defines the top-k most likely tokens, if supported.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "top_p": {
                                        "type": "number",
                                        "description": "Defines the top-p probability mass, if supported.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "upstream_path": {
                                        "type": "string",
                                        "description": "Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "upstream_url": {
                                        "type": "string",
                                        "description": "Manually specify or override the full URL to the AI operation endpoints, when calling (self-)hosted models, or for running via a private endpoint.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Key/value settings for the model",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "provider": {
                                  "type": "string",
                                  "description": "AI provider request format - Kong translates requests to and from the specified backend compatible formats. must be one of [\"anthropic\", \"azure\", \"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"llama2\", \"mistral\", \"openai\"]",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          },
                          "route_type": {
                            "type": "string",
                            "description": "The model's operation implementation, for this provider. must be one of [\"audio/v1/audio/speech\", \"audio/v1/audio/transcriptions\", \"audio/v1/audio/translations\", \"image/v1/images/edits\", \"image/v1/images/generations\", \"llm/v1/assistants\", \"llm/v1/batches\", \"llm/v1/chat\", \"llm/v1/completions\", \"llm/v1/embeddings\", \"llm/v1/files\", \"llm/v1/responses\", \"preserve\", \"realtime/v1/realtime\"]",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    },
                    "max_request_body_size": {
                      "type": "number",
                      "description": "max allowed body size allowed to be introspected. 0 means unlimited, but the size of this body will still be limited by Nginx's client_max_body_size. Default: 8192",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "parse_llm_response_json_instructions": {
                      "type": "bool",
                      "description": "Set true to read specific response format from the LLM, and accordingly set the status code / body / headers that proxy back to the client. You need to engineer your LLM prompt to return the correct format, see plugin docs 'Overview' page for usage instructions. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "prompt": {
                      "type": "string",
                      "description": "Use this prompt to tune the LLM system/assistant message for the returning proxy response (from the upstream), adn what response format you are expecting.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "transformation_extract_pattern": {
                      "type": "string",
                      "description": "Defines the regular expression that must match to indicate a successful AI transformation at the response phase. The first match will be set as the returning body. If the AI service's response doesn't match this pattern, a failure is returned to the client.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiResponseTransformer Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_sanitizer": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymize": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of types to be anonymized",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "custom_patterns": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "regex": {
                            "type": "string",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "score": {
                            "type": "number",
                            "description": "Default: 0.5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of custom patterns to be used for anonymization",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "The host of the sanitizer. Default: \"localhost\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive_timeout": {
                      "type": "number",
                      "description": "The keepalive timeout for the established http connnection. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The port of the sanitizer. Default: 8080",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "recover_redacted": {
                      "type": "bool",
                      "description": "Whether to recover redacted data. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "redact_type": {
                      "type": "string",
                      "description": "What value to be used to redacted to. Default: \"placeholder\"; must be one of [\"placeholder\", \"synthetic\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "scheme": {
                      "type": "string",
                      "description": "The protocol can be http and https. Default: \"http\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "stop_on_error": {
                      "type": "bool",
                      "description": "Stop processing if an error occurs. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Connection timeout with the sanitizer. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiSanitizer Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_semantic_cache": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "cache_control": {
                      "type": "bool",
                      "description": "When enabled, respect the Cache-Control behaviors defined in RFC7234. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_ttl": {
                      "type": "number",
                      "description": "TTL in seconds of cache entities. Must be a value greater than 0. Default: 300",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "embeddings": {
                      "nested_type": {
                        "attributes": {
                          "auth": {
                            "nested_type": {
                              "attributes": {
                                "allow_override": {
                                  "type": "bool",
                                  "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "aws_access_key_id": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "aws_secret_access_key": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_secret": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_tenant_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_use_managed_identity": {
                                  "type": "bool",
                                  "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "gcp_service_account_json": {
                                  "type": "string",
                                  "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "gcp_use_service_account": {
                                  "type": "bool",
                                  "description": "Use service account auth for GCP-based providers and models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "header_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "header_value": {
                                  "type": "string",
                                  "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_location": {
                                  "type": "string",
                                  "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of [\"body\", \"query\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "param_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via query parameter, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_value": {
                                  "type": "string",
                                  "description": "Specify the full parameter value for 'param_name'.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "model": {
                            "nested_type": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Model name to execute.",
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "options": {
                                  "nested_type": {
                                    "attributes": {
                                      "azure": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_version": {
                                              "type": "string",
                                              "description": "'api-version' for Azure OpenAI instances. Default: \"2023-05-15\"",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "deployment_id": {
                                              "type": "string",
                                              "description": "Deployment ID for Azure OpenAI instances.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "instance": {
                                              "type": "string",
                                              "description": "Instance name for Azure OpenAI hosted models.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "required": true
                                      },
                                      "bedrock": {
                                        "nested_type": {
                                          "attributes": {
                                            "aws_assume_role_arn": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_region": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_role_session_name": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), set the identifier of the assumed role session.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_sts_endpoint_url": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "embeddings_normalize": {
                                              "type": "bool",
                                              "description": "If using AWS providers (Bedrock), set to true to normalize the embeddings. Default: false",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "performance_config_latency": {
                                              "type": "string",
                                              "description": "Force the client's performance configuration 'latency' for all requests. Leave empty to let the consumer select the performance configuration.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "gemini": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_endpoint": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only).",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "location_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the location ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "project_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the project ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "huggingface": {
                                        "nested_type": {
                                          "attributes": {
                                            "use_cache": {
                                              "type": "bool",
                                              "description": "Use the cache layer on the inference API",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "upstream_url": {
                                        "type": "string",
                                        "description": "upstream url for the embeddings",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Key/value settings for the model",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "provider": {
                                  "type": "string",
                                  "description": "AI provider format to use for embeddings API. must be one of [\"azure\", \"bedrock\", \"gemini\", \"huggingface\", \"mistral\", \"openai\"]",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    },
                    "exact_caching": {
                      "type": "bool",
                      "description": "When enabled, a first check for exact query will be done. It will impact DB size. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ignore_assistant_prompts": {
                      "type": "bool",
                      "description": "Ignore and discard any assistant prompts when Vectorizing the request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ignore_system_prompts": {
                      "type": "bool",
                      "description": "Ignore and discard any system prompts when Vectorizing the request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ignore_tool_prompts": {
                      "type": "bool",
                      "description": "Ignore and discard any tool prompts when Vectorizing the request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "llm_format": {
                      "type": "string",
                      "description": "LLM input and output format and schema to use. Default: \"openai\"; must be one of [\"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"openai\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "message_countback": {
                      "type": "number",
                      "description": "Number of messages in the chat history to Vectorize/Cache. Default: 1",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "stop_on_failure": {
                      "type": "bool",
                      "description": "Halt the LLM request process in case of a caching system failure. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "vectordb": {
                      "nested_type": {
                        "attributes": {
                          "dimensions": {
                            "type": "number",
                            "description": "the desired dimensionality for the vectors",
                            "description_kind": "plain",
                            "required": true
                          },
                          "distance_metric": {
                            "type": "string",
                            "description": "the distance metric to use for vector searches. must be one of [\"cosine\", \"euclidean\"]",
                            "description_kind": "plain",
                            "required": true
                          },
                          "pgvector": {
                            "nested_type": {
                              "attributes": {
                                "database": {
                                  "type": "string",
                                  "description": "the database of the pgvector database. Default: \"kong-pgvector\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "the host of the pgvector database. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "the password of the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "the port of the pgvector database. Default: 5432",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "whether to use ssl for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_cert": {
                                  "type": "string",
                                  "description": "the path of ssl cert to use for the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl_cert_key": {
                                  "type": "string",
                                  "description": "the path of ssl cert key to use for the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl_required": {
                                  "type": "bool",
                                  "description": "whether ssl is required for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "whether to verify ssl for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_version": {
                                  "type": "string",
                                  "description": "the ssl version to use for the pgvector database. Default: \"tlsv1_2\"; must be one of [\"any\", \"tlsv1_2\", \"tlsv1_3\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "timeout": {
                                  "type": "number",
                                  "description": "the timeout of the pgvector database. Default: 5000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "user": {
                                  "type": "string",
                                  "description": "the user of the pgvector database. Default: \"postgres\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "redis": {
                            "nested_type": {
                              "attributes": {
                                "cluster_max_redirections": {
                                  "type": "number",
                                  "description": "Maximum retry attempts for redirection. Default: 5",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "cluster_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "ip": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "connect_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "connection_is_proxied": {
                                  "type": "bool",
                                  "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "database": {
                                  "type": "number",
                                  "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "keepalive_backlog": {
                                  "type": "number",
                                  "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "keepalive_pool_size": {
                                  "type": "number",
                                  "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "read_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "send_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_master": {
                                  "type": "string",
                                  "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_password": {
                                  "type": "string",
                                  "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_role": {
                                  "type": "string",
                                  "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_username": {
                                  "type": "string",
                                  "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "server_name": {
                                  "type": "string",
                                  "description": "A string representing an SNI (server name indication) value for TLS.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "If set to true, uses SSL to connect to Redis. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "username": {
                                  "type": "string",
                                  "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "strategy": {
                            "type": "string",
                            "description": "which vector database driver to use. must be one of [\"pgvector\", \"redis\"]",
                            "description_kind": "plain",
                            "required": true
                          },
                          "threshold": {
                            "type": "number",
                            "description": "the default similarity threshold for accepting semantic search results (float)",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiSemanticCache Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ai_semantic_prompt_guard": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "embeddings": {
                      "nested_type": {
                        "attributes": {
                          "auth": {
                            "nested_type": {
                              "attributes": {
                                "allow_override": {
                                  "type": "bool",
                                  "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "aws_access_key_id": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "aws_secret_access_key": {
                                  "type": "string",
                                  "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_client_secret": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_tenant_id": {
                                  "type": "string",
                                  "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "azure_use_managed_identity": {
                                  "type": "bool",
                                  "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "gcp_service_account_json": {
                                  "type": "string",
                                  "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "gcp_use_service_account": {
                                  "type": "bool",
                                  "description": "Use service account auth for GCP-based providers and models. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "header_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "header_value": {
                                  "type": "string",
                                  "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_location": {
                                  "type": "string",
                                  "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of [\"body\", \"query\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "param_name": {
                                  "type": "string",
                                  "description": "If AI model requires authentication via query parameter, specify its name here.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "param_value": {
                                  "type": "string",
                                  "description": "Specify the full parameter value for 'param_name'.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "model": {
                            "nested_type": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "Model name to execute.",
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "options": {
                                  "nested_type": {
                                    "attributes": {
                                      "azure": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_version": {
                                              "type": "string",
                                              "description": "'api-version' for Azure OpenAI instances. Default: \"2023-05-15\"",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "deployment_id": {
                                              "type": "string",
                                              "description": "Deployment ID for Azure OpenAI instances.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "instance": {
                                              "type": "string",
                                              "description": "Instance name for Azure OpenAI hosted models.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "required": true
                                      },
                                      "bedrock": {
                                        "nested_type": {
                                          "attributes": {
                                            "aws_assume_role_arn": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_region": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_role_session_name": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), set the identifier of the assumed role session.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "aws_sts_endpoint_url": {
                                              "type": "string",
                                              "description": "If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "embeddings_normalize": {
                                              "type": "bool",
                                              "description": "If using AWS providers (Bedrock), set to true to normalize the embeddings. Default: false",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "performance_config_latency": {
                                              "type": "string",
                                              "description": "Force the client's performance configuration 'latency' for all requests. Leave empty to let the consumer select the performance configuration.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "gemini": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_endpoint": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only).",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "location_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the location ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "project_id": {
                                              "type": "string",
                                              "description": "If running Gemini on Vertex, specify the project ID.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "huggingface": {
                                        "nested_type": {
                                          "attributes": {
                                            "use_cache": {
                                              "type": "bool",
                                              "description": "Use the cache layer on the inference API",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "wait_for_model": {
                                              "type": "bool",
                                              "description": "Wait for the model if it is not ready",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "upstream_url": {
                                        "type": "string",
                                        "description": "upstream url for the embeddings",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Key/value settings for the model",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "provider": {
                                  "type": "string",
                                  "description": "AI provider format to use for embeddings API. must be one of [\"azure\", \"bedrock\", \"gemini\", \"huggingface\", \"mistral\", \"openai\"]",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    },
                    "genai_category": {
                      "type": "string",
                      "description": "Generative AI category of the request. Default: \"text/generation\"; must be one of [\"audio/speech\", \"audio/transcription\", \"image/generation\", \"realtime/generation\", \"text/embeddings\", \"text/generation\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "llm_format": {
                      "type": "string",
                      "description": "LLM input and output format and schema to use. Default: \"openai\"; must be one of [\"bedrock\", \"cohere\", \"gemini\", \"huggingface\", \"openai\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "rules": {
                      "nested_type": {
                        "attributes": {
                          "allow_prompts": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of prompts to allow.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "deny_prompts": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of prompts to deny.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "match_all_conversation_history": {
                            "type": "bool",
                            "description": "If false, will ignore all previous chat prompts from the conversation history. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "match_all_roles": {
                            "type": "bool",
                            "description": "If true, will match all roles in addition to 'user' role in conversation history. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_request_body_size": {
                            "type": "number",
                            "description": "max allowed body size allowed to be introspected. 0 means unlimited, but the size of this body will still be limited by Nginx's client_max_body_size. Default: 8192",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "search": {
                      "nested_type": {
                        "attributes": {
                          "threshold": {
                            "type": "number",
                            "description": "Threshold for the similarity score to be considered a match. Default: 0.5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "vectordb": {
                      "nested_type": {
                        "attributes": {
                          "dimensions": {
                            "type": "number",
                            "description": "the desired dimensionality for the vectors",
                            "description_kind": "plain",
                            "required": true
                          },
                          "distance_metric": {
                            "type": "string",
                            "description": "the distance metric to use for vector searches. must be one of [\"cosine\", \"euclidean\"]",
                            "description_kind": "plain",
                            "required": true
                          },
                          "pgvector": {
                            "nested_type": {
                              "attributes": {
                                "database": {
                                  "type": "string",
                                  "description": "the database of the pgvector database. Default: \"kong-pgvector\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "the host of the pgvector database. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "the password of the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "the port of the pgvector database. Default: 5432",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "whether to use ssl for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_cert": {
                                  "type": "string",
                                  "description": "the path of ssl cert to use for the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl_cert_key": {
                                  "type": "string",
                                  "description": "the path of ssl cert key to use for the pgvector database",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl_required": {
                                  "type": "bool",
                                  "description": "whether ssl is required for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "whether to verify ssl for the pgvector database. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_version": {
                                  "type": "string",
                                  "description": "the ssl version to use for the pgvector database. Default: \"tlsv1_2\"; must be one of [\"any\", \"tlsv1_2\", \"tlsv1_3\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "timeout": {
                                  "type": "number",
                                  "description": "the timeout of the pgvector database. Default: 5000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "user": {
                                  "type": "string",
                                  "description": "the user of the pgvector database. Default: \"postgres\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "redis": {
                            "nested_type": {
                              "attributes": {
                                "cluster_max_redirections": {
                                  "type": "number",
                                  "description": "Maximum retry attempts for redirection. Default: 5",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "cluster_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "ip": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "connect_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "connection_is_proxied": {
                                  "type": "bool",
                                  "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "database": {
                                  "type": "number",
                                  "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "keepalive_backlog": {
                                  "type": "number",
                                  "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "keepalive_pool_size": {
                                  "type": "number",
                                  "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "read_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "send_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_master": {
                                  "type": "string",
                                  "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_password": {
                                  "type": "string",
                                  "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_role": {
                                  "type": "string",
                                  "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_username": {
                                  "type": "string",
                                  "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "server_name": {
                                  "type": "string",
                                  "description": "A string representing an SNI (server name indication) value for TLS.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "If set to true, uses SSL to connect to Redis. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "username": {
                                  "type": "string",
                                  "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "strategy": {
                            "type": "string",
                            "description": "which vector database driver to use. must be one of [\"pgvector\", \"redis\"]",
                            "description_kind": "plain",
                            "required": true
                          },
                          "threshold": {
                            "type": "number",
                            "description": "the default similarity threshold for accepting semantic search results (float)",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAiSemanticPromptGuard Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_aws_lambda": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "aws_assume_role_arn": {
                      "type": "string",
                      "description": "The target AWS IAM role ARN used to invoke the Lambda function.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "aws_imds_protocol_version": {
                      "type": "string",
                      "description": "Identifier to select the IMDS protocol version to use: `v1` or `v2`. Default: \"v1\"; must be one of [\"v1\", \"v2\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "aws_key": {
                      "type": "string",
                      "description": "The AWS key credential to be used when invoking the function.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "aws_region": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "aws_role_session_name": {
                      "type": "string",
                      "description": "The identifier of the assumed role session. Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "aws_secret": {
                      "type": "string",
                      "description": "The AWS secret credential to be used when invoking the function.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "aws_sts_endpoint_url": {
                      "type": "string",
                      "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "awsgateway_compatible": {
                      "type": "bool",
                      "description": "An optional value that defines whether the plugin should wrap requests into the Amazon API gateway. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "base64_encode_body": {
                      "type": "bool",
                      "description": "An optional value that Base64-encodes the request body. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "disable_https": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "empty_arrays_mode": {
                      "type": "string",
                      "description": "An optional value that defines whether Kong should send empty arrays (returned by Lambda function) as `[]` arrays or `{}` objects in JSON responses. The value `legacy` means Kong will send empty arrays as `{}` objects in response. Default: \"legacy\"; must be one of [\"correct\", \"legacy\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_request_body": {
                      "type": "bool",
                      "description": "An optional value that defines whether the request body is sent in the request_body field of the JSON-encoded request. If the body arguments can be parsed, they are sent in the separate request_body_args field of the request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_request_headers": {
                      "type": "bool",
                      "description": "An optional value that defines whether the original HTTP request headers are sent as a map in the request_headers field of the JSON-encoded request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_request_method": {
                      "type": "bool",
                      "description": "An optional value that defines whether the original HTTP request method verb is sent in the request_method field of the JSON-encoded request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_request_uri": {
                      "type": "bool",
                      "description": "An optional value that defines whether the original HTTP request URI is sent in the request_uri field of the JSON-encoded request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "function_name": {
                      "type": "string",
                      "description": "The AWS Lambda function to invoke. Both function name and function ARN (including partial) are supported.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "invocation_type": {
                      "type": "string",
                      "description": "The InvocationType to use when invoking the function. Available types are RequestResponse, Event, DryRun. Default: \"RequestResponse\"; must be one of [\"DryRun\", \"Event\", \"RequestResponse\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "is_proxy_integration": {
                      "type": "bool",
                      "description": "An optional value that defines whether the response format to receive from the Lambda to this format. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "An optional value in milliseconds that defines how long an idle connection lives before being closed. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "log_type": {
                      "type": "string",
                      "description": "The LogType to use when invoking the function. By default, None and Tail are supported. Default: \"Tail\"; must be one of [\"None\", \"Tail\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 443",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "proxy_url": {
                      "type": "string",
                      "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "qualifier": {
                      "type": "string",
                      "description": "The qualifier to use when invoking the function.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "skip_large_bodies": {
                      "type": "bool",
                      "description": "An optional value that defines whether Kong should send large bodies that are buffered to disk. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "An optional timeout in milliseconds when invoking the function. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "unhandled_status": {
                      "type": "number",
                      "description": "The response status code to use (instead of the default 200, 202, or 204) in the case of an Unhandled Function Error.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAwsLambda Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_azure_functions": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "apikey": {
                      "type": "string",
                      "description": "The apikey to access the Azure resources. If provided, it is injected as the `x-functions-key` header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "appname": {
                      "type": "string",
                      "description": "The Azure app name.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "clientid": {
                      "type": "string",
                      "description": "The `clientid` to access the Azure resources. If provided, it is injected as the `x-functions-clientid` header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "functionname": {
                      "type": "string",
                      "description": "Name of the Azure function to invoke.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "hostdomain": {
                      "type": "string",
                      "description": "The domain where the function resides. Default: \"azurewebsites.net\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "https": {
                      "type": "bool",
                      "description": "Use of HTTPS to connect with the Azure Functions server. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "https_verify": {
                      "type": "bool",
                      "description": "Set to `true` to authenticate the Azure Functions server. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "Time in milliseconds during which an idle connection to the Azure Functions server lives before being closed. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "routeprefix": {
                      "type": "string",
                      "description": "Route prefix to use. Default: \"api\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Timeout in milliseconds before closing a connection to the Azure Functions server. Default: 600000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginAzureFunctions Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_basic_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (Consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), the request will fail with an authentication failure `4xx`. Please note that this value must refer to the Consumer `id` or `username` attribute, and **not** its `custom_id`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_credentials": {
                      "type": "bool",
                      "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If `true`, the plugin will strip the credential from the request (i.e. the `Authorization` header) before proxying it. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "realm": {
                      "type": "string",
                      "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value. Default: \"service\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginBasicAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_bot_detection": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "An array of regular expressions that should be allowed. The regular expressions will be checked against the `User-Agent` header.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "deny": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "An array of regular expressions that should be denied. The regular expressions will be checked against the `User-Agent` header.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginBotDetection Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_canary": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "canary_by_header_name": {
                      "type": "string",
                      "description": "A string representing an HTTP header name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "duration": {
                      "type": "number",
                      "description": "The duration of the canary release in seconds. Default: 3600",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "groups": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The groups allowed to access the canary release.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hash": {
                      "type": "string",
                      "description": "Hash algorithm to be used for canary release.\n\n* `consumer`: The hash will be based on the consumer.\n* `ip`: The hash will be based on the client IP address.\n* `none`: No hash will be applied.\n* `allow`: Allows the specified groups to access the canary release.\n* `deny`: Denies the specified groups from accessing the canary release.\n* `header`: The hash will be based on the specified header value.\nDefault: \"consumer\"; must be one of [\"allow\", \"consumer\", \"deny\", \"header\", \"ip\", \"none\"]",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "hash_header": {
                      "type": "string",
                      "description": "A string representing an HTTP header name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "percentage": {
                      "type": "number",
                      "description": "The percentage of traffic to be routed to the canary release.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "start": {
                      "type": "number",
                      "description": "Future time in seconds since epoch, when the canary release will start. Ignored when `percentage` is set, or when using `allow` or `deny` in `hash`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "steps": {
                      "type": "number",
                      "description": "The number of steps for the canary release. Default: 1000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "upstream_fallback": {
                      "type": "bool",
                      "description": "Specifies whether to fallback to the upstream server if the canary release fails. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "upstream_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_uri": {
                      "type": "string",
                      "description": "The URI of the upstream server to be used for the canary release.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginCanary Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_confluent": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allowed_topics": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The list of allowed topic names to which messages can be sent. The default topic configured in the `topic` field is always allowed, regardless of its inclusion in `allowed_topics`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "bootstrap_servers": {
                      "nested_type": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Set of bootstrap brokers in a `{host: host, port: port}` list format.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cluster_api_key": {
                      "type": "string",
                      "description": "Username/Apikey for SASL authentication.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cluster_api_secret": {
                      "type": "string",
                      "description": "Password/ApiSecret for SASL authentication.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cluster_name": {
                      "type": "string",
                      "description": "An identifier for the Kafka cluster. By default, this field generates a random string. You can also set your own custom cluster identifier.  If more than one Kafka plugin is configured without a `cluster_name` (that is, if the default autogenerated value is removed), these plugins will use the same producer, and by extension, the same cluster. Logs will be sent to the leader of the cluster.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "confluent_cloud_api_key": {
                      "type": "string",
                      "description": "Apikey for authentication with Confluent Cloud. This allows for management tasks such as creating topics, ACLs, etc.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "confluent_cloud_api_secret": {
                      "type": "string",
                      "description": "The corresponding secret for the Confluent Cloud API key.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "forward_body": {
                      "type": "bool",
                      "description": "Include the request body in the message. At least one of these must be true: `forward_method`, `forward_uri`, `forward_headers`, `forward_body`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_headers": {
                      "type": "bool",
                      "description": "Include the request headers in the message. At least one of these must be true: `forward_method`, `forward_uri`, `forward_headers`, `forward_body`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_method": {
                      "type": "bool",
                      "description": "Include the request method in the message. At least one of these must be true: `forward_method`, `forward_uri`, `forward_headers`, `forward_body`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_uri": {
                      "type": "bool",
                      "description": "Include the request URI and URI arguments (as in, query arguments) in the message. At least one of these must be true: `forward_method`, `forward_uri`, `forward_headers`, `forward_body`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "Keepalive timeout in milliseconds. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive_enabled": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_query_arg": {
                      "type": "string",
                      "description": "The request query parameter name that contains the Kafka message key. If specified, messages with the same key will be sent to the same Kafka partition, ensuring consistent ordering.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "message_by_lua_functions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The Lua functions that manipulates the message being sent to the Kafka topic.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "producer_async": {
                      "type": "bool",
                      "description": "Flag to enable asynchronous mode. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_async_buffering_limits_messages_in_memory": {
                      "type": "number",
                      "description": "Maximum number of messages that can be buffered in memory in asynchronous mode. Default: 50000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_async_flush_timeout": {
                      "type": "number",
                      "description": "Maximum time interval in milliseconds between buffer flushes in asynchronous mode. Default: 1000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_acks": {
                      "type": "number",
                      "description": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments; 1 for only the leader; and -1 for the full ISR (In-Sync Replica set). Default: 1; must be one of [\"-1\", \"0\", \"1\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_limits_bytes_per_request": {
                      "type": "number",
                      "description": "Maximum size of a Produce request in bytes. Default: 1048576",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_limits_messages_per_request": {
                      "type": "number",
                      "description": "Maximum number of messages to include into a single producer request. Default: 200",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_retries_backoff_timeout": {
                      "type": "number",
                      "description": "Backoff interval between retry attempts in milliseconds. Default: 100",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_retries_max_attempts": {
                      "type": "number",
                      "description": "Maximum number of retry attempts per single Produce request. Default: 10",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_timeout": {
                      "type": "number",
                      "description": "Time to wait for a Produce response in milliseconds. Default: 2000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "schema_registry": {
                      "nested_type": {
                        "attributes": {
                          "confluent": {
                            "nested_type": {
                              "attributes": {
                                "authentication": {
                                  "nested_type": {
                                    "attributes": {
                                      "basic": {
                                        "nested_type": {
                                          "attributes": {
                                            "password": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            },
                                            "username": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "mode": {
                                        "type": "string",
                                        "description": "Authentication mode to use with the schema registry. Default: \"none\"; must be one of [\"basic\", \"none\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "key_schema": {
                                  "nested_type": {
                                    "attributes": {
                                      "schema_version": {
                                        "type": "string",
                                        "description": "The schema version to use for serialization/deserialization. Use 'latest' to always fetch the most recent version.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "subject_name": {
                                        "type": "string",
                                        "description": "The name of the subject",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "Set to false to disable SSL certificate verification when connecting to the schema registry. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ttl": {
                                  "type": "number",
                                  "description": "The TTL in seconds for the schema registry cache.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the schema registry.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "value_schema": {
                                  "nested_type": {
                                    "attributes": {
                                      "schema_version": {
                                        "type": "string",
                                        "description": "The schema version to use for serialization/deserialization. Use 'latest' to always fetch the most recent version.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "subject_name": {
                                        "type": "string",
                                        "description": "The name of the subject",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The plugin-global schema registry configuration. This can be overwritten by the topic configuration.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Socket timeout in milliseconds. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "topic": {
                      "type": "string",
                      "description": "The default Kafka topic to publish to if the query parameter defined in the `topics_query_arg` does not exist in the request",
                      "description_kind": "plain",
                      "required": true
                    },
                    "topics_query_arg": {
                      "type": "string",
                      "description": "The request query parameter name that contains the topics to publish to",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginConfluent Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_confluent_consume": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "auto_offset_reset": {
                      "type": "string",
                      "description": "The offset to start from when there is no initial offset in the consumer group. Default: \"latest\"; must be one of [\"earliest\", \"latest\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "bootstrap_servers": {
                      "nested_type": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Set of bootstrap brokers in a `{host: host, port: port}` list format.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cluster_api_key": {
                      "type": "string",
                      "description": "Username/Apikey for SASL authentication.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cluster_api_secret": {
                      "type": "string",
                      "description": "Password/ApiSecret for SASL authentication.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cluster_name": {
                      "type": "string",
                      "description": "An identifier for the Kafka cluster. By default, this field generates a random string. You can also set your own custom cluster identifier.  If more than one Kafka plugin is configured without a `cluster_name` (that is, if the default autogenerated value is removed), these plugins will use the same producer, and by extension, the same cluster. Logs will be sent to the leader of the cluster.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "commit_strategy": {
                      "type": "string",
                      "description": "The strategy to use for committing offsets. Default: \"auto\"; must be one of [\"auto\", \"off\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "confluent_cloud_api_key": {
                      "type": "string",
                      "description": "Apikey for authentication with Confluent Cloud. This allows for management tasks such as creating topics, ACLs, etc.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "confluent_cloud_api_secret": {
                      "type": "string",
                      "description": "The corresponding secret for the Confluent Cloud API key.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "Keepalive timeout in milliseconds. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive_enabled": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "message_deserializer": {
                      "type": "string",
                      "description": "The deserializer to use for the consumed messages. Default: \"noop\"; must be one of [\"json\", \"noop\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode of operation for the plugin. Default: \"http-get\"; must be one of [\"http-get\", \"server-sent-events\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "schema_registry": {
                      "nested_type": {
                        "attributes": {
                          "confluent": {
                            "nested_type": {
                              "attributes": {
                                "authentication": {
                                  "nested_type": {
                                    "attributes": {
                                      "basic": {
                                        "nested_type": {
                                          "attributes": {
                                            "password": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            },
                                            "username": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "mode": {
                                        "type": "string",
                                        "description": "Authentication mode to use with the schema registry. Default: \"none\"; must be one of [\"basic\", \"none\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "Set to false to disable SSL certificate verification when connecting to the schema registry. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ttl": {
                                  "type": "number",
                                  "description": "The TTL in seconds for the schema registry cache.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the schema registry.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The plugin-global schema registry configuration.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Socket timeout in milliseconds. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "topics": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "schema_registry": {
                            "nested_type": {
                              "attributes": {
                                "confluent": {
                                  "nested_type": {
                                    "attributes": {
                                      "authentication": {
                                        "nested_type": {
                                          "attributes": {
                                            "basic": {
                                              "nested_type": {
                                                "attributes": {
                                                  "password": {
                                                    "type": "string",
                                                    "description": "Not Null",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "username": {
                                                    "type": "string",
                                                    "description": "Not Null",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                },
                                                "nesting_mode": "single"
                                              },
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "mode": {
                                              "type": "string",
                                              "description": "Authentication mode to use with the schema registry. Default: \"none\"; must be one of [\"basic\", \"none\"]",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description": "Not Null",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "ssl_verify": {
                                        "type": "bool",
                                        "description": "Set to false to disable SSL certificate verification when connecting to the schema registry. Default: true",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "ttl": {
                                        "type": "number",
                                        "description": "The TTL in seconds for the schema registry cache.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "The URL of the schema registry.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "The plugin-global schema registry configuration. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "The Kafka topics and their configuration you want to consume from.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginConfluentConsume Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_correlation_id": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "echo_downstream": {
                      "type": "bool",
                      "description": "Whether to echo the header back to downstream (the client). Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "generator": {
                      "type": "string",
                      "description": "The generator to use for the correlation ID. Accepted values are `uuid`, `uuid#counter`, and `tracker`. See [Generators](#generators). Default: \"uuid#counter\"; must be one of [\"tracker\", \"uuid\", \"uuid#counter\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_name": {
                      "type": "string",
                      "description": "The HTTP header name to use for the correlation ID. Default: \"Kong-Request-ID\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginCorrelationID Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_cors": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_origin_absent": {
                      "type": "bool",
                      "description": "A boolean value that skip cors response headers when origin header of request is empty. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "credentials": {
                      "type": "bool",
                      "description": "Flag to determine whether the `Access-Control-Allow-Credentials` header should be sent with `true` as the value. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "exposed_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Value for the `Access-Control-Expose-Headers` header. If not specified, no custom headers are exposed.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Value for the `Access-Control-Allow-Headers` header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_age": {
                      "type": "number",
                      "description": "Indicates how long the results of the preflight request can be cached, in `seconds`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "methods": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "'Value for the `Access-Control-Allow-Methods` header. Available options include `GET`, `HEAD`, `PUT`, `PATCH`, `POST`, `DELETE`, `OPTIONS`, `TRACE`, `CONNECT`. By default, all options are allowed.'",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "origins": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of allowed domains for the `Access-Control-Allow-Origin` header. If you want to allow all origins, add `*` as a single value to this configuration field. The accepted values can either be flat strings or PCRE regexes.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "preflight_continue": {
                      "type": "bool",
                      "description": "A boolean value that instructs the plugin to proxy the `OPTIONS` preflight request to the Upstream service. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "private_network": {
                      "type": "bool",
                      "description": "Flag to determine whether the `Access-Control-Allow-Private-Network` header should be sent with `true` as the value. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginCors Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_datadog": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "consumer_tag": {
                      "type": "string",
                      "description": "String to be attached as tag of the consumer. Default: \"consumer\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "flush_timeout": {
                      "type": "number",
                      "description": "Optional time in seconds. If `queue_size` > 1, this is the max idle time before sending a log with less than `queue_size` records.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com. Default: \"localhost\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "metrics": {
                      "nested_type": {
                        "attributes": {
                          "consumer_identifier": {
                            "type": "string",
                            "description": "Authenticated user detail. must be one of [\"consumer_id\", \"custom_id\", \"username\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Datadog metric\u2019s name. Not Null; must be one of [\"kong_latency\", \"latency\", \"request_count\", \"request_size\", \"response_size\", \"upstream_latency\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sample_rate": {
                            "type": "number",
                            "description": "Sampling rate",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "stat_type": {
                            "type": "string",
                            "description": "Determines what sort of event the metric represents. Not Null; must be one of [\"counter\", \"distribution\", \"gauge\", \"histogram\", \"meter\", \"set\", \"timer\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "tags": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of tags",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of metrics to be logged.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 8125",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "prefix": {
                      "type": "string",
                      "description": "String to be attached as a prefix to a metric's name. Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "queue": {
                      "nested_type": {
                        "attributes": {
                          "concurrency_limit": {
                            "type": "number",
                            "description": "The number of of queue delivery timers. -1 indicates unlimited. Default: 1; must be one of [\"-1\", \"1\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "initial_retry_delay": {
                            "type": "number",
                            "description": "Time in seconds before the initial retry is made for a failing batch. Default: 0.01",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_batch_size": {
                            "type": "number",
                            "description": "Maximum number of entries that can be processed at a time. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_bytes": {
                            "type": "number",
                            "description": "Maximum number of bytes that can be waiting on a queue, requires string content.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "max_coalescing_delay": {
                            "type": "number",
                            "description": "Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_entries": {
                            "type": "number",
                            "description": "Maximum number of entries that can be waiting on the queue. Default: 10000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_delay": {
                            "type": "number",
                            "description": "Maximum time in seconds between retries, caps exponential backoff. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_time": {
                            "type": "number",
                            "description": "Time in seconds before the queue gives up calling a failed handler for a batch. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "queue_size": {
                      "type": "number",
                      "description": "Maximum number of log entries to be sent on each message to the upstream server.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "retry_count": {
                      "type": "number",
                      "description": "Number of times to retry when sending data to the upstream server.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_name_tag": {
                      "type": "string",
                      "description": "String to be attached as the name of the service. Default: \"name\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "status_tag": {
                      "type": "string",
                      "description": "String to be attached as the tag of the HTTP status. Default: \"status\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginDatadog Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_datadog_tracing": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "batch_flush_delay": {
                      "type": "number",
                      "description": "Default: 3",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "batch_span_count": {
                      "type": "number",
                      "description": "Default: 200",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "connect_timeout": {
                      "type": "number",
                      "description": "Default: 1000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "endpoint": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "environment": {
                      "type": "string",
                      "description": "Default: \"none\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "read_timeout": {
                      "type": "number",
                      "description": "Default: 5000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "send_timeout": {
                      "type": "number",
                      "description": "Default: 5000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "service_name": {
                      "type": "string",
                      "description": "Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginDatadogTracing Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_datakit": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "debug": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "nodes": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "A label that uniquely identifies the node within the plugin configuration so that it can be used for input/output connections. Must be valid `snake_case` or `kebab-case`. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Not Null; must be one of [\"call\", \"exit\", \"jq\", \"property\", \"static\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginDatakit Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_degraphql": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "graphql_server_path": {
                      "type": "string",
                      "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes). Default: \"/graphql\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginDegraphql Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_exit_transformer": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "functions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "required": true
                    },
                    "handle_unexpected": {
                      "type": "bool",
                      "description": "Determines whether to handle unexpected errors by transforming their responses. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "handle_unknown": {
                      "type": "bool",
                      "description": "Determines whether to handle unknown status codes by transforming their responses. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginExitTransformer Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_file_log": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "custom_fields_by_lua": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Lua code as a key-value map",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "path": {
                      "type": "string",
                      "description": "The file path of the output log file. The plugin creates the log file if it doesn't exist yet.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "reopen": {
                      "type": "bool",
                      "description": "Determines whether the log file is closed and reopened on every request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginFileLog Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_forward_proxy": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "auth_password": {
                      "type": "string",
                      "description": "The password to authenticate with, if the forward proxy is protected\nby basic authentication.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "auth_username": {
                      "type": "string",
                      "description": "The username to authenticate with, if the forward proxy is protected\nby basic authentication.",
                      "description_kind": "markdown",
                      "optional": true
                    },
                    "http_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_verify": {
                      "type": "bool",
                      "description": "Whether the server certificate will be verified according to the CA certificates specified in lua_ssl_trusted_certificate. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "proxy_scheme": {
                      "type": "string",
                      "description": "The proxy scheme to use when connecting. Only `http` is supported. Default: \"http\"; must be \"http\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "x_headers": {
                      "type": "string",
                      "description": "Determines how to handle headers when forwarding the request. Default: \"append\"; must be one of [\"append\", \"delete\", \"transparent\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginForwardProxy Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_graphql_proxy_cache_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "bypass_on_err": {
                      "type": "bool",
                      "description": "Unhandled errors while trying to retrieve a cache entry (such as redis down) are resolved with `Bypass`, with the request going upstream. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_ttl": {
                      "type": "number",
                      "description": "TTL in seconds of cache entities. Must be a value greater than 0. Default: 300",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "memory": {
                      "nested_type": {
                        "attributes": {
                          "dictionary_name": {
                            "type": "string",
                            "description": "The name of the shared dictionary in which to hold cache entities when the memory strategy is selected. This dictionary currently must be defined manually in the Kong Nginx template. Default: \"kong_db_cache\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The backing data store in which to hold cached entities. Accepted value is `memory`. Default: \"memory\"; must be one of [\"memory\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "vary_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Relevant headers considered for the cache key. If undefined, none of the headers are taken into consideration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginGraphqlProxyCacheAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_graphql_rate_limiting_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "cost_strategy": {
                      "type": "string",
                      "description": "Strategy to use to evaluate query costs. Either `default` or `node_quantifier`. Default: \"default\"; must be one of [\"default\", \"node_quantifier\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "dictionary_name": {
                      "type": "string",
                      "description": "The shared dictionary where counters will be stored until the next sync cycle. Default: \"kong_rate_limiting_counters\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hide_client_headers": {
                      "type": "bool",
                      "description": "Optionally hide informative response headers. Available options: `true` or `false`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "identifier": {
                      "type": "string",
                      "description": "How to define the rate limit key. Can be `ip`, `credential`, `consumer`. Default: \"consumer\"; must be one of [\"consumer\", \"credential\", \"ip\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "limit": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "One or more requests-per-window limits to apply.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "max_cost": {
                      "type": "number",
                      "description": "A defined maximum cost per query. 0 means unlimited. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The rate limiting namespace to use for this plugin instance. This namespace is used to share rate limiting counters across different instances. If it is not provided, a random UUID is generated. NOTE: For the plugin instances sharing the same namespace, all the configurations that are required for synchronizing counters, e.g. `strategy`, `redis`, `sync_rate`, `window_size`, `dictionary_name`, need to be the same.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "pass_all_downstream_headers": {
                      "type": "bool",
                      "description": "pass all downstream headers to the upstream graphql server in introspection request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "score_factor": {
                      "type": "number",
                      "description": "A scoring factor to multiply (or divide) the cost. The `score_factor` must always be greater than 0. Default: 1",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The rate-limiting strategy to use for retrieving and incrementing the limits. Default: \"cluster\"; must be one of [\"cluster\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "sync_rate": {
                      "type": "number",
                      "description": "How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 syncs the counters in that many number of seconds.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "window_size": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "One or more window sizes to apply a limit to (defined in seconds).",
                      "description_kind": "plain",
                      "required": true
                    },
                    "window_type": {
                      "type": "string",
                      "description": "Sets the time window to either `sliding` or `fixed`. Default: \"sliding\"; must be one of [\"fixed\", \"sliding\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginGraphqlRateLimitingAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_grpc_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "proto": {
                      "type": "string",
                      "description": "Describes the gRPC types and methods.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginGrpcGateway Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_grpc_web": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_origin_header": {
                      "type": "string",
                      "description": "The value of the `Access-Control-Allow-Origin` header in the response to the gRPC-Web client. Default: \"*\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "pass_stripped_path": {
                      "type": "bool",
                      "description": "If set to `true` causes the plugin to pass the stripped request path to the upstream gRPC service.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "proto": {
                      "type": "string",
                      "description": "If present, describes the gRPC types and methods. Required to support payload transcoding. When absent, the web client must use application/grpw-web+proto content.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginGrpcWeb Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_header_cert_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_partial_chain": {
                      "type": "bool",
                      "description": "Allow certificate verification with only an intermediate certificate. When this is enabled, you don't need to upload the full chain to Kong Certificates. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), the request fails with an authentication failure `4xx`. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authenticated_group_by": {
                      "type": "string",
                      "description": "Certificate property to use as the authenticated group. Valid values are `CN` (Common Name) or `DN` (Distinguished Name). Once `skip_consumer_lookup` is applied, any client with a valid certificate can access the Service/API. To restrict usage to only some of the authenticated users, also add the ACL plugin (not covered here) and create allowed or denied groups of users. Default: \"CN\"; must be one of [\"CN\", \"DN\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ca_certificates": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of CA Certificates strings to use as Certificate Authorities (CA) when validating a client certificate. At least one is required but you can specify as many as needed. The value of this array is comprised of primary keys (`id`).",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cache_ttl": {
                      "type": "number",
                      "description": "Cache expiry time in seconds. Default: 60",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cert_cache_ttl": {
                      "type": "number",
                      "description": "The length of time in milliseconds between refreshes of the revocation check status cache. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "certificate_header_format": {
                      "type": "string",
                      "description": "Format of the certificate header. Supported formats: `base64_encoded`, `url_encoded`. must be one of [\"base64_encoded\", \"url_encoded\"]",
                      "description_kind": "plain",
                      "required": true
                    },
                    "certificate_header_name": {
                      "type": "string",
                      "description": "Name of the header that contains the certificate, received from the WAF or other L7 downstream proxy.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "consumer_by": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Whether to match the subject name of the client-supplied certificate against consumer's `username` and/or `custom_id` attribute. If set to `[]` (the empty array), then auto-matching is disabled.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "default_consumer": {
                      "type": "string",
                      "description": "The UUID or username of the consumer to use when a trusted client certificate is presented but no consumer matches. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_timeout": {
                      "type": "number",
                      "description": "HTTP timeout threshold in milliseconds when communicating with the OCSP server or downloading CRL. Default: 30000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "https_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "revocation_check_mode": {
                      "type": "string",
                      "description": "Controls client certificate revocation check behavior. If set to `SKIP`, no revocation check is performed. If set to `IGNORE_CA_ERROR`, the plugin respects the revocation status when either OCSP or CRL URL is set, and doesn't fail on network issues. If set to `STRICT`, the plugin only treats the certificate as valid when it's able to verify the revocation status. Default: \"IGNORE_CA_ERROR\"; must be one of [\"IGNORE_CA_ERROR\", \"SKIP\", \"STRICT\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "secure_source": {
                      "type": "bool",
                      "description": "Whether to secure the source of the request. If set to `true`, the plugin will only allow requests from trusted IPs (configured by the `trusted_ips` config option). Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "skip_consumer_lookup": {
                      "type": "bool",
                      "description": "Skip consumer lookup once certificate is trusted against the configured CA list. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginHeaderCertAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_hmac_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "algorithms": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of HMAC digest algorithms that the user wants to support. Allowed values are `hmac-sha1`, `hmac-sha256`, `hmac-sha384`, and `hmac-sha512`",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (Consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "clock_skew": {
                      "type": "number",
                      "description": "Clock skew in seconds to prevent replay attacks. Default: 300",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "enforce_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of headers that the client should at least use for HTTP signature creation.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hide_credentials": {
                      "type": "bool",
                      "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "realm": {
                      "type": "string",
                      "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "validate_request_body": {
                      "type": "bool",
                      "description": "A boolean value telling the plugin to enable body validation. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginHmacAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_http_log": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "content_type": {
                      "type": "string",
                      "description": "Indicates the type of data sent. The only available option is `application/json`. Default: \"application/json\"; must be one of [\"application/json\", \"application/json; charset=utf-8\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "custom_fields_by_lua": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Lua code as a key-value map",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "flush_timeout": {
                      "type": "number",
                      "description": "Optional time in seconds. If `queue_size` > 1, this is the max idle time before sending a log with less than `queue_size` records.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "headers": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "An optional table of headers included in the HTTP message to the upstream server. Values are indexed by header name, and each header name accepts a single string.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_endpoint": {
                      "type": "string",
                      "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "An optional value in milliseconds that defines how long an idle connection will live before being closed. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "method": {
                      "type": "string",
                      "description": "An optional method used to send data to the HTTP server. Supported values are `POST` (default), `PUT`, and `PATCH`. Default: \"POST\"; must be one of [\"PATCH\", \"POST\", \"PUT\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "queue": {
                      "nested_type": {
                        "attributes": {
                          "concurrency_limit": {
                            "type": "number",
                            "description": "The number of of queue delivery timers. -1 indicates unlimited. Default: 1; must be one of [\"-1\", \"1\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "initial_retry_delay": {
                            "type": "number",
                            "description": "Time in seconds before the initial retry is made for a failing batch. Default: 0.01",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_batch_size": {
                            "type": "number",
                            "description": "Maximum number of entries that can be processed at a time. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_bytes": {
                            "type": "number",
                            "description": "Maximum number of bytes that can be waiting on a queue, requires string content.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "max_coalescing_delay": {
                            "type": "number",
                            "description": "Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_entries": {
                            "type": "number",
                            "description": "Maximum number of entries that can be waiting on the queue. Default: 10000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_delay": {
                            "type": "number",
                            "description": "Maximum time in seconds between retries, caps exponential backoff. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_time": {
                            "type": "number",
                            "description": "Time in seconds before the queue gives up calling a failed handler for a batch. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "queue_size": {
                      "type": "number",
                      "description": "Maximum number of log entries to be sent on each message to the upstream server.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "retry_count": {
                      "type": "number",
                      "description": "Number of times to retry when sending data to the upstream server.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "An optional timeout in milliseconds when sending data to the upstream server. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginHTTPLog Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_injection_protection": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "custom_injections": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "A unique name for this injection. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "regex": {
                            "type": "string",
                            "description": "The regex to match against. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Custom regexes to check for.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "enforcement_mode": {
                      "type": "string",
                      "description": "Enforcement mode of the security policy. Default: \"block\"; must be one of [\"block\", \"log_only\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_message": {
                      "type": "string",
                      "description": "The response message when validation fails. Default: \"Bad Request\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_status_code": {
                      "type": "number",
                      "description": "The response status code when validation fails. Default: 400",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "injection_types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The type of injections to check for.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "locations": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The locations to check for injection.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginInjectionProtection Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ip_restriction": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of IPs or CIDR ranges to allow. One of `config.allow` or `config.deny` must be specified.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "deny": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of IPs or CIDR ranges to deny. One of `config.allow` or `config.deny` must be specified.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "message": {
                      "type": "string",
                      "description": "The message to send as a response body to rejected requests.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "status": {
                      "type": "number",
                      "description": "The HTTP status of the requests that will be rejected by the plugin.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginIPRestriction Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_jq": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "request_if_media_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "request_jq_program": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "request_jq_program_options": {
                      "nested_type": {
                        "attributes": {
                          "ascii_output": {
                            "type": "bool",
                            "description": "Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "compact_output": {
                            "type": "bool",
                            "description": "Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "join_output": {
                            "type": "bool",
                            "description": "Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "raw_output": {
                            "type": "bool",
                            "description": "Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sort_keys": {
                            "type": "bool",
                            "description": "Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_if_media_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_if_status_code": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_jq_program": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "response_jq_program_options": {
                      "nested_type": {
                        "attributes": {
                          "ascii_output": {
                            "type": "bool",
                            "description": "Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "compact_output": {
                            "type": "bool",
                            "description": "Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "join_output": {
                            "type": "bool",
                            "description": "Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "raw_output": {
                            "type": "bool",
                            "description": "Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sort_keys": {
                            "type": "bool",
                            "description": "Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginJq Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_json_threat_protection": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_duplicate_object_entry_name": {
                      "type": "bool",
                      "description": "Allow or disallow duplicate object entry name. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "enforcement_mode": {
                      "type": "string",
                      "description": "Enforcement mode of the security policy. Default: \"block\"; must be one of [\"block\", \"log_only\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_message": {
                      "type": "string",
                      "description": "The response message when validation fails. Default: \"Bad Request\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_status_code": {
                      "type": "number",
                      "description": "The response status code when validation fails. Default: 400",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_array_element_count": {
                      "type": "number",
                      "description": "Max number of elements in an array. -1 means unlimited. Default: -1",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_body_size": {
                      "type": "number",
                      "description": "Max size of the request body. -1 means unlimited. Default: 8192",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_container_depth": {
                      "type": "number",
                      "description": "Max nested depth of objects and arrays. -1 means unlimited. Default: -1",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_object_entry_count": {
                      "type": "number",
                      "description": "Max number of entries in an object. -1 means unlimited. Default: -1",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_object_entry_name_length": {
                      "type": "number",
                      "description": "Max string length of object name. -1 means unlimited. Default: -1",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_string_value_length": {
                      "type": "number",
                      "description": "Max string value length. -1 means unlimited. Default: -1",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginJSONThreatProtection Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_jwe_decrypt": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "forward_header_name": {
                      "type": "string",
                      "description": "The name of the header that is used to set the decrypted value. Default: \"Authorization\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_sets": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Denote the name or names of all Key Sets that should be inspected when trying to find a suitable key to decrypt the JWE token.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "lookup_header_name": {
                      "type": "string",
                      "description": "The name of the header to look for the JWE token. Default: \"Authorization\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "strict": {
                      "type": "bool",
                      "description": "Defines how the plugin behaves in cases where no token was found in the request. When using `strict` mode, the request requires a token to be present and subsequently raise an error if none could be found. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginJweDecrypt Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_jwt": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "claims_to_verify": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of registered claims (according to RFC 7519) that Kong can verify as well. Accepted values: one of exp or nbf.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cookie_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of cookie names that Kong will inspect to retrieve JWTs.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of HTTP header names that Kong will inspect to retrieve JWTs.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_claim_name": {
                      "type": "string",
                      "description": "The name of the claim in which the key identifying the secret must be passed. The plugin will attempt to read this claim from the JWT payload and the header, in that order. Default: \"iss\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "maximum_expiration": {
                      "type": "number",
                      "description": "A value between 0 and 31536000 (365 days) limiting the lifetime of the JWT to maximum_expiration seconds in the future. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "realm": {
                      "type": "string",
                      "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "run_on_preflight": {
                      "type": "bool",
                      "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on OPTIONS preflight requests. If set to false, then OPTIONS requests will always be allowed. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "secret_is_base64": {
                      "type": "bool",
                      "description": "If true, the plugin assumes the credential\u2019s secret to be base64 encoded. You will need to create a base64-encoded secret for your Consumer, and sign your JWT with the original secret. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "uri_param_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of querystring parameters that Kong will inspect to retrieve JWTs.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginJwt Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_jwt_signer": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "access_token_consumer_by": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "When the plugin tries to apply an access token to a Kong consumer mapping, it tries to find a matching Kong consumer from properties defined using this configuration parameter. The parameter can take an array of alues. Valid values are `id`, `username`, and `custom_id`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_consumer_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "When you set a value for this parameter, the plugin tries to map an arbitrary claim specified with this configuration parameter (for example, `sub` or `username`) in an access token to Kong consumer entity.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_introspection_authorization": {
                      "type": "string",
                      "description": "If the introspection endpoint requires client authentication (client being the JWT Signer plugin), you can specify the `Authorization` header's value with this configuration parameter.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_introspection_body_args": {
                      "type": "string",
                      "description": "This parameter allows you to pass URL encoded request body arguments. For example: `resource=` or `a=1&b=&c`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_introspection_consumer_by": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "When the plugin tries to do access token introspection results to Kong consumer mapping, it tries to find a matching Kong consumer from properties defined using this configuration parameter. The parameter can take an array of values.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_introspection_consumer_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "When you set a value for this parameter, the plugin tries to map an arbitrary claim specified with this configuration parameter (such as `sub` or `username`) in access token introspection results to the Kong consumer entity.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_introspection_endpoint": {
                      "type": "string",
                      "description": "When you use `opaque` access tokens and you want to turn on access token introspection, you need to specify the OAuth 2.0 introspection endpoint URI with this configuration parameter.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_introspection_hint": {
                      "type": "string",
                      "description": "If you need to give `hint` parameter when introspecting an access token, use this parameter to specify the value. By default, the plugin sends `hint=access_token`. Default: \"access_token\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_introspection_jwt_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "If your introspection endpoint returns an access token in one of the keys (or claims) within the introspection results (`JSON`). If the key cannot be found, the plugin responds with `401 Unauthorized`. Also if the key is found but cannot be decoded as JWT, it also responds with `401 Unauthorized`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_introspection_leeway": {
                      "type": "number",
                      "description": "Adjusts clock skew between the token issuer introspection results and Kong. The value is added to introspection results (`JSON`) `exp` claim/property before checking token expiry against Kong servers current time in seconds. You can disable access token introspection `expiry` verification altogether with `config.verify_access_token_introspection_expiry`. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_introspection_scopes_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Specify the claim/property in access token introspection results (`JSON`) to be verified against values of `config.access_token_introspection_scopes_required`. This supports nested claims. For example, with Keycloak you could use `[ \"realm_access\", \"roles\" ]`, hich can be given as `realm_access,roles` (form post). If the claim is not found in access token introspection results, and you have specified `config.access_token_introspection_scopes_required`, the plugin responds with `403 Forbidden`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_introspection_scopes_required": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Specify the required values (or scopes) that are checked by an introspection claim/property specified by `config.access_token_introspection_scopes_claim`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_introspection_timeout": {
                      "type": "number",
                      "description": "Timeout in milliseconds for an introspection request. The plugin tries to introspect twice if the first request fails for some reason. If both requests timeout, then the plugin runs two times the `config.access_token_introspection_timeout` on access token introspection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_issuer": {
                      "type": "string",
                      "description": "The `iss` claim of a signed or re-signed access token is set to this value. Original `iss` claim of the incoming token (possibly introspected) is stored in `original_iss` claim of the newly signed access token. Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_jwks_uri": {
                      "type": "string",
                      "description": "Specify the URI where the plugin can fetch the public keys (JWKS) to verify the signature of the access token.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_jwks_uri_client_certificate": {
                      "type": "string",
                      "description": "The client certificate that will be used to authenticate Kong if `access_token_jwks_uri` is an https uri that requires mTLS Auth.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_jwks_uri_client_password": {
                      "type": "string",
                      "description": "The client password that will be used to authenticate Kong if `access_token_jwks_uri` is a uri that requires Basic Auth. Should be configured together with `access_token_jwks_uri_client_username`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_jwks_uri_client_username": {
                      "type": "string",
                      "description": "The client username that will be used to authenticate Kong if `access_token_jwks_uri` is a uri that requires Basic Auth. Should be configured together with `access_token_jwks_uri_client_password`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_jwks_uri_rotate_period": {
                      "type": "number",
                      "description": "Specify the period (in seconds) to auto-rotate the jwks for `access_token_jwks_uri`. The default value 0 means no auto-rotation. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_keyset": {
                      "type": "string",
                      "description": "The name of the keyset containing signing keys. Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_keyset_client_certificate": {
                      "type": "string",
                      "description": "The client certificate that will be used to authenticate Kong if `access_token_keyset` is an https uri that requires mTLS Auth.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_keyset_client_password": {
                      "type": "string",
                      "description": "The client password that will be used to authenticate Kong if `access_token_keyset` is a uri that requires Basic Auth. Should be configured together with `access_token_keyset_client_username`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_keyset_client_username": {
                      "type": "string",
                      "description": "The client username that will be used to authenticate Kong if `access_token_keyset` is a uri that requires Basic Auth. Should be configured together with `access_token_keyset_client_password`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_keyset_rotate_period": {
                      "type": "number",
                      "description": "Specify the period (in seconds) to auto-rotate the jwks for `access_token_keyset`. The default value 0 means no auto-rotation. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_leeway": {
                      "type": "number",
                      "description": "Adjusts clock skew between the token issuer and Kong. The value is added to the token's `exp` claim before checking token expiry against Kong servers' current time in seconds. You can disable access token `expiry` verification altogether with `config.verify_access_token_expiry`. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_optional": {
                      "type": "bool",
                      "description": "If an access token is not provided or no `config.access_token_request_header` is specified, the plugin cannot verify the access token. In that case, the plugin normally responds with `401 Unauthorized` (client didn't send a token) or `500 Unexpected` (a configuration error). Use this parameter to allow the request to proceed even when there is no token to check. If the token is provided, then this parameter has no effect. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_request_header": {
                      "type": "string",
                      "description": "This parameter tells the name of the header where to look for the access token. Default: \"Authorization\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_scopes_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Specify the claim in an access token to verify against values of `config.access_token_scopes_required`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_scopes_required": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Specify the required values (or scopes) that are checked by a claim specified by `config.access_token_scopes_claim`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "access_token_signing_algorithm": {
                      "type": "string",
                      "description": "When this plugin sets the upstream header as specified with `config.access_token_upstream_header`, re-signs the original access token using the private keys of the JWT Signer plugin. Specify the algorithm that is used to sign the token. The `config.access_token_issuer` specifies which `keyset` is used to sign the new token issued by Kong using the specified signing algorithm. Default: \"RS256\"; must be one of [\"ES256\", \"ES384\", \"ES512\", \"EdDSA\", \"HS256\", \"HS384\", \"HS512\", \"PS256\", \"PS384\", \"PS512\", \"RS256\", \"RS512\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_upstream_header": {
                      "type": "string",
                      "description": "Removes the `config.access_token_request_header` from the request after reading its value. With `config.access_token_upstream_header`, you can specify the upstream header where the plugin adds the Kong signed token. If you don't specify a value, such as use `null` or `\"\"` (empty string), the plugin does not even try to sign or re-sign the token. Default: \"Authorization:Bearer\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "access_token_upstream_leeway": {
                      "type": "number",
                      "description": "If you want to add or subtract (using a negative value) expiry time (in seconds) of the original access token, you can specify a value that is added to the original access token's `exp` claim. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "add_access_token_claims": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Add customized claims if they are not present yet. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "add_channel_token_claims": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Add customized claims if they are not present yet. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "add_claims": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Add customized claims to both tokens if they are not present yet. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cache_access_token_introspection": {
                      "type": "bool",
                      "description": "Whether to cache access token introspection results. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_channel_token_introspection": {
                      "type": "bool",
                      "description": "Whether to cache channel token introspection results. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_consumer_by": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "When the plugin tries to do channel token to Kong consumer mapping, it tries to find a matching Kong consumer from properties defined using this configuration parameter. The parameter can take an array of valid values: `id`, `username`, and `custom_id`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_consumer_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "When you set a value for this parameter, the plugin tries to map an arbitrary claim specified with this configuration parameter. Kong consumers have an `id`, a `username`, and a `custom_id`. If this parameter is enabled but the mapping fails, such as when there's a non-existent Kong consumer, the plugin responds with `403 Forbidden`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_introspection_authorization": {
                      "type": "string",
                      "description": "When using `opaque` channel tokens, and you want to turn on channel token introspection, you need to specify the OAuth 2.0 introspection endpoint URI with this configuration parameter. Otherwise the plugin will not try introspection, and instead returns `401 Unauthorized` when using opaque channel tokens.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_introspection_body_args": {
                      "type": "string",
                      "description": "If you need to pass additional body arguments to introspection endpoint when the plugin introspects the opaque channel token, you can use this config parameter to specify them. You should URL encode the value. For example: `resource=` or `a=1&b=&c`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_introspection_consumer_by": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "When the plugin tries to do channel token introspection results to Kong consumer mapping, it tries to find a matching Kong consumer from properties defined using this configuration parameter. The parameter can take an array of values. Valid values are `id`, `username` and `custom_id`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_introspection_consumer_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "When you set a value for this parameter, the plugin tries to map an arbitrary claim specified with this configuration parameter (such as `sub` or `username`) in channel token introspection results to Kong consumer entity",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_introspection_endpoint": {
                      "type": "string",
                      "description": "When you use `opaque` access tokens and you want to turn on access token introspection, you need to specify the OAuth 2.0 introspection endpoint URI with this configuration parameter. Otherwise, the plugin does not try introspection and returns `401 Unauthorized` instead.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_introspection_hint": {
                      "type": "string",
                      "description": "If you need to give `hint` parameter when introspecting a channel token, you can use this parameter to specify the value of such parameter. By default, a `hint` isn't sent with channel token introspection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_introspection_jwt_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "If your introspection endpoint returns a channel token in one of the keys (or claims) in the introspection results (`JSON`), the plugin can use that value instead of the introspection results when doing expiry verification and signing of the new token issued by Kong.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_introspection_leeway": {
                      "type": "number",
                      "description": "You can use this parameter to adjust clock skew between the token issuer introspection results and Kong. The value will be added to introspection results (`JSON`) `exp` claim/property before checking token expiry against Kong servers current time (in seconds). You can disable channel token introspection `expiry` verification altogether with `config.verify_channel_token_introspection_expiry`. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_introspection_scopes_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Use this parameter to specify the claim/property in channel token introspection results (`JSON`) to be verified against values of `config.channel_token_introspection_scopes_required`. This supports nested claims.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_introspection_scopes_required": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Use this parameter to specify the required values (or scopes) that are checked by an introspection claim/property specified by `config.channel_token_introspection_scopes_claim`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_introspection_timeout": {
                      "type": "number",
                      "description": "Timeout in milliseconds for an introspection request. The plugin tries to introspect twice if the first request fails for some reason. If both requests timeout, then the plugin runs two times the `config.access_token_introspection_timeout` on channel token introspection.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_issuer": {
                      "type": "string",
                      "description": "The `iss` claim of the re-signed channel token is set to this value, which is `kong` by default. The original `iss` claim of the incoming token (possibly introspected) is stored in the `original_iss` claim of the newly signed channel token. Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_jwks_uri": {
                      "type": "string",
                      "description": "If you want to use `config.verify_channel_token_signature`, you must specify the URI where the plugin can fetch the public keys (JWKS) to verify the signature of the channel token. If you don't specify a URI and you pass a JWT token to the plugin, then the plugin responds with `401 Unauthorized`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_jwks_uri_client_certificate": {
                      "type": "string",
                      "description": "The client certificate that will be used to authenticate Kong if `access_token_jwks_uri` is an https uri that requires mTLS Auth.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_jwks_uri_client_password": {
                      "type": "string",
                      "description": "The client password that will be used to authenticate Kong if `channel_token_jwks_uri` is a uri that requires Basic Auth. Should be configured together with `channel_token_jwks_uri_client_username`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_jwks_uri_client_username": {
                      "type": "string",
                      "description": "The client username that will be used to authenticate Kong if `channel_token_jwks_uri` is a uri that requires Basic Auth. Should be configured together with `channel_token_jwks_uri_client_password`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_jwks_uri_rotate_period": {
                      "type": "number",
                      "description": "Specify the period (in seconds) to auto-rotate the jwks for `channel_token_jwks_uri`. The default value 0 means no auto-rotation. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_keyset": {
                      "type": "string",
                      "description": "The name of the keyset containing signing keys. Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_keyset_client_certificate": {
                      "type": "string",
                      "description": "The client certificate that will be used to authenticate Kong if `channel_token_keyset` is an https uri that requires mTLS Auth.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_keyset_client_password": {
                      "type": "string",
                      "description": "The client password that will be used to authenticate Kong if `channel_token_keyset` is a uri that requires Basic Auth. Should be configured together with `channel_token_keyset_client_username`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_keyset_client_username": {
                      "type": "string",
                      "description": "The client username that will be used to authenticate Kong if `channel_token_keyset` is a uri that requires Basic Auth. Should be configured together with `channel_token_keyset_client_password`",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_keyset_rotate_period": {
                      "type": "number",
                      "description": "Specify the period (in seconds) to auto-rotate the jwks for `channel_token_keyset`. The default value 0 means no auto-rotation. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_leeway": {
                      "type": "number",
                      "description": "Adjusts clock skew between the token issuer and Kong. The value will be added to token's `exp` claim before checking token expiry against Kong servers current time in seconds. You can disable channel token `expiry` verification altogether with `config.verify_channel_token_expiry`. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_optional": {
                      "type": "bool",
                      "description": "If a channel token is not provided or no `config.channel_token_request_header` is specified, the plugin cannot verify the channel token. In that case, the plugin normally responds with `401 Unauthorized` (client didn't send a token) or `500 Unexpected` (a configuration error). Enable this parameter to allow the request to proceed even when there is no channel token to check. If the channel token is provided, then this parameter has no effect. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_request_header": {
                      "type": "string",
                      "description": "This parameter tells the name of the header where to look for the channel token. If you don't want to do anything with the channel token, then you can set this to `null` or `\"\"` (empty string).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_scopes_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Specify the claim in a channel token to verify against values of `config.channel_token_scopes_required`. This supports nested claims.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_scopes_required": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Specify the required values (or scopes) that are checked by a claim specified by `config.channel_token_scopes_claim`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_signing_algorithm": {
                      "type": "string",
                      "description": "When this plugin sets the upstream header as specified with `config.channel_token_upstream_header`, it also re-signs the original channel token using private keys of this plugin. Specify the algorithm that is used to sign the token. Default: \"RS256\"; must be one of [\"ES256\", \"ES384\", \"ES512\", \"EdDSA\", \"HS256\", \"HS384\", \"HS512\", \"PS256\", \"PS384\", \"PS512\", \"RS256\", \"RS512\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "channel_token_upstream_header": {
                      "type": "string",
                      "description": "This plugin removes the `config.channel_token_request_header` from the request after reading its value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "channel_token_upstream_leeway": {
                      "type": "number",
                      "description": "If you want to add or perhaps subtract (using negative value) expiry time of the original channel token, you can specify a value that is added to the original channel token's `exp` claim. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "enable_access_token_introspection": {
                      "type": "bool",
                      "description": "If you don't want to support opaque access tokens, change this configuration parameter to `false` to disable introspection. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "enable_channel_token_introspection": {
                      "type": "bool",
                      "description": "If you don't want to support opaque channel tokens, disable introspection by changing this configuration parameter to `false`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "enable_hs_signatures": {
                      "type": "bool",
                      "description": "Tokens signed with HMAC algorithms such as `HS256`, `HS384`, or `HS512` are not accepted by default. If you need to accept such tokens for verification, enable this setting. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "enable_instrumentation": {
                      "type": "bool",
                      "description": "Writes log entries with some added information using `ngx.CRIT` (CRITICAL) level. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "original_access_token_upstream_header": {
                      "type": "string",
                      "description": "The HTTP header name used to store the original access token.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "original_channel_token_upstream_header": {
                      "type": "string",
                      "description": "The HTTP header name used to store the original channel token.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "realm": {
                      "type": "string",
                      "description": "When authentication or authorization fails, or there is an unexpected error, the plugin sends an `WWW-Authenticate` header with the `realm` attribute value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "remove_access_token_claims": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "remove claims. It should be an array, and each element is a claim key string.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "remove_channel_token_claims": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "remove claims. It should be an array, and each element is a claim key string.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "set_access_token_claims": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Set customized claims. If a claim is already present, it will be overwritten. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "set_channel_token_claims": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Set customized claims. If a claim is already present, it will be overwritten. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "set_claims": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Set customized claims to both tokens. If a claim is already present, it will be overwritten. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "trust_access_token_introspection": {
                      "type": "bool",
                      "description": "Use this parameter to enable and disable further checks on a payload before the new token is signed. If you set this to `true`, the expiry or scopes are not checked on a payload. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "trust_channel_token_introspection": {
                      "type": "bool",
                      "description": "Providing an opaque channel token for plugin introspection, and verifying expiry and scopes on introspection results may make further payload checks unnecessary before the plugin signs a new token. This also applies when using a JWT token with introspection JSON as per config.channel_token_introspection_jwt_claim. Use this parameter to manage additional payload checks before signing a new token. With true (default), payload's expiry or scopes aren't checked. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_access_token_expiry": {
                      "type": "bool",
                      "description": "Quickly turn access token expiry verification off and on as needed. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_access_token_introspection_expiry": {
                      "type": "bool",
                      "description": "Quickly turn access token introspection expiry verification off and on as needed. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_access_token_introspection_scopes": {
                      "type": "bool",
                      "description": "Quickly turn off and on the access token introspection scopes verification, specified with `config.access_token_introspection_scopes_required`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_access_token_scopes": {
                      "type": "bool",
                      "description": "Quickly turn off and on the access token required scopes verification, specified with `config.access_token_scopes_required`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_access_token_signature": {
                      "type": "bool",
                      "description": "Quickly turn access token signature verification off and on as needed. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_channel_token_expiry": {
                      "type": "bool",
                      "description": "Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_channel_token_introspection_expiry": {
                      "type": "bool",
                      "description": "Quickly turn on/off the channel token introspection expiry verification. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_channel_token_introspection_scopes": {
                      "type": "bool",
                      "description": "Quickly turn on/off the channel token introspection scopes verification specified with `config.channel_token_introspection_scopes_required`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_channel_token_scopes": {
                      "type": "bool",
                      "description": "Quickly turn on/off the channel token required scopes verification specified with `config.channel_token_scopes_required`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_channel_token_signature": {
                      "type": "bool",
                      "description": "Quickly turn on/off the channel token signature verification. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginJwtSigner Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_kafka_consume": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "authentication": {
                      "nested_type": {
                        "attributes": {
                          "mechanism": {
                            "type": "string",
                            "description": "The SASL authentication mechanism.  Supported options: `PLAIN` or `SCRAM-SHA-256`. must be one of [\"PLAIN\", \"SCRAM-SHA-256\", \"SCRAM-SHA-512\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password for SASL authentication.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "strategy": {
                            "type": "string",
                            "description": "The authentication strategy for the plugin, the only option for the value is `sasl`. must be \"sasl\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "tokenauth": {
                            "type": "bool",
                            "description": "Enable this to indicate `DelegationToken` authentication",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "user": {
                            "type": "string",
                            "description": "Username for SASL authentication.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "auto_offset_reset": {
                      "type": "string",
                      "description": "The offset to start from when there is no initial offset in the consumer group. Default: \"latest\"; must be one of [\"earliest\", \"latest\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "bootstrap_servers": {
                      "nested_type": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Set of bootstrap brokers in a `{host: host, port: port}` list format.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cluster_name": {
                      "type": "string",
                      "description": "An identifier for the Kafka cluster.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "commit_strategy": {
                      "type": "string",
                      "description": "The strategy to use for committing offsets. Default: \"auto\"; must be one of [\"auto\", \"off\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "message_deserializer": {
                      "type": "string",
                      "description": "The deserializer to use for the consumed messages. Default: \"noop\"; must be one of [\"json\", \"noop\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "mode": {
                      "type": "string",
                      "description": "The mode of operation for the plugin. Default: \"http-get\"; must be one of [\"http-get\", \"server-sent-events\", \"websocket\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "schema_registry": {
                      "nested_type": {
                        "attributes": {
                          "confluent": {
                            "nested_type": {
                              "attributes": {
                                "authentication": {
                                  "nested_type": {
                                    "attributes": {
                                      "basic": {
                                        "nested_type": {
                                          "attributes": {
                                            "password": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            },
                                            "username": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "mode": {
                                        "type": "string",
                                        "description": "Authentication mode to use with the schema registry. Default: \"none\"; must be one of [\"basic\", \"none\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "Set to false to disable SSL certificate verification when connecting to the schema registry. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ttl": {
                                  "type": "number",
                                  "description": "The TTL in seconds for the schema registry cache.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the schema registry.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The plugin-global schema registry configuration.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "security": {
                      "nested_type": {
                        "attributes": {
                          "certificate_id": {
                            "type": "string",
                            "description": "UUID of certificate entity for mTLS authentication.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "Enables TLS.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "topics": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "schema_registry": {
                            "nested_type": {
                              "attributes": {
                                "confluent": {
                                  "nested_type": {
                                    "attributes": {
                                      "authentication": {
                                        "nested_type": {
                                          "attributes": {
                                            "basic": {
                                              "nested_type": {
                                                "attributes": {
                                                  "password": {
                                                    "type": "string",
                                                    "description": "Not Null",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "username": {
                                                    "type": "string",
                                                    "description": "Not Null",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                },
                                                "nesting_mode": "single"
                                              },
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "mode": {
                                              "type": "string",
                                              "description": "Authentication mode to use with the schema registry. Default: \"none\"; must be one of [\"basic\", \"none\"]",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description": "Not Null",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "ssl_verify": {
                                        "type": "bool",
                                        "description": "Set to false to disable SSL certificate verification when connecting to the schema registry. Default: true",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "ttl": {
                                        "type": "number",
                                        "description": "The TTL in seconds for the schema registry cache.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "The URL of the schema registry.",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "The plugin-global schema registry configuration. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "The Kafka topics and their configuration you want to consume from.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginKafkaConsume Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_kafka_log": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "authentication": {
                      "nested_type": {
                        "attributes": {
                          "mechanism": {
                            "type": "string",
                            "description": "The SASL authentication mechanism.  Supported options: `PLAIN`, `SCRAM-SHA-256` or `SCRAM-SHA-512`. must be one of [\"PLAIN\", \"SCRAM-SHA-256\", \"SCRAM-SHA-512\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password for SASL authentication.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "strategy": {
                            "type": "string",
                            "description": "The authentication strategy for the plugin, the only option for the value is `sasl`. must be \"sasl\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "tokenauth": {
                            "type": "bool",
                            "description": "Enable this to indicate `DelegationToken` authentication",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "user": {
                            "type": "string",
                            "description": "Username for SASL authentication.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "bootstrap_servers": {
                      "nested_type": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Set of bootstrap brokers in a `{host: host, port: port}` list format.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cluster_name": {
                      "type": "string",
                      "description": "An identifier for the Kafka cluster. By default, this field generates a random string. You can also set your own custom cluster identifier.  If more than one Kafka plugin is configured without a `cluster_name` (that is, if the default autogenerated value is removed), these plugins will use the same producer, and by extension, the same cluster. Logs will be sent to the leader of the cluster.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "custom_fields_by_lua": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Lua code as a key-value map",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive_enabled": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_query_arg": {
                      "type": "string",
                      "description": "The request query parameter name that contains the Kafka message key. If specified, messages with the same key will be sent to the same Kafka partition, ensuring consistent ordering.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "producer_async": {
                      "type": "bool",
                      "description": "Flag to enable asynchronous mode. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_async_buffering_limits_messages_in_memory": {
                      "type": "number",
                      "description": "Maximum number of messages that can be buffered in memory in asynchronous mode. Default: 50000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_async_flush_timeout": {
                      "type": "number",
                      "description": "Maximum time interval in milliseconds between buffer flushes in asynchronous mode. Default: 1000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_acks": {
                      "type": "number",
                      "description": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments; 1 for only the leader; and -1 for the full ISR (In-Sync Replica set). Default: 1; must be one of [\"-1\", \"0\", \"1\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_limits_bytes_per_request": {
                      "type": "number",
                      "description": "Maximum size of a Produce request in bytes. Default: 1048576",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_limits_messages_per_request": {
                      "type": "number",
                      "description": "Maximum number of messages to include into a single Produce request. Default: 200",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_retries_backoff_timeout": {
                      "type": "number",
                      "description": "Backoff interval between retry attempts in milliseconds. Default: 100",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_retries_max_attempts": {
                      "type": "number",
                      "description": "Maximum number of retry attempts per single Produce request. Default: 10",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_timeout": {
                      "type": "number",
                      "description": "Time to wait for a Produce response in milliseconds. Default: 2000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "schema_registry": {
                      "nested_type": {
                        "attributes": {
                          "confluent": {
                            "nested_type": {
                              "attributes": {
                                "authentication": {
                                  "nested_type": {
                                    "attributes": {
                                      "basic": {
                                        "nested_type": {
                                          "attributes": {
                                            "password": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            },
                                            "username": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "mode": {
                                        "type": "string",
                                        "description": "Authentication mode to use with the schema registry. Default: \"none\"; must be one of [\"basic\", \"none\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "key_schema": {
                                  "nested_type": {
                                    "attributes": {
                                      "schema_version": {
                                        "type": "string",
                                        "description": "The schema version to use for serialization/deserialization. Use 'latest' to always fetch the most recent version.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "subject_name": {
                                        "type": "string",
                                        "description": "The name of the subject",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "Set to false to disable SSL certificate verification when connecting to the schema registry. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ttl": {
                                  "type": "number",
                                  "description": "The TTL in seconds for the schema registry cache.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the schema registry.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "value_schema": {
                                  "nested_type": {
                                    "attributes": {
                                      "schema_version": {
                                        "type": "string",
                                        "description": "The schema version to use for serialization/deserialization. Use 'latest' to always fetch the most recent version.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "subject_name": {
                                        "type": "string",
                                        "description": "The name of the subject",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The plugin-global schema registry configuration. This can be overwritten by the topic configuration.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "security": {
                      "nested_type": {
                        "attributes": {
                          "certificate_id": {
                            "type": "string",
                            "description": "UUID of certificate entity for mTLS authentication.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "Enables TLS.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Socket timeout in milliseconds. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "topic": {
                      "type": "string",
                      "description": "The Kafka topic to publish to.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginKafkaLog Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_kafka_upstream": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allowed_topics": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The list of allowed topic names to which messages can be sent. The default topic configured in the `topic` field is always allowed, regardless of its inclusion in `allowed_topics`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authentication": {
                      "nested_type": {
                        "attributes": {
                          "mechanism": {
                            "type": "string",
                            "description": "The SASL authentication mechanism.  Supported options: `PLAIN`, `SCRAM-SHA-256`, or `SCRAM-SHA-512`. must be one of [\"PLAIN\", \"SCRAM-SHA-256\", \"SCRAM-SHA-512\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password for SASL authentication.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "strategy": {
                            "type": "string",
                            "description": "The authentication strategy for the plugin, the only option for the value is `sasl`. must be \"sasl\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "tokenauth": {
                            "type": "bool",
                            "description": "Enable this to indicate `DelegationToken` authentication.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "user": {
                            "type": "string",
                            "description": "Username for SASL authentication.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "bootstrap_servers": {
                      "nested_type": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Set of bootstrap brokers in a `{host: host, port: port}` list format.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cluster_name": {
                      "type": "string",
                      "description": "An identifier for the Kafka cluster. By default, this field generates a random string. You can also set your own custom cluster identifier.  If more than one Kafka plugin is configured without a `cluster_name` (that is, if the default autogenerated value is removed), these plugins will use the same producer, and by extension, the same cluster. Logs will be sent to the leader of the cluster.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "forward_body": {
                      "type": "bool",
                      "description": "Include the request body in the message. At least one of these must be true: `forward_method`, `forward_uri`, `forward_headers`, `forward_body`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_headers": {
                      "type": "bool",
                      "description": "Include the request headers in the message. At least one of these must be true: `forward_method`, `forward_uri`, `forward_headers`, `forward_body`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_method": {
                      "type": "bool",
                      "description": "Include the request method in the message. At least one of these must be true: `forward_method`, `forward_uri`, `forward_headers`, `forward_body`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forward_uri": {
                      "type": "bool",
                      "description": "Include the request URI and URI arguments (as in, query arguments) in the message. At least one of these must be true: `forward_method`, `forward_uri`, `forward_headers`, `forward_body`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "Keepalive timeout in milliseconds. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive_enabled": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_query_arg": {
                      "type": "string",
                      "description": "The request query parameter name that contains the Kafka message key. If specified, messages with the same key will be sent to the same Kafka partition, ensuring consistent ordering.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "message_by_lua_functions": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The Lua functions that manipulates the message being sent to the Kafka topic.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "producer_async": {
                      "type": "bool",
                      "description": "Flag to enable asynchronous mode. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_async_buffering_limits_messages_in_memory": {
                      "type": "number",
                      "description": "Maximum number of messages that can be buffered in memory in asynchronous mode. Default: 50000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_async_flush_timeout": {
                      "type": "number",
                      "description": "Maximum time interval in milliseconds between buffer flushes in asynchronous mode. Default: 1000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_acks": {
                      "type": "number",
                      "description": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments; 1 for only the leader; and -1 for the full ISR (In-Sync Replica set). Default: 1; must be one of [\"-1\", \"0\", \"1\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_limits_bytes_per_request": {
                      "type": "number",
                      "description": "Maximum size of a Produce request in bytes. Default: 1048576",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_limits_messages_per_request": {
                      "type": "number",
                      "description": "Maximum number of messages to include into a single producer request. Default: 200",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_retries_backoff_timeout": {
                      "type": "number",
                      "description": "Backoff interval between retry attempts in milliseconds. Default: 100",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_retries_max_attempts": {
                      "type": "number",
                      "description": "Maximum number of retry attempts per single Produce request. Default: 10",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "producer_request_timeout": {
                      "type": "number",
                      "description": "Time to wait for a Produce response in milliseconds. Default: 2000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "schema_registry": {
                      "nested_type": {
                        "attributes": {
                          "confluent": {
                            "nested_type": {
                              "attributes": {
                                "authentication": {
                                  "nested_type": {
                                    "attributes": {
                                      "basic": {
                                        "nested_type": {
                                          "attributes": {
                                            "password": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            },
                                            "username": {
                                              "type": "string",
                                              "description_kind": "plain",
                                              "required": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "mode": {
                                        "type": "string",
                                        "description": "Authentication mode to use with the schema registry. Default: \"none\"; must be one of [\"basic\", \"none\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "key_schema": {
                                  "nested_type": {
                                    "attributes": {
                                      "schema_version": {
                                        "type": "string",
                                        "description": "The schema version to use for serialization/deserialization. Use 'latest' to always fetch the most recent version.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "subject_name": {
                                        "type": "string",
                                        "description": "The name of the subject",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "Set to false to disable SSL certificate verification when connecting to the schema registry. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ttl": {
                                  "type": "number",
                                  "description": "The TTL in seconds for the schema registry cache.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the schema registry.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "value_schema": {
                                  "nested_type": {
                                    "attributes": {
                                      "schema_version": {
                                        "type": "string",
                                        "description": "The schema version to use for serialization/deserialization. Use 'latest' to always fetch the most recent version.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "subject_name": {
                                        "type": "string",
                                        "description": "The name of the subject",
                                        "description_kind": "plain",
                                        "optional": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The plugin-global schema registry configuration. This can be overwritten by the topic configuration.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "security": {
                      "nested_type": {
                        "attributes": {
                          "certificate_id": {
                            "type": "string",
                            "description": "UUID of certificate entity for mTLS authentication.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "Enables TLS.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Socket timeout in milliseconds. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "topic": {
                      "type": "string",
                      "description": "The default Kafka topic to publish to if the query parameter defined in the `topics_query_arg` does not exist in the request",
                      "description_kind": "plain",
                      "required": true
                    },
                    "topics_query_arg": {
                      "type": "string",
                      "description": "The request query parameter name that contains the topics to publish to",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginKafkaUpstream Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_key_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), the request will fail with an authentication failure `4xx`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_credentials": {
                      "type": "bool",
                      "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If `true`, the plugin strips the credential from the request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "identity_realms": {
                      "nested_type": {
                        "attributes": {
                          "id": {
                            "type": "string",
                            "description": "A string representing a UUID (universally unique identifier).",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "region": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "scope": {
                            "type": "string",
                            "description": "must be one of [\"cp\", \"realm\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "A configuration of Konnect Identity Realms that indicate where to source a consumer from.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_in_body": {
                      "type": "bool",
                      "description": "If enabled, the plugin reads the request body. Supported MIME types: `application/www-form-urlencoded`, `application/json`, and `multipart/form-data`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_in_header": {
                      "type": "bool",
                      "description": "If enabled (default), the plugin reads the request header and tries to find the key in it. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_in_query": {
                      "type": "bool",
                      "description": "If enabled (default), the plugin reads the query parameter in the request and tries to find the key in it. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Describes an array of parameter names where the plugin will look for a key. The key names may only contain [a-z], [A-Z], [0-9], [_] underscore, and [-] hyphen.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "realm": {
                      "type": "string",
                      "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "run_on_preflight": {
                      "type": "bool",
                      "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests are always allowed. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginKeyAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_key_auth_enc": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), the request will fail with an authentication failure `4xx`. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_credentials": {
                      "type": "bool",
                      "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If `true`, the plugin strips the credential from the request (i.e., the header, query string, or request body containing the key) before proxying it. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_in_body": {
                      "type": "bool",
                      "description": "If enabled, the plugin reads the request body (if said request has one and its MIME type is supported) and tries to find the key in it. Supported MIME types: `application/www-form-urlencoded`, `application/json`, and `multipart/form-data`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_in_header": {
                      "type": "bool",
                      "description": "If enabled (default), the plugin reads the request header and tries to find the key in it. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_in_query": {
                      "type": "bool",
                      "description": "If enabled (default), the plugin reads the query parameter in the request and tries to find the key in it. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Describes an array of parameter names where the plugin will look for a key. The client must send the authentication key in one of those key names, and the plugin will try to read the credential from a header, request body, or query string parameter with the same name.  Key names may only contain [a-z], [A-Z], [0-9], [_] underscore, and [-] hyphen.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "realm": {
                      "type": "string",
                      "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "run_on_preflight": {
                      "type": "bool",
                      "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests are always allowed. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginKeyAuthEnc Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ldap_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), the request fails with an authentication failure `4xx`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "attribute": {
                      "type": "string",
                      "description": "Attribute to be used to search the user; e.g. cn",
                      "description_kind": "plain",
                      "required": true
                    },
                    "base_dn": {
                      "type": "string",
                      "description": "Base DN as the starting point for the search; e.g., dc=example,dc=com",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cache_ttl": {
                      "type": "number",
                      "description": "Cache expiry time in seconds. Default: 60",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_type": {
                      "type": "string",
                      "description": "An optional string to use as part of the Authorization header. Default: \"ldap\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hide_credentials": {
                      "type": "bool",
                      "description": "An optional boolean value telling the plugin to hide the credential to the upstream server. It will be removed by Kong before proxying the request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "An optional value in milliseconds that defines how long an idle connection to LDAP server will live before being closed. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ldap_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "ldap_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 389",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ldaps": {
                      "type": "bool",
                      "description": "Set to `true` to connect using the LDAPS protocol (LDAP over TLS).  When `ldaps` is configured, you must use port 636. If the `ldap` setting is enabled, ensure the `start_tls` setting is disabled. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "realm": {
                      "type": "string",
                      "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "start_tls": {
                      "type": "bool",
                      "description": "Set it to `true` to issue StartTLS (Transport Layer Security) extended operation over `ldap` connection. If the `start_tls` setting is enabled, ensure the `ldaps` setting is disabled. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "An optional timeout in milliseconds when waiting for connection with LDAP server. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_ldap_host": {
                      "type": "bool",
                      "description": "Set to `true` to authenticate LDAP server. The server certificate will be verified according to the CA certificates specified by the `lua_ssl_trusted_certificate` directive. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginLdapAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_ldap_auth_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), the request will fail with an authentication failure `4xx`. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`. Default: \"\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "attribute": {
                      "type": "string",
                      "description": "Attribute to be used to search the user; e.g., \"cn\".",
                      "description_kind": "plain",
                      "required": true
                    },
                    "base_dn": {
                      "type": "string",
                      "description": "Base DN as the starting point for the search; e.g., 'dc=example,dc=com'.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "bind_dn": {
                      "type": "string",
                      "description": "The DN to bind to. Used to perform LDAP search of user. This `bind_dn` should have permissions to search for the user being authenticated.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cache_ttl": {
                      "type": "number",
                      "description": "Cache expiry time in seconds. Default: 60",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "consumer_by": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Whether to authenticate consumers based on `username`, `custom_id`, or both.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "consumer_optional": {
                      "type": "bool",
                      "description": "Whether consumer mapping is optional. If `consumer_optional=true`, the plugin will not attempt to associate a consumer with the LDAP authenticated user. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "group_base_dn": {
                      "type": "string",
                      "description": "Sets a distinguished name (DN) for the entry where LDAP searches for groups begin. This field is case-insensitive.',dc=com'.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "group_member_attribute": {
                      "type": "string",
                      "description": "Sets the attribute holding the members of the LDAP group. This field is case-sensitive. Default: \"memberOf\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "group_name_attribute": {
                      "type": "string",
                      "description": "Sets the attribute holding the name of a group, typically called `name` (in Active Directory) or `cn` (in OpenLDAP). This field is case-insensitive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "groups_required": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The groups required to be present in the LDAP search result for successful authorization. This config parameter works in both **AND** / **OR** cases. - When `[\"group1 group2\"]` are in the same array indices, both `group1` AND `group2` need to be present in the LDAP search result. - When `[\"group1\", \"group2\"]` are in different array indices, either `group1` OR `group2` need to be present in the LDAP search result.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "header_type": {
                      "type": "string",
                      "description": "An optional string to use as part of the Authorization header. By default, a valid Authorization header looks like this: `Authorization: ldap base64(username:password)`. If `header_type` is set to \"basic\", then the Authorization header would be `Authorization: basic base64(username:password)`. Note that `header_type` can take any string, not just `'ldap'` and `'basic'`. Default: \"ldap\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hide_credentials": {
                      "type": "bool",
                      "description": "An optional boolean value telling the plugin to hide the credential to the upstream server. It will be removed by Kong before proxying the request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "An optional value in milliseconds that defines how long an idle connection to LDAP server will live before being closed. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ldap_host": {
                      "type": "string",
                      "description": "Host on which the LDAP server is running.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "ldap_password": {
                      "type": "string",
                      "description": "The password to the LDAP server.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "ldap_port": {
                      "type": "number",
                      "description": "TCP port where the LDAP server is listening. 389 is the default port for non-SSL LDAP and AD. 636 is the port required for SSL LDAP and AD. If `ldaps` is configured, you must use port 636. Default: 389",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ldaps": {
                      "type": "bool",
                      "description": "Set it to `true` to use `ldaps`, a secure protocol (that can be configured to TLS) to connect to the LDAP server. When `ldaps` is configured, you must use port 636. If the `ldap` setting is enabled, ensure the `start_tls` setting is disabled. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "log_search_results": {
                      "type": "bool",
                      "description": "Displays all the LDAP search results received from the LDAP server for debugging purposes. Not recommended to be enabled in a production environment. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "realm": {
                      "type": "string",
                      "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "start_tls": {
                      "type": "bool",
                      "description": "Set it to `true` to issue StartTLS (Transport Layer Security) extended operation over `ldap` connection. If the `start_tls` setting is enabled, ensure the `ldaps` setting is disabled. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "An optional timeout in milliseconds when waiting for connection with LDAP server. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_ldap_host": {
                      "type": "bool",
                      "description": "Set to `true` to authenticate LDAP server. The server certificate will be verified according to the CA certificates specified by the `lua_ssl_trusted_certificate` directive. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginLdapAuthAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_loggly": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "client_errors_severity": {
                      "type": "string",
                      "description": "Default: \"info\"; must be one of [\"alert\", \"crit\", \"debug\", \"emerg\", \"err\", \"info\", \"notice\", \"warning\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "custom_fields_by_lua": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Lua code as a key-value map",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com. Default: \"logs-01.loggly.com\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "key": {
                      "type": "string",
                      "description_kind": "plain",
                      "required": true
                    },
                    "log_level": {
                      "type": "string",
                      "description": "Default: \"info\"; must be one of [\"alert\", \"crit\", \"debug\", \"emerg\", \"err\", \"info\", \"notice\", \"warning\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 514",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "server_errors_severity": {
                      "type": "string",
                      "description": "Default: \"info\"; must be one of [\"alert\", \"crit\", \"debug\", \"emerg\", \"err\", \"info\", \"notice\", \"warning\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "successful_severity": {
                      "type": "string",
                      "description": "Default: \"info\"; must be one of [\"alert\", \"crit\", \"debug\", \"emerg\", \"err\", \"info\", \"notice\", \"warning\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "tags": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginLoggly Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_mocking": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "api_specification": {
                      "type": "string",
                      "description": "The contents of the specification file. You must use this option for hybrid or DB-less mode. You can include the full specification as part of the configuration. In Kong Manager, you can copy and paste the contents of the spec directly into the `Config.Api Specification` text field.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "api_specification_filename": {
                      "type": "string",
                      "description": "The path and name of the specification file loaded into Kong Gateway's database. You cannot use this option for DB-less or hybrid mode.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "custom_base_path": {
                      "type": "string",
                      "description": "The base path to be used for path match evaluation. This value is ignored if `include_base_path` is set to `false`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "include_base_path": {
                      "type": "bool",
                      "description": "Indicates whether to include the base path when performing path match evaluation. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "included_status_codes": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "A global list of the HTTP status codes that can only be selected and returned.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_delay_time": {
                      "type": "number",
                      "description": "The maximum value in seconds of delay time. Set this value when `random_delay` is enabled and you want to adjust the default. The value must be greater than the `min_delay_time`. Default: 1",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "min_delay_time": {
                      "type": "number",
                      "description": "The minimum value in seconds of delay time. Set this value when `random_delay` is enabled and you want to adjust the default. The value must be less than the `max_delay_time`. Default: 0.001",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "random_delay": {
                      "type": "bool",
                      "description": "Enables a random delay in the mocked response. Introduces delays to simulate real-time response times by APIs. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "random_examples": {
                      "type": "bool",
                      "description": "Randomly selects one example and returns it. This parameter requires the spec to have multiple examples configured. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "random_status_code": {
                      "type": "bool",
                      "description": "Determines whether to randomly select an HTTP status code from the responses of the corresponding API method. The default value is `false`, which means the minimum HTTP status code is always selected and returned. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginMocking Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_mtls_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_partial_chain": {
                      "type": "bool",
                      "description": "Allow certificate verification with only an intermediate certificate. When this is enabled, you don't need to upload the full chain to Kong Certificates. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), the request fails with an authentication failure `4xx`. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authenticated_group_by": {
                      "type": "string",
                      "description": "Certificate property to use as the authenticated group. Valid values are `CN` (Common Name) or `DN` (Distinguished Name). Once `skip_consumer_lookup` is applied, any client with a valid certificate can access the Service/API. To restrict usage to only some of the authenticated users, also add the ACL plugin (not covered here) and create allowed or denied groups of users. Default: \"CN\"; must be one of [\"CN\", \"DN\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ca_certificates": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of CA Certificates strings to use as Certificate Authorities (CA) when validating a client certificate. At least one is required but you can specify as many as needed. The value of this array is comprised of primary keys (`id`).",
                      "description_kind": "plain",
                      "required": true
                    },
                    "cache_ttl": {
                      "type": "number",
                      "description": "Cache expiry time in seconds. Default: 60",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cert_cache_ttl": {
                      "type": "number",
                      "description": "The length of time in seconds between refreshes of the revocation check status cache. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "consumer_by": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Whether to match the subject name of the client-supplied certificate against consumer's `username` and/or `custom_id` attribute. If set to `[]` (the empty array), then auto-matching is disabled.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "default_consumer": {
                      "type": "string",
                      "description": "The UUID or username of the consumer to use when a trusted client certificate is presented but no consumer matches. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_timeout": {
                      "type": "number",
                      "description": "HTTP timeout threshold in milliseconds when communicating with the OCSP server or downloading CRL. Default: 30000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "https_proxy_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_proxy_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "revocation_check_mode": {
                      "type": "string",
                      "description": "Controls client certificate revocation check behavior. If set to `SKIP`, no revocation check is performed. If set to `IGNORE_CA_ERROR`, the plugin respects the revocation status when either OCSP or CRL URL is set, and doesn't fail on network issues. If set to `STRICT`, the plugin only treats the certificate as valid when it's able to verify the revocation status. Default: \"IGNORE_CA_ERROR\"; must be one of [\"IGNORE_CA_ERROR\", \"SKIP\", \"STRICT\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "send_ca_dn": {
                      "type": "bool",
                      "description": "Sends the distinguished names (DN) of the configured CA list in the TLS handshake message. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "skip_consumer_lookup": {
                      "type": "bool",
                      "description": "Skip consumer lookup once certificate is trusted against the configured CA list. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginMtlsAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_oas_validation": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allowed_header_parameters": {
                      "type": "string",
                      "description": "List of header parameters in the request that will be ignored when performing HTTP header validation. These are additional headers added to an API request beyond those defined in the API specification.  For example, you might include the HTTP header `User-Agent`, which lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent. Default: \"Host,Content-Type,User-Agent,Accept,Content-Length\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "api_spec": {
                      "type": "string",
                      "description": "The API specification defined using either Swagger or the OpenAPI. This can be either a JSON or YAML based file. If using a YAML file, the spec needs to be URI-Encoded to preserve the YAML format.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "api_spec_encoded": {
                      "type": "bool",
                      "description": "Indicates whether the api_spec is URI-Encoded. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "custom_base_path": {
                      "type": "string",
                      "description": "The base path to be used for path match evaluation. This value is ignored if `include_base_path` is set to `false`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "header_parameter_check": {
                      "type": "bool",
                      "description": "If set to true, checks if HTTP header parameters in the request exist in the API specification. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "include_base_path": {
                      "type": "bool",
                      "description": "Indicates whether to include the base path when performing path match evaluation. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "notify_only_request_validation_failure": {
                      "type": "bool",
                      "description": "If set to true, notifications via event hooks are enabled, but request based validation failures don't affect the request flow. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "notify_only_response_body_validation_failure": {
                      "type": "bool",
                      "description": "If set to true, notifications via event hooks are enabled, but response validation failures don't affect the response flow. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "query_parameter_check": {
                      "type": "bool",
                      "description": "If set to true, checks if query parameters in the request exist in the API specification. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "validate_request_body": {
                      "type": "bool",
                      "description": "If set to true, validates the request body content against the API specification. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "validate_request_header_params": {
                      "type": "bool",
                      "description": "If set to true, validates HTTP header parameters against the API specification. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "validate_request_query_params": {
                      "type": "bool",
                      "description": "If set to true, validates query parameters against the API specification. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "validate_request_uri_params": {
                      "type": "bool",
                      "description": "If set to true, validates URI parameters in the request against the API specification. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "validate_response_body": {
                      "type": "bool",
                      "description": "If set to true, validates the response from the upstream services against the API specification. If validation fails, it results in an `HTTP 406 Not Acceptable` status code. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verbose_response": {
                      "type": "bool",
                      "description": "If set to true, returns a detailed error message for invalid requests & responses. This is useful while testing. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginOasValidation Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_oauth2_introspection": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), the request fails with an authentication failure `4xx`. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`. Default: \"\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "authorization_value": {
                      "type": "string",
                      "description": "The value to set as the `Authorization` header when querying the introspection endpoint. This depends on the OAuth 2.0 server, but usually is the `client_id` and `client_secret` as a Base64-encoded Basic Auth string (`Basic MG9hNWl...`).",
                      "description_kind": "plain",
                      "required": true
                    },
                    "consumer_by": {
                      "type": "string",
                      "description": "A string indicating whether to associate OAuth2 `username` or `client_id` with the consumer's username. OAuth2 `username` is mapped to a consumer's `username` field, while an OAuth2 `client_id` maps to a consumer's `custom_id`. Default: \"username\"; must be one of [\"client_id\", \"username\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "custom_claims_forward": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of custom claims to be forwarded from the introspection response to the upstream request. Claims are forwarded in headers with prefix `X-Credential-{claim-name}`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "custom_introspection_headers": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A list of custom headers to be added in the introspection request.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_credentials": {
                      "type": "bool",
                      "description": "An optional boolean value telling the plugin to hide the credential to the upstream API server. It will be removed by Kong before proxying the request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "introspect_request": {
                      "type": "bool",
                      "description": "A boolean indicating whether to forward information about the current downstream request to the introspect endpoint. If true, headers `X-Request-Path` and `X-Request-Http-Method` will be inserted into the introspect request. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "introspection_url": {
                      "type": "string",
                      "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "An optional value in milliseconds that defines how long an idle connection lives before being closed. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "run_on_preflight": {
                      "type": "bool",
                      "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests will always be allowed. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "An optional timeout in milliseconds when sending data to the upstream server. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "token_type_hint": {
                      "type": "string",
                      "description": "The `token_type_hint` value to associate to introspection requests.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "ttl": {
                      "type": "number",
                      "description": "The TTL in seconds for the introspection response. Set to 0 to disable the expiration. Default: 30",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginOauth2Introspection Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_opa": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "include_body_in_opa_input": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "include_consumer_in_opa_input": {
                      "type": "bool",
                      "description": "If set to true, the Kong Gateway Consumer object in use for the current request (if any) is included as input to OPA. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "include_parsed_json_body_in_opa_input": {
                      "type": "bool",
                      "description": "If set to true and the `Content-Type` header of the current request is `application/json`, the request body will be JSON decoded and the decoded struct is included as input to OPA. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "include_route_in_opa_input": {
                      "type": "bool",
                      "description": "If set to true, the Kong Gateway Route object in use for the current request is included as input to OPA. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "include_service_in_opa_input": {
                      "type": "bool",
                      "description": "If set to true, the Kong Gateway Service object in use for the current request is included as input to OPA. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "include_uri_captures_in_opa_input": {
                      "type": "bool",
                      "description": "If set to true, the regex capture groups captured on the Kong Gateway Route's path field in the current request (if any) are included as input to OPA. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "opa_host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com. Default: \"localhost\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "opa_path": {
                      "type": "string",
                      "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
                      "description_kind": "plain",
                      "required": true
                    },
                    "opa_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 8181",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "opa_protocol": {
                      "type": "string",
                      "description": "The protocol to use when talking to Open Policy Agent (OPA) server. Allowed protocols are `http` and `https`. Default: \"http\"; must be one of [\"http\", \"https\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ssl_verify": {
                      "type": "bool",
                      "description": "If set to true, the OPA certificate will be verified according to the CA certificates specified in lua_ssl_trusted_certificate. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginOpa Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_openid_connect": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value that functions as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), requests that fail authentication will return a `4xx` HTTP status code. This value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "audience": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The audience passed to the authorization endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "audience_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The claim that contains the audience. If multiple values are set, it means the claim is inside a nested object of the token payload.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "audience_required": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The audiences (`audience_claim` claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both **AND** / **OR** cases.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "auth_methods": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Types of credentials/grants to enable.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "authenticated_groups_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The claim that contains authenticated groups. This setting can be used together with ACL plugin, but it also enables IdP managed groups with other applications and integrations. If multiple values are set, it means the claim is inside a nested object of the token payload.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authorization_cookie_domain": {
                      "type": "string",
                      "description": "The authorization cookie Domain flag.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authorization_cookie_http_only": {
                      "type": "bool",
                      "description": "Forbids JavaScript from accessing the cookie, for example, through the `Document.cookie` property. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "authorization_cookie_name": {
                      "type": "string",
                      "description": "The authorization cookie name. Default: \"authorization\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "authorization_cookie_path": {
                      "type": "string",
                      "description": "The authorization cookie Path flag. Default: \"/\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "authorization_cookie_same_site": {
                      "type": "string",
                      "description": "Controls whether a cookie is sent with cross-origin requests, providing some protection against cross-site request forgery attacks. Default: \"Default\"; must be one of [\"Default\", \"Lax\", \"None\", \"Strict\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "authorization_cookie_secure": {
                      "type": "bool",
                      "description": "Cookie is only sent to the server when a request is made with the https: scheme (except on localhost), and therefore is more resistant to man-in-the-middle attacks.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authorization_endpoint": {
                      "type": "string",
                      "description": "The authorization endpoint. If set it overrides the value in `authorization_endpoint` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authorization_query_args_client": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra query arguments passed from the client to the authorization endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authorization_query_args_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra query argument names passed to the authorization endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authorization_query_args_values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra query argument values passed to the authorization endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "authorization_rolling_timeout": {
                      "type": "number",
                      "description": "Specifies how long the session used for the authorization code flow can be used in seconds until it needs to be renewed. 0 disables the checks and rolling. Default: 600",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "bearer_token_cookie_name": {
                      "type": "string",
                      "description": "The name of the cookie in which the bearer token is passed.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "bearer_token_param_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to look for the bearer token: - `header`: search the `Authorization`, `access-token`, and `x-access-token` HTTP headers - `query`: search the URL's query string - `body`: search the HTTP request body - `cookie`: search the HTTP request cookies specified with `config.bearer_token_cookie_name`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "by_username_ignore_case": {
                      "type": "bool",
                      "description": "If `consumer_by` is set to `username`, specify whether `username` can match consumers case-insensitively. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_introspection": {
                      "type": "bool",
                      "description": "Cache the introspection endpoint requests. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_token_exchange": {
                      "type": "bool",
                      "description": "Cache the token exchange endpoint requests. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_tokens": {
                      "type": "bool",
                      "description": "Cache the token endpoint requests. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_tokens_salt": {
                      "type": "string",
                      "description": "Salt used for generating the cache key that is used for caching the token endpoint requests.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_ttl": {
                      "type": "number",
                      "description": "The default cache ttl in seconds that is used in case the cached object does not specify the expiry. Default: 3600",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_ttl_max": {
                      "type": "number",
                      "description": "The maximum cache ttl in seconds (enforced).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cache_ttl_min": {
                      "type": "number",
                      "description": "The minimum cache ttl in seconds (enforced).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cache_ttl_neg": {
                      "type": "number",
                      "description": "The negative cache ttl in seconds.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cache_ttl_resurrect": {
                      "type": "number",
                      "description": "The resurrection ttl in seconds.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cache_user_info": {
                      "type": "bool",
                      "description": "Cache the user info requests. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "claims_forbidden": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "If given, these claims are forbidden in the token payload.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "client_alg": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The algorithm to use for client_secret_jwt (only HS***) or private_key_jwt authentication.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "client_arg": {
                      "type": "string",
                      "description": "The client to use for this request (the selection is made with a request parameter with the same name). Default: \"client_id\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "client_auth": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The default OpenID Connect client authentication method is 'client_secret_basic' (using 'Authorization: Basic' header), 'client_secret_post' (credentials in body), 'client_secret_jwt' (signed client assertion in body), 'private_key_jwt' (private key-signed assertion), 'tls_client_auth' (client certificate), 'self_signed_tls_client_auth' (self-signed client certificate), and 'none' (no authentication).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "client_credentials_param_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to look for the client credentials: - `header`: search the HTTP headers - `query`: search the URL's query string - `body`: search from the HTTP request body.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "client_id": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The client id(s) that the plugin uses when it calls authenticated endpoints on the identity provider.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "client_jwk": {
                      "nested_type": {
                        "attributes": {
                          "alg": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "crv": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "d": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "dp": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "dq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "e": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "issuer": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "k": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "key_ops": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          },
                          "kid": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "kty": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "n": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oth": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "p": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "q": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "qi": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "r": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "t": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "use": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "x": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "x5c": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          },
                          "x5t": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "x5t_number_s256": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "x5u": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "y": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "The JWK used for the private_key_jwt authentication.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "client_secret": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The client secret.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cluster_cache_redis": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cluster_cache_strategy": {
                      "type": "string",
                      "description": "The strategy to use for the cluster cache. If set, the plugin will share cache with nodes configured with the same strategy backend. Currentlly only introspection cache is shared. Default: \"off\"; must be one of [\"off\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "consumer_by": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Consumer fields used for mapping: - `id`: try to find the matching Consumer by `id` - `username`: try to find the matching Consumer by `username` - `custom_id`: try to find the matching Consumer by `custom_id`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "consumer_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The claim used for consumer mapping. If multiple values are set, it means the claim is inside a nested object of the token payload.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "consumer_optional": {
                      "type": "bool",
                      "description": "Do not terminate the request if consumer mapping fails. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "credential_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The claim used to derive virtual credentials (e.g. to be consumed by the rate-limiting plugin), in case the consumer mapping is not used. If multiple values are set, it means the claim is inside a nested object of the token payload.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "disable_session": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Disable issuing the session cookie with the specified grants.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "discovery_headers_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra header names passed to the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "discovery_headers_values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra header values passed to the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "display_errors": {
                      "type": "bool",
                      "description": "Display errors on failure responses. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "domains": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The allowed values for the `hd` claim.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_access_token_header": {
                      "type": "string",
                      "description": "The downstream access token header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_access_token_jwk_header": {
                      "type": "string",
                      "description": "The downstream access token JWK header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_headers_claims": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The downstream header claims. If multiple values are set, it means the claim is inside a nested object of the token payload.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_headers_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The downstream header names for the claim values.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_id_token_header": {
                      "type": "string",
                      "description": "The downstream id token header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_id_token_jwk_header": {
                      "type": "string",
                      "description": "The downstream id token JWK header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_introspection_header": {
                      "type": "string",
                      "description": "The downstream introspection header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_introspection_jwt_header": {
                      "type": "string",
                      "description": "The downstream introspection JWT header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_refresh_token_header": {
                      "type": "string",
                      "description": "The downstream refresh token header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_session_id_header": {
                      "type": "string",
                      "description": "The downstream session id header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_user_info_header": {
                      "type": "string",
                      "description": "The downstream user info header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "downstream_user_info_jwt_header": {
                      "type": "string",
                      "description": "The downstream user info JWT header (in case the user info returns a JWT response).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dpop_proof_lifetime": {
                      "type": "number",
                      "description": "Specifies the lifetime in seconds of the DPoP proof. It determines how long the same proof can be used after creation. The creation time is determined by the nonce creation time if a nonce is used, and the iat claim otherwise. Default: 300",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "dpop_use_nonce": {
                      "type": "bool",
                      "description": "Specifies whether to challenge the client with a nonce value for DPoP proof. When enabled it will also be used to calculate the DPoP proof lifetime. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "enable_hs_signatures": {
                      "type": "bool",
                      "description": "Enable shared secret, for example, HS256, signatures (when disabled they will not be accepted). Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "end_session_endpoint": {
                      "type": "string",
                      "description": "The end session endpoint. If set it overrides the value in `end_session_endpoint` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "expose_error_code": {
                      "type": "bool",
                      "description": "Specifies whether to expose the error code header, as defined in RFC 6750. If an authorization request fails, this header is sent in the response. Set to `false` to disable. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "extra_jwks_uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "JWKS URIs whose public keys are trusted (in addition to the keys found with the discovery).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "forbidden_destroy_session": {
                      "type": "bool",
                      "description": "Destroy any active session for the forbidden requests. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forbidden_error_message": {
                      "type": "string",
                      "description": "The error message for the forbidden requests (when not using the redirection). Default: \"Forbidden\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "forbidden_redirect_uri": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to redirect the client on forbidden requests.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "groups_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The claim that contains the groups. If multiple values are set, it means the claim is inside a nested object of the token payload.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "groups_required": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The groups (`groups_claim` claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both **AND** / **OR** cases.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_credentials": {
                      "type": "bool",
                      "description": "Remove the credentials used for authentication from the request. If multiple credentials are sent with the same request, the plugin will remove those that were used for successful authentication. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "http_proxy": {
                      "type": "string",
                      "description": "The HTTP proxy.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_proxy_authorization": {
                      "type": "string",
                      "description": "The HTTP proxy authorization.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_version": {
                      "type": "number",
                      "description": "The HTTP version used for the requests by this plugin: - `1.1`: HTTP 1.1 (the default) - `1.0`: HTTP 1.0.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "https_proxy": {
                      "type": "string",
                      "description": "The HTTPS proxy.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "https_proxy_authorization": {
                      "type": "string",
                      "description": "The HTTPS proxy authorization.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "id_token_param_name": {
                      "type": "string",
                      "description": "The name of the parameter used to pass the id token.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "id_token_param_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to look for the id token: - `header`: search the HTTP headers - `query`: search the URL's query string - `body`: search the HTTP request body.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ignore_signature": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Skip the token signature verification on certain grants: - `password`: OAuth password grant - `client_credentials`: OAuth client credentials grant - `authorization_code`: authorization code flow - `refresh_token`: OAuth refresh token grant - `session`: session cookie authentication - `introspection`: OAuth introspection - `userinfo`: OpenID Connect user info endpoint authentication.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "introspect_jwt_tokens": {
                      "type": "bool",
                      "description": "Specifies whether to introspect the JWT access tokens (can be used to check for revocations). Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "introspection_accept": {
                      "type": "string",
                      "description": "The value of `Accept` header for introspection requests: - `application/json`: introspection response as JSON - `application/token-introspection+jwt`: introspection response as JWT (from the current IETF draft document) - `application/jwt`: introspection response as JWT (from the obsolete IETF draft document). Default: \"application/json\"; must be one of [\"application/json\", \"application/jwt\", \"application/token-introspection+jwt\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "introspection_check_active": {
                      "type": "bool",
                      "description": "Check that the introspection response has an `active` claim with a value of `true`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "introspection_endpoint": {
                      "type": "string",
                      "description": "The introspection endpoint. If set it overrides the value in `introspection_endpoint` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "introspection_endpoint_auth_method": {
                      "type": "string",
                      "description": "The introspection endpoint authentication method: : `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`, `self_signed_tls_client_auth`, or `none`: do not authenticate. must be one of [\"client_secret_basic\", \"client_secret_jwt\", \"client_secret_post\", \"none\", \"private_key_jwt\", \"self_signed_tls_client_auth\", \"tls_client_auth\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "introspection_headers_client": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra headers passed from the client to the introspection endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "introspection_headers_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra header names passed to the introspection endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "introspection_headers_values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra header values passed to the introspection endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "introspection_hint": {
                      "type": "string",
                      "description": "Introspection hint parameter value passed to the introspection endpoint. Default: \"access_token\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "introspection_post_args_client": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra post arguments passed from the client to the introspection endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "introspection_post_args_client_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra post arguments passed from the client headers to the introspection endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "introspection_post_args_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra post argument names passed to the introspection endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "introspection_post_args_values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra post argument values passed to the introspection endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "introspection_token_param_name": {
                      "type": "string",
                      "description": "Designate token's parameter name for introspection. Default: \"token\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "issuer": {
                      "type": "string",
                      "description": "The discovery endpoint (or the issuer identifier). When there is no discovery endpoint, please also configure `config.using_pseudo_issuer=true`.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "issuers_allowed": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The issuers allowed to be present in the tokens (`iss` claim).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "jwt_session_claim": {
                      "type": "string",
                      "description": "The claim to match against the JWT session cookie. Default: \"sid\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "jwt_session_cookie": {
                      "type": "string",
                      "description": "The name of the JWT session cookie.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "keepalive": {
                      "type": "bool",
                      "description": "Use keepalive with the HTTP client. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "leeway": {
                      "type": "number",
                      "description": "Defines leeway time (in seconds) for `auth_time`, `exp`, `iat`, and `nbf` claims. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "login_action": {
                      "type": "string",
                      "description": "What to do after successful login: - `upstream`: proxy request to upstream service - `response`: terminate request with a response - `redirect`: redirect to a different location. Default: \"upstream\"; must be one of [\"redirect\", \"response\", \"upstream\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "login_methods": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Enable login functionality with specified grants.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "login_redirect_mode": {
                      "type": "string",
                      "description": "Where to place `login_tokens` when using `redirect` `login_action`: - `query`: place tokens in query string - `fragment`: place tokens in url fragment (not readable by servers). Default: \"fragment\"; must be one of [\"fragment\", \"query\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "login_redirect_uri": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to redirect the client when `login_action` is set to `redirect`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "login_tokens": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "What tokens to include in `response` body or `redirect` query string or fragment: - `id_token`: include id token - `access_token`: include access token - `refresh_token`: include refresh token - `tokens`: include the full token endpoint response - `introspection`: include introspection response.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "logout_methods": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The request methods that can activate the logout: - `POST`: HTTP POST method - `GET`: HTTP GET method - `DELETE`: HTTP DELETE method.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "logout_post_arg": {
                      "type": "string",
                      "description": "The request body argument that activates the logout.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "logout_query_arg": {
                      "type": "string",
                      "description": "The request query argument that activates the logout.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "logout_redirect_uri": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to redirect the client after the logout.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "logout_revoke": {
                      "type": "bool",
                      "description": "Revoke tokens as part of the logout.\n\nFor more granular token revocation, you can also adjust the `logout_revoke_access_token` and `logout_revoke_refresh_token` parameters.\nDefault: false",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "logout_revoke_access_token": {
                      "type": "bool",
                      "description": "Revoke the access token as part of the logout. Requires `logout_revoke` to be set to `true`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "logout_revoke_refresh_token": {
                      "type": "bool",
                      "description": "Revoke the refresh token as part of the logout. Requires `logout_revoke` to be set to `true`. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "logout_uri_suffix": {
                      "type": "string",
                      "description": "The request URI suffix that activates the logout.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "max_age": {
                      "type": "number",
                      "description": "The maximum age (in seconds) compared to the `auth_time` claim.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "mtls_introspection_endpoint": {
                      "type": "string",
                      "description": "Alias for the introspection endpoint to be used for mTLS client authentication. If set it overrides the value in `mtls_endpoint_aliases` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "mtls_revocation_endpoint": {
                      "type": "string",
                      "description": "Alias for the introspection endpoint to be used for mTLS client authentication. If set it overrides the value in `mtls_endpoint_aliases` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "mtls_token_endpoint": {
                      "type": "string",
                      "description": "Alias for the token endpoint to be used for mTLS client authentication. If set it overrides the value in `mtls_endpoint_aliases` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "no_proxy": {
                      "type": "string",
                      "description": "Do not use proxy with these hosts.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password_param_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to look for the username and password: - `header`: search the HTTP headers - `query`: search the URL's query string - `body`: search the HTTP request body.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "preserve_query_args": {
                      "type": "bool",
                      "description": "With this parameter, you can preserve request query arguments even when doing authorization code flow. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "proof_of_possession_auth_methods_validation": {
                      "type": "bool",
                      "description": "If set to true, only the auth_methods that are compatible with Proof of Possession (PoP) can be configured when PoP is enabled. If set to false, all auth_methods will be configurable and PoP checks will be silently skipped for those auth_methods that are not compatible with PoP. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "proof_of_possession_dpop": {
                      "type": "string",
                      "description": "Enable Demonstrating Proof-of-Possession (DPoP). If set to strict, all request are verified despite the presence of the DPoP key claim (cnf.jkt). If set to optional, only tokens bound with DPoP's key are verified with the proof. Default: \"off\"; must be one of [\"off\", \"optional\", \"strict\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "proof_of_possession_mtls": {
                      "type": "string",
                      "description": "Enable mtls proof of possession. If set to strict, all tokens (from supported auth_methods: bearer, introspection, and session granted with bearer or introspection) are verified, if set to optional, only tokens that contain the certificate hash claim are verified. If the verification fails, the request will be rejected with 401. Default: \"off\"; must be one of [\"off\", \"optional\", \"strict\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "pushed_authorization_request_endpoint": {
                      "type": "string",
                      "description": "The pushed authorization endpoint. If set it overrides the value in `pushed_authorization_request_endpoint` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "pushed_authorization_request_endpoint_auth_method": {
                      "type": "string",
                      "description": "The pushed authorization request endpoint authentication method: `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`, `self_signed_tls_client_auth`, or `none`: do not authenticate. must be one of [\"client_secret_basic\", \"client_secret_jwt\", \"client_secret_post\", \"none\", \"private_key_jwt\", \"self_signed_tls_client_auth\", \"tls_client_auth\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "redirect_uri": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The redirect URI passed to the authorization and token endpoints.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "prefix": {
                            "type": "string",
                            "description": "The Redis session key prefix.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "socket": {
                            "type": "string",
                            "description": "The Redis unix socket path.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "rediscovery_lifetime": {
                      "type": "number",
                      "description": "Specifies how long (in seconds) the plugin waits between discovery attempts. Discovery is still triggered on an as-needed basis. Default: 30",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "refresh_token_param_name": {
                      "type": "string",
                      "description": "The name of the parameter used to pass the refresh token.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "refresh_token_param_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to look for the refresh token: - `header`: search the HTTP headers - `query`: search the URL's query string - `body`: search the HTTP request body.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "refresh_tokens": {
                      "type": "bool",
                      "description": "Specifies whether the plugin should try to refresh (soon to be) expired access tokens if the plugin has a `refresh_token` available. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "require_proof_key_for_code_exchange": {
                      "type": "bool",
                      "description": "Forcibly enable or disable the proof key for code exchange. When not set the value is determined through the discovery using the value of `code_challenge_methods_supported`, and enabled automatically (in case the `code_challenge_methods_supported` is missing, the PKCE will not be enabled).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "require_pushed_authorization_requests": {
                      "type": "bool",
                      "description": "Forcibly enable or disable the pushed authorization requests. When not set the value is determined through the discovery using the value of `require_pushed_authorization_requests` (which defaults to `false`).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "require_signed_request_object": {
                      "type": "bool",
                      "description": "Forcibly enable or disable the usage of signed request object on authorization or pushed authorization endpoint. When not set the value is determined through the discovery using the value of `require_signed_request_object`, and enabled automatically (in case the `require_signed_request_object` is missing, the feature will not be enabled).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "resolve_distributed_claims": {
                      "type": "bool",
                      "description": "Distributed claims are represented by the `_claim_names` and `_claim_sources` members of the JSON object containing the claims. If this parameter is set to `true`, the plugin explicitly resolves these distributed claims. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_mode": {
                      "type": "string",
                      "description": "Response mode passed to the authorization endpoint: - `query`: for parameters in query string - `form_post`: for parameters in request body - `fragment`: for parameters in uri fragment (rarely useful as the plugin itself cannot read it) - `query.jwt`, `form_post.jwt`, `fragment.jwt`: similar to `query`, `form_post` and `fragment` but the parameters are encoded in a JWT - `jwt`: shortcut that indicates the default encoding for the requested response type. Default: \"query\"; must be one of [\"form_post\", \"form_post.jwt\", \"fragment\", \"fragment.jwt\", \"jwt\", \"query\", \"query.jwt\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The response type passed to the authorization endpoint.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "reverify": {
                      "type": "bool",
                      "description": "Specifies whether to always verify tokens stored in the session. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "revocation_endpoint": {
                      "type": "string",
                      "description": "The revocation endpoint. If set it overrides the value in `revocation_endpoint` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "revocation_endpoint_auth_method": {
                      "type": "string",
                      "description": "The revocation endpoint authentication method: : `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`, `self_signed_tls_client_auth`, or `none`: do not authenticate. must be one of [\"client_secret_basic\", \"client_secret_jwt\", \"client_secret_post\", \"none\", \"private_key_jwt\", \"self_signed_tls_client_auth\", \"tls_client_auth\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "revocation_token_param_name": {
                      "type": "string",
                      "description": "Designate token's parameter name for revocation. Default: \"token\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "roles_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The claim that contains the roles. If multiple values are set, it means the claim is inside a nested object of the token payload.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "roles_required": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The roles (`roles_claim` claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both **AND** / **OR** cases.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "run_on_preflight": {
                      "type": "bool",
                      "description": "Specifies whether to run this plugin on pre-flight (`OPTIONS`) requests. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "scopes": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The scopes passed to the authorization and token endpoints.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "scopes_claim": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The claim that contains the scopes. If multiple values are set, it means the claim is inside a nested object of the token payload.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "scopes_required": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The scopes (`scopes_claim` claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both **AND** / **OR** cases.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "search_user_info": {
                      "type": "bool",
                      "description": "Specify whether to use the user info endpoint to get additional claims for consumer mapping, credential mapping, authenticated groups, and upstream and downstream headers. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_absolute_timeout": {
                      "type": "number",
                      "description": "Limits how long the session can be renewed in seconds, until re-authentication is required. 0 disables the checks. Default: 86400",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_audience": {
                      "type": "string",
                      "description": "The session audience, which is the intended target application. For example `\"my-application\"`. Default: \"default\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_domain": {
                      "type": "string",
                      "description": "The session cookie Domain flag.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_cookie_http_only": {
                      "type": "bool",
                      "description": "Forbids JavaScript from accessing the cookie, for example, through the `Document.cookie` property. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_name": {
                      "type": "string",
                      "description": "The session cookie name. Default: \"session\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_path": {
                      "type": "string",
                      "description": "The session cookie Path flag. Default: \"/\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_same_site": {
                      "type": "string",
                      "description": "Controls whether a cookie is sent with cross-origin requests, providing some protection against cross-site request forgery attacks. Default: \"Lax\"; must be one of [\"Default\", \"Lax\", \"None\", \"Strict\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_secure": {
                      "type": "bool",
                      "description": "Cookie is only sent to the server when a request is made with the https: scheme (except on localhost), and therefore is more resistant to man-in-the-middle attacks.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_enforce_same_subject": {
                      "type": "bool",
                      "description": "When set to `true`, audiences are forced to share the same subject. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_hash_storage_key": {
                      "type": "bool",
                      "description": "When set to `true`, the storage key (session ID) is hashed for extra security. Hashing the storage key means it is impossible to decrypt data from the storage without a cookie. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_hash_subject": {
                      "type": "bool",
                      "description": "When set to `true`, the value of subject is hashed before being stored. Only applies when `session_store_metadata` is enabled. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_idling_timeout": {
                      "type": "number",
                      "description": "Specifies how long the session can be inactive until it is considered invalid in seconds. 0 disables the checks and touching. Default: 900",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_memcached_host": {
                      "type": "string",
                      "description": "The memcached host. Default: \"127.0.0.1\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_memcached_port": {
                      "type": "number",
                      "description": "The memcached port. Default: 11211",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_memcached_prefix": {
                      "type": "string",
                      "description": "The memcached session key prefix.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_memcached_socket": {
                      "type": "string",
                      "description": "The memcached unix socket path.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_remember": {
                      "type": "bool",
                      "description": "Enables or disables persistent sessions. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_remember_absolute_timeout": {
                      "type": "number",
                      "description": "Limits how long the persistent session can be renewed in seconds, until re-authentication is required. 0 disables the checks. Default: 2592000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_remember_cookie_name": {
                      "type": "string",
                      "description": "Persistent session cookie name. Use with the `remember` configuration parameter. Default: \"remember\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_remember_rolling_timeout": {
                      "type": "number",
                      "description": "Specifies how long the persistent session is considered valid in seconds. 0 disables the checks and rolling. Default: 604800",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_request_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Set of headers to send to upstream, use id, audience, subject, timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g. `[ \"id\", \"timeout\" ]` will set Session-Id and Session-Timeout request headers.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_response_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Set of headers to send to downstream, use id, audience, subject, timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g. `[ \"id\", \"timeout\" ]` will set Session-Id and Session-Timeout response headers.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_rolling_timeout": {
                      "type": "number",
                      "description": "Specifies how long the session can be used in seconds until it needs to be renewed. 0 disables the checks and rolling. Default: 3600",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_secret": {
                      "type": "string",
                      "description": "The session secret.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_storage": {
                      "type": "string",
                      "description": "The session storage for session data: - `cookie`: stores session data with the session cookie (the session cannot be invalidated or revoked without changing session secret, but is stateless, and doesn't require a database) - `memcache`: stores session data in memcached - `redis`: stores session data in Redis. Default: \"cookie\"; must be one of [\"cookie\", \"memcache\", \"memcached\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_store_metadata": {
                      "type": "bool",
                      "description": "Configures whether or not session metadata should be stored. This metadata includes information about the active sessions for a specific audience belonging to a specific subject. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ssl_verify": {
                      "type": "bool",
                      "description": "Verify identity provider server certificate. If set to `true`, the plugin uses the CA certificate set in the `kong.conf` config parameter `lua_ssl_trusted_certificate`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Network IO timeout in milliseconds. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "tls_client_auth_cert_id": {
                      "type": "string",
                      "description": "ID of the Certificate entity representing the client certificate to use for mTLS client authentication for connections between Kong and the Auth Server.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tls_client_auth_ssl_verify": {
                      "type": "bool",
                      "description": "Verify identity provider server certificate during mTLS client authentication. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "token_cache_key_include_scope": {
                      "type": "bool",
                      "description": "Include the scope in the token cache key, so token with different scopes are considered diffrent tokens. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "token_endpoint": {
                      "type": "string",
                      "description": "The token endpoint. If set it overrides the value in `token_endpoint` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_endpoint_auth_method": {
                      "type": "string",
                      "description": "The token endpoint authentication method: `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`, `self_signed_tls_client_auth`, or `none`: do not authenticate. must be one of [\"client_secret_basic\", \"client_secret_jwt\", \"client_secret_post\", \"none\", \"private_key_jwt\", \"self_signed_tls_client_auth\", \"tls_client_auth\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "token_exchange_endpoint": {
                      "type": "string",
                      "description": "The token exchange endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_headers_client": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra headers passed from the client to the token endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_headers_grants": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Enable the sending of the token endpoint response headers only with certain grants: - `password`: with OAuth password grant - `client_credentials`: with OAuth client credentials grant - `authorization_code`: with authorization code flow - `refresh_token` with refresh token grant.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_headers_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra header names passed to the token endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_headers_prefix": {
                      "type": "string",
                      "description": "Add a prefix to the token endpoint response headers before forwarding them to the downstream client.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_headers_replay": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The names of token endpoint response headers to forward to the downstream client.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_headers_values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra header values passed to the token endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_post_args_client": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Pass extra arguments from the client to the OpenID-Connect plugin. If arguments exist, the client can pass them using: - Query parameters - Request Body - Request Header  This parameter can be used with `scope` values, like this:  `config.token_post_args_client=scope`  In this case, the token would take the `scope` value from the query parameter or from the request body or from the header and send it to the token endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_post_args_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra post argument names passed to the token endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "token_post_args_values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra post argument values passed to the token endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "unauthorized_destroy_session": {
                      "type": "bool",
                      "description": "Destroy any active session for the unauthorized requests. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "unauthorized_error_message": {
                      "type": "string",
                      "description": "The error message for the unauthorized requests (when not using the redirection). Default: \"Unauthorized\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "unauthorized_redirect_uri": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to redirect the client on unauthorized requests.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "unexpected_redirect_uri": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Where to redirect the client when unexpected errors happen with the requests.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_access_token_header": {
                      "type": "string",
                      "description": "The upstream access token header. Default: \"authorization:bearer\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "upstream_access_token_jwk_header": {
                      "type": "string",
                      "description": "The upstream access token JWK header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_headers_claims": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The upstream header claims. Only top level claims are supported.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_headers_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "The upstream header names for the claim values.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_id_token_header": {
                      "type": "string",
                      "description": "The upstream id token header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_id_token_jwk_header": {
                      "type": "string",
                      "description": "The upstream id token JWK header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_introspection_header": {
                      "type": "string",
                      "description": "The upstream introspection header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_introspection_jwt_header": {
                      "type": "string",
                      "description": "The upstream introspection JWT header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_refresh_token_header": {
                      "type": "string",
                      "description": "The upstream refresh token header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_session_id_header": {
                      "type": "string",
                      "description": "The upstream session id header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_user_info_header": {
                      "type": "string",
                      "description": "The upstream user info header.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_user_info_jwt_header": {
                      "type": "string",
                      "description": "The upstream user info JWT header (in case the user info returns a JWT response).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "userinfo_accept": {
                      "type": "string",
                      "description": "The value of `Accept` header for user info requests: - `application/json`: user info response as JSON - `application/jwt`: user info response as JWT (from the obsolete IETF draft document). Default: \"application/json\"; must be one of [\"application/json\", \"application/jwt\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "userinfo_endpoint": {
                      "type": "string",
                      "description": "The user info endpoint. If set it overrides the value in `userinfo_endpoint` returned by the discovery endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "userinfo_headers_client": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra headers passed from the client to the user info endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "userinfo_headers_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra header names passed to the user info endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "userinfo_headers_values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra header values passed to the user info endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "userinfo_query_args_client": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra query arguments passed from the client to the user info endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "userinfo_query_args_names": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra query argument names passed to the user info endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "userinfo_query_args_values": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Extra query argument values passed to the user info endpoint.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "using_pseudo_issuer": {
                      "type": "bool",
                      "description": "If the plugin uses a pseudo issuer. When set to true, the plugin will not discover the configuration from the issuer URL specified with `config.issuer`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_claims": {
                      "type": "bool",
                      "description": "Verify tokens for standard claims. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_nonce": {
                      "type": "bool",
                      "description": "Verify nonce on authorization code flow. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_parameters": {
                      "type": "bool",
                      "description": "Verify plugin configuration against discovery. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "verify_signature": {
                      "type": "bool",
                      "description": "Verify signature of tokens. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginOpenidConnect Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_opentelemetry": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "batch_flush_delay": {
                      "type": "number",
                      "description": "The delay, in seconds, between two consecutive batches.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "batch_span_count": {
                      "type": "number",
                      "description": "The number of spans to be sent in a single batch.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "connect_timeout": {
                      "type": "number",
                      "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 1000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_type": {
                      "type": "string",
                      "description": "Default: \"preserve\"; must be one of [\"aws\", \"b3\", \"b3-single\", \"datadog\", \"gcp\", \"ignore\", \"instana\", \"jaeger\", \"ot\", \"preserve\", \"w3c\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "headers": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "The custom headers to be added in the HTTP request sent to the OTLP server. This setting is useful for adding the authentication headers (token) for the APM backend.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_response_header_for_traceid": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "logs_endpoint": {
                      "type": "string",
                      "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "propagation": {
                      "nested_type": {
                        "attributes": {
                          "clear": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Header names to clear after context extraction. This allows to extract the context from a certain header and then remove it from the request, useful when extraction and injection are performed on different header formats and the original header should not be sent to the upstream. If left empty, no headers are cleared.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "default_format": {
                            "type": "string",
                            "description": "The default header format to use when extractors did not match any format in the incoming headers and `inject` is configured with the value: `preserve`. This can happen when no tracing header was found in the request, or the incoming tracing header formats were not included in `extract`. Default: \"w3c\"; must be one of [\"aws\", \"b3\", \"b3-single\", \"datadog\", \"gcp\", \"instana\", \"jaeger\", \"ot\", \"w3c\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "extract": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Header formats used to extract tracing context from incoming requests. If multiple values are specified, the first one found will be used for extraction. If left empty, Kong will not extract any tracing context information from incoming requests and generate a trace with no parent and a new trace ID.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "inject": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Header formats used to inject tracing context. The value `preserve` will use the same header format as the incoming request. If multiple values are specified, all of them will be used during injection. If left empty, Kong will not inject any tracing context information in outgoing requests.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "queue": {
                      "nested_type": {
                        "attributes": {
                          "concurrency_limit": {
                            "type": "number",
                            "description": "The number of of queue delivery timers. -1 indicates unlimited. Default: 1; must be one of [\"-1\", \"1\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "initial_retry_delay": {
                            "type": "number",
                            "description": "Time in seconds before the initial retry is made for a failing batch.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_batch_size": {
                            "type": "number",
                            "description": "Maximum number of entries that can be processed at a time. Default: 200",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_bytes": {
                            "type": "number",
                            "description": "Maximum number of bytes that can be waiting on a queue, requires string content.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "max_coalescing_delay": {
                            "type": "number",
                            "description": "Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_entries": {
                            "type": "number",
                            "description": "Maximum number of entries that can be waiting on the queue. Default: 10000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_delay": {
                            "type": "number",
                            "description": "Maximum time in seconds between retries, caps exponential backoff. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_time": {
                            "type": "number",
                            "description": "Time in seconds before the queue gives up calling a failed handler for a batch. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "read_timeout": {
                      "type": "number",
                      "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 5000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "resource_attributes": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "sampling_rate": {
                      "type": "number",
                      "description": "Tracing sampling rate for configuring the probability-based sampler. When set, this value supersedes the global `tracing_sampling_rate` setting from kong.conf.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "sampling_strategy": {
                      "type": "string",
                      "description": "The sampling strategy to use for OTLP `traces`. Set `parent_drop_probability_fallback` if you want parent-based sampling when the parent span contains a `false` sampled flag, and fallback to probability-based sampling otherwise. Set `parent_probability_fallback` if you want parent-based sampling when the parent span contains a valid sampled flag (`true` or `false`), and fallback to probability-based sampling otherwise. Default: \"parent_drop_probability_fallback\"; must be one of [\"parent_drop_probability_fallback\", \"parent_probability_fallback\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "send_timeout": {
                      "type": "number",
                      "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 5000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "traces_endpoint": {
                      "type": "string",
                      "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginOpentelemetry Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_post_function": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "access": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "body_filter": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "certificate": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_filter": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "log": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "rewrite": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ws_client_frame": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ws_close": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ws_handshake": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ws_upstream_frame": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginPostFunction Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_pre_function": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "access": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "body_filter": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "certificate": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_filter": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "log": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "rewrite": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ws_client_frame": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ws_close": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ws_handshake": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ws_upstream_frame": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginPreFunction Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_prometheus": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "ai_metrics": {
                      "type": "bool",
                      "description": "A boolean value that determines if ai metrics should be collected. If enabled, the `ai_llm_requests_total`, `ai_llm_cost_total` and `ai_llm_tokens_total` metrics will be exported. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "bandwidth_metrics": {
                      "type": "bool",
                      "description": "A boolean value that determines if bandwidth metrics should be collected. If enabled, `bandwidth_bytes` and `stream_sessions_total` metrics will be exported. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "latency_metrics": {
                      "type": "bool",
                      "description": "A boolean value that determines if latency metrics should be collected. If enabled, `kong_latency_ms`, `upstream_latency_ms` and `request_latency_ms` metrics will be exported. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "per_consumer": {
                      "type": "bool",
                      "description": "A boolean value that determines if per-consumer metrics should be collected. If enabled, the `kong_http_requests_total` and `kong_bandwidth_bytes` metrics fill in the consumer label when available. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "status_code_metrics": {
                      "type": "bool",
                      "description": "A boolean value that determines if status code metrics should be collected. If enabled, `http_requests_total`, `stream_sessions_total` metrics will be exported. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "upstream_health_metrics": {
                      "type": "bool",
                      "description": "A boolean value that determines if upstream metrics should be collected. If enabled, `upstream_target_health` metric will be exported. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "wasm_metrics": {
                      "type": "bool",
                      "description": "A boolean value that determines if Wasm metrics should be collected. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginPrometheus Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_proxy_cache": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "cache_control": {
                      "type": "bool",
                      "description": "When enabled, respect the Cache-Control behaviors defined in RFC7234. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_ttl": {
                      "type": "number",
                      "description": "TTL, in seconds, of cache entities. Default: 300",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "content_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Upstream response content types considered cacheable. The plugin performs an **exact match** against each specified value.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ignore_uri_case": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "memory": {
                      "nested_type": {
                        "attributes": {
                          "dictionary_name": {
                            "type": "string",
                            "description": "The name of the shared dictionary in which to hold cache entities when the memory strategy is selected. Note that this dictionary currently must be defined manually in the Kong Nginx template. Default: \"kong_db_cache\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "request_method": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Downstream request methods considered cacheable.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_code": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "Upstream response status code considered cacheable.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_headers": {
                      "nested_type": {
                        "attributes": {
                          "age": {
                            "type": "bool",
                            "description": "Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "x_cache_key": {
                            "type": "bool",
                            "description": "Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "x_cache_status": {
                            "type": "bool",
                            "description": "Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Caching related diagnostic headers that should be included in cached responses",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "storage_ttl": {
                      "type": "number",
                      "description": "Number of seconds to keep resources in the storage backend. This value is independent of `cache_ttl` or resource TTLs defined by Cache-Control behaviors.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The backing data store in which to hold cache entities. must be \"memory\"",
                      "description_kind": "plain",
                      "required": true
                    },
                    "vary_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Relevant headers considered for the cache key. If undefined, none of the headers are taken into consideration.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "vary_query_params": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Relevant query parameters considered for the cache key. If undefined, all params are taken into consideration.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginProxyCache Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_proxy_cache_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "bypass_on_err": {
                      "type": "bool",
                      "description": "Unhandled errors while trying to retrieve a cache entry (such as redis down) are resolved with `Bypass`, with the request going upstream. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_control": {
                      "type": "bool",
                      "description": "When enabled, respect the Cache-Control behaviors defined in RFC7234. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache_ttl": {
                      "type": "number",
                      "description": "TTL in seconds of cache entities. Default: 300",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "content_type": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Upstream response content types considered cacheable. The plugin performs an **exact match** against each specified value; for example, if the upstream is expected to respond with a `application/json; charset=utf-8` content-type, the plugin configuration must contain said value or a `Bypass` cache status is returned.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "ignore_uri_case": {
                      "type": "bool",
                      "description": "Determines whether to treat URIs as case sensitive. By default, case sensitivity is enabled. If set to true, requests are cached while ignoring case sensitivity in the URI. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "memory": {
                      "nested_type": {
                        "attributes": {
                          "dictionary_name": {
                            "type": "string",
                            "description": "The name of the shared dictionary in which to hold cache entities when the memory strategy is selected. Note that this dictionary currently must be defined manually in the Kong Nginx template. Default: \"kong_db_cache\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "request_method": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Downstream request methods considered cacheable. Available options: `HEAD`, `GET`, `POST`, `PATCH`, `PUT`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_code": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "Upstream response status code considered cacheable. The integers must be a value between 100 and 900.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_headers": {
                      "nested_type": {
                        "attributes": {
                          "age": {
                            "type": "bool",
                            "description": "Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "x_cache_key": {
                            "type": "bool",
                            "description": "Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "x_cache_status": {
                            "type": "bool",
                            "description": "Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Caching related diagnostic headers that should be included in cached responses",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "storage_ttl": {
                      "type": "number",
                      "description": "Number of seconds to keep resources in the storage backend. This value is independent of `cache_ttl` or resource TTLs defined by Cache-Control behaviors.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The backing data store in which to hold cache entities. Accepted values are: `memory` and `redis`. must be one of [\"memory\", \"redis\"]",
                      "description_kind": "plain",
                      "required": true
                    },
                    "vary_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Relevant headers considered for the cache key. If undefined, none of the headers are taken into consideration.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "vary_query_params": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Relevant query parameters considered for the cache key. If undefined, all params are taken into consideration. By default, the max number of params accepted is 100. You can change this value via the `lua_max_post_args` in `kong.conf`.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginProxyCacheAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_rate_limiting": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "day": {
                      "type": "number",
                      "description": "The number of HTTP requests that can be made per day.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "error_code": {
                      "type": "number",
                      "description": "Set a custom error code to return when the rate limit is exceeded. Default: 429",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_message": {
                      "type": "string",
                      "description": "Set a custom error message to return when the rate limit is exceeded. Default: \"API rate limit exceeded\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "fault_tolerant": {
                      "type": "bool",
                      "description": "A boolean value that determines if the requests should be proxied even if Kong has troubles connecting a third-party data store. If `true`, requests will be proxied anyway, effectively disabling the rate-limiting function until the data store is working again. If `false`, then the clients will see `500` errors. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_name": {
                      "type": "string",
                      "description": "A string representing an HTTP header name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_client_headers": {
                      "type": "bool",
                      "description": "Optionally hide informative response headers. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hour": {
                      "type": "number",
                      "description": "The number of HTTP requests that can be made per hour.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "limit_by": {
                      "type": "string",
                      "description": "The entity that is used when aggregating the limits. Default: \"consumer\"; must be one of [\"consumer\", \"consumer-group\", \"credential\", \"header\", \"ip\", \"path\", \"service\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "minute": {
                      "type": "number",
                      "description": "The number of HTTP requests that can be made per minute.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "month": {
                      "type": "number",
                      "description": "The number of HTTP requests that can be made per month.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "policy": {
                      "type": "string",
                      "description": "The rate-limiting policies to use for retrieving and incrementing the limits. Default: \"local\"; must be one of [\"cluster\", \"local\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Redis configuration",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "second": {
                      "type": "number",
                      "description": "The number of HTTP requests that can be made per second.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "sync_rate": {
                      "type": "number",
                      "description": "How often to sync counter data to the central data store. A value of -1 results in synchronous behavior. Default: -1",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "year": {
                      "type": "number",
                      "description": "The number of HTTP requests that can be made per year.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRateLimiting Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_rate_limiting_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "compound_identifier": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "Similar to `identifer`, but supports combining multiple items. The priority of `compound_identifier` is higher than `identifier`, which means if `compound_identifer` is set, it will be used, otherwise `identifier` will be used.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "consumer_groups": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of consumer groups allowed to override the rate limiting settings for the given Route or Service. Required if `enforce_consumer_groups` is set to `true`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "dictionary_name": {
                      "type": "string",
                      "description": "The shared dictionary where counters are stored. When the plugin is configured to synchronize counter data externally (that is `config.strategy` is `cluster` or `redis` and `config.sync_rate` isn't `-1`), this dictionary serves as a buffer to populate counters in the data store on each synchronization cycle. Default: \"kong_rate_limiting_counters\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "disable_penalty": {
                      "type": "bool",
                      "description": "If set to `true`, this doesn't count denied requests (status = `429`). If set to `false`, all requests, including denied ones, are counted. This parameter only affects the `sliding` window_type. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "enforce_consumer_groups": {
                      "type": "bool",
                      "description": "Determines if consumer groups are allowed to override the rate limiting settings for the given Route or Service. Flipping `enforce_consumer_groups` from `true` to `false` disables the group override, but does not clear the list of consumer groups. You can then flip `enforce_consumer_groups` to `true` to re-enforce the groups. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_code": {
                      "type": "number",
                      "description": "Set a custom error code to return when the rate limit is exceeded. Default: 429",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_message": {
                      "type": "string",
                      "description": "Set a custom error message to return when the rate limit is exceeded. Default: \"API rate limit exceeded\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_name": {
                      "type": "string",
                      "description": "A string representing an HTTP header name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_client_headers": {
                      "type": "bool",
                      "description": "Optionally hide informative response headers that would otherwise provide information about the current status of limits and counters. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "identifier": {
                      "type": "string",
                      "description": "The type of identifier used to generate the rate limit key. Defines the scope used to increment the rate limiting counters. Can be `ip`, `credential`, `consumer`, `service`, `header`, `path` or `consumer-group`. Note if `identifier` is `consumer-group`, the plugin must be applied on a consumer group entity. Because a consumer may belong to multiple consumer groups, the plugin needs to know explicitly which consumer group to limit the rate. Default: \"consumer\"; must be one of [\"consumer\", \"consumer-group\", \"credential\", \"header\", \"ip\", \"path\", \"service\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "limit": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "One or more requests-per-window limits to apply. There must be a matching number of window limits and sizes specified.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "lock_dictionary_name": {
                      "type": "string",
                      "description": "The shared dictionary where concurrency control locks are stored. The default shared dictionary is `kong_locks`. The shared dictionary should be declare in nginx-kong.conf. Default: \"kong_locks\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The rate limiting library namespace to use for this plugin instance. Counter data and sync configuration is isolated in each namespace. NOTE: For the plugin instances sharing the same namespace, all the configurations that are required for synchronizing counters, e.g. `strategy`, `redis`, `sync_rate`, `dictionary_name`, need to be the same.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "redis_proxy_type": {
                            "type": "string",
                            "description": "If the `connection_is_proxied` is enabled, this field indicates the proxy type and version you are using. For example, you can enable this optioin when you want authentication between Kong and Envoy proxy. must be \"envoy_v1.31\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "retry_after_jitter_max": {
                      "type": "number",
                      "description": "The upper bound of a jitter (random delay) in seconds to be added to the `Retry-After` header of denied requests (status = `429`) in order to prevent all the clients from coming back at the same time. The lower bound of the jitter is `0`; in this case, the `Retry-After` header is equal to the `RateLimit-Reset` header. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The rate-limiting strategy to use for retrieving and incrementing the limits. Available values are: `local` and `cluster`. Default: \"local\"; must be one of [\"cluster\", \"local\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "sync_rate": {
                      "type": "number",
                      "description": "How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 will sync the counters in the specified number of seconds. The minimum allowed interval is 0.02 seconds (20ms).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "window_size": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "One or more window sizes to apply a limit to (defined in seconds). There must be a matching number of window limits and sizes specified.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "window_type": {
                      "type": "string",
                      "description": "Sets the time window type to either `sliding` (default) or `fixed`. Sliding windows apply the rate limiting logic while taking into account previous hit rates (from the window that immediately precedes the current) using a dynamic weight. Fixed windows consist of buckets that are statically assigned to a definitive time range, each request is mapped to only one fixed window based on its timestamp and will affect only that window's counters. Default: \"sliding\"; must be one of [\"fixed\", \"sliding\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRateLimitingAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_redirect": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "keep_incoming_path": {
                      "type": "bool",
                      "description": "Use the incoming request's path and query string in the redirect URL. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The URL to redirect to",
                      "description_kind": "plain",
                      "required": true
                    },
                    "status_code": {
                      "type": "number",
                      "description": "The response code to send. Must be an integer between 100 and 599. Default: 301",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRedirect Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_request_callout": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "cache": {
                      "nested_type": {
                        "attributes": {
                          "cache_ttl": {
                            "type": "number",
                            "description": "TTL in seconds of cache entities. Default: 300",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "memory": {
                            "nested_type": {
                              "attributes": {
                                "dictionary_name": {
                                  "type": "string",
                                  "description": "The name of the shared dictionary in which to hold cache entities when the memory strategy is selected. Note that this dictionary currently must be defined manually in the Kong Nginx template. Default: \"kong_db_cache\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "redis": {
                            "nested_type": {
                              "attributes": {
                                "cluster_max_redirections": {
                                  "type": "number",
                                  "description": "Maximum retry attempts for redirection. Default: 5",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "cluster_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "ip": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "connect_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "connection_is_proxied": {
                                  "type": "bool",
                                  "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "database": {
                                  "type": "number",
                                  "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "keepalive_backlog": {
                                  "type": "number",
                                  "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "keepalive_pool_size": {
                                  "type": "number",
                                  "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "read_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "send_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_master": {
                                  "type": "string",
                                  "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_password": {
                                  "type": "string",
                                  "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_role": {
                                  "type": "string",
                                  "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_username": {
                                  "type": "string",
                                  "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "server_name": {
                                  "type": "string",
                                  "description": "A string representing an SNI (server name indication) value for TLS.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "If set to true, uses SSL to connect to Redis. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "username": {
                                  "type": "string",
                                  "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "strategy": {
                            "type": "string",
                            "description": "The backing data store in which to hold cache entities. Accepted values are: `off`, `memory`, and `redis`. Default: \"off\"; must be one of [\"memory\", \"off\", \"redis\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Plugin global caching configuration.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "callouts": {
                      "nested_type": {
                        "attributes": {
                          "cache": {
                            "nested_type": {
                              "attributes": {
                                "bypass": {
                                  "type": "bool",
                                  "description": "If `true`, skips caching the callout response. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Callout caching configuration. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "depends_on": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "An array of callout names the current callout depends on. This dependency list determines the callout execution order via a topological sorting algorithm.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "A string identifier for a callout. A callout object is referenceable via its name in the `kong.ctx.shared.callouts.<name>`. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "request": {
                            "nested_type": {
                              "attributes": {
                                "body": {
                                  "nested_type": {
                                    "attributes": {
                                      "custom": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "The custom body fields to be added to the callout HTTP request. Values can contain Lua expressions in the form $(some_lua_expression). The syntax is based on `request-transformer-advanced` templates.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "decode": {
                                        "type": "bool",
                                        "description": "If `true`, decodes the request's body and make it available for customizations. Only JSON content type is supported. Default: false",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "forward": {
                                        "type": "bool",
                                        "description": "If `true`, forwards the incoming request's body to the callout request. Default: false",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Callout request body customizations. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "by_lua": {
                                  "type": "string",
                                  "description": "Lua code that executes before the callout request is made. **Warning** can impact system behavior. Standard Lua sandboxing restrictions apply.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "error": {
                                  "nested_type": {
                                    "attributes": {
                                      "error_response_code": {
                                        "type": "number",
                                        "description": "The error code to respond with if `on_error` is `fail` or if `retries` is achieved. Default: 400",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "error_response_msg": {
                                        "type": "string",
                                        "description": "The error mesasge to respond with if `on_error` is set to `fail` or if `retries` is achieved. Templating with Lua expressions is supported. Default: \"service callout error\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "http_statuses": {
                                        "type": [
                                          "list",
                                          "number"
                                        ],
                                        "description": "The list of HTTP status codes considered errors under the error handling policy.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "on_error": {
                                        "type": "string",
                                        "description": "Default: \"fail\"; must be one of [\"continue\", \"fail\", \"retry\"]",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "retries": {
                                        "type": "number",
                                        "description": "The number of retries the plugin will attempt on TCP and HTTP errors if `on_error` is set to `retry`. Default: 2",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "The error handling policy the plugin will apply to TCP and HTTP errors. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "headers": {
                                  "nested_type": {
                                    "attributes": {
                                      "custom": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "The custom headers to be added in the callout HTTP request. Values can contain Lua expressions in the form `$(some_lua_expression)`. The syntax is based on `request-transformer-advanced` templates.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "forward": {
                                        "type": "bool",
                                        "description": "If `true`, forwards the incoming request's headers to the callout request. Default: false",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Callout request header customizations. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "http_opts": {
                                  "nested_type": {
                                    "attributes": {
                                      "proxy": {
                                        "nested_type": {
                                          "attributes": {
                                            "auth_password": {
                                              "type": "string",
                                              "description": "The password to authenticate with, if the forward proxy is protected by basic authentication.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "auth_username": {
                                              "type": "string",
                                              "description": "The username to authenticate with, if the forward proxy is protected by basic authentication.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "http_proxy": {
                                              "type": "string",
                                              "description": "The HTTP proxy URL. This proxy server will be used for HTTP requests.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "https_proxy": {
                                              "type": "string",
                                              "description": "The HTTPS proxy URL. This proxy server will be used for HTTPS requests.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description": "Proxy settings.",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "ssl_server_name": {
                                        "type": "string",
                                        "description": "The SNI used in the callout request. Defaults to host if omitted.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "ssl_verify": {
                                        "type": "bool",
                                        "description": "If set to `true`, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "timeouts": {
                                        "nested_type": {
                                          "attributes": {
                                            "connect": {
                                              "type": "number",
                                              "description": "The socket connect timeout.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "read": {
                                              "type": "number",
                                              "description": "The socket read timeout.",
                                              "description_kind": "plain",
                                              "optional": true
                                            },
                                            "write": {
                                              "type": "number",
                                              "description": "The socket write timeout.",
                                              "description_kind": "plain",
                                              "optional": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description": "Socket timeouts in milliseconds. All or none must be set.",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "HTTP connection parameters. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "method": {
                                  "type": "string",
                                  "description": "The HTTP method that will be requested. Default: \"GET\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "query": {
                                  "nested_type": {
                                    "attributes": {
                                      "custom": {
                                        "type": [
                                          "map",
                                          "string"
                                        ],
                                        "description": "The custom query params to be added in the callout HTTP request. Values can contain Lua expressions in the form `$(some_lua_expression)`. The syntax is based on `request-transformer-advanced` templates.",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "forward": {
                                        "type": "bool",
                                        "description": "If `true`, forwards the incoming request's query params to the callout request. Default: false",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Callout request query param customizations. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL that will be requested. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "The customizations for the callout request. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "response": {
                            "nested_type": {
                              "attributes": {
                                "body": {
                                  "nested_type": {
                                    "attributes": {
                                      "decode": {
                                        "type": "bool",
                                        "description": "If `true`, decodes the response body before storing into the context. Only JSON is supported. Default: false",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "store": {
                                        "type": "bool",
                                        "description": "If `false`, skips storing the callout response body into kong.ctx.shared.callouts.<name>.response.body. Default: true",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "by_lua": {
                                  "type": "string",
                                  "description": "Lua code that executes after the callout response is received, before caching takes place. Can produce side effects. Standard Lua sandboxing restrictions apply.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "headers": {
                                  "nested_type": {
                                    "attributes": {
                                      "store": {
                                        "type": "bool",
                                        "description": "If `false`, skips storing the callout response headers into kong.ctx.shared.callouts.<name>.response.headers. Default: true",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Callout response header customizations. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Configurations of callout response handling. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "A collection of callout objects, where each object represents an HTTP request made in the context of a proxy request.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "upstream": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "nested_type": {
                              "attributes": {
                                "custom": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "The custom body fields to be added in the upstream request body. Values can contain Lua expressions in the form $(some_lua_expression). The syntax is based on `request-transformer-advanced` templates.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "decode": {
                                  "type": "bool",
                                  "description": "If `true`, decodes the request's body to make it available for upstream by_lua customizations. Only JSON content type is supported. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "forward": {
                                  "type": "bool",
                                  "description": "If `false`, skips forwarding the incoming request's body to the upstream request. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Callout request body customizations.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "by_lua": {
                            "type": "string",
                            "description": "Lua code that executes before the upstream request is made. Can produce side effects. Standard Lua sandboxing restrictions apply.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "headers": {
                            "nested_type": {
                              "attributes": {
                                "custom": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "The custom headers to be added in the upstream HTTP request. Values can contain Lua expressions in the form $(some_lua_expression). The syntax is based on `request-transformer-advanced` templates.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "forward": {
                                  "type": "bool",
                                  "description": "If `false`, does not forward request headers to upstream request. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Callout request header customizations.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "query": {
                            "nested_type": {
                              "attributes": {
                                "custom": {
                                  "type": [
                                    "map",
                                    "string"
                                  ],
                                  "description": "The custom query params to be added in the upstream HTTP request. Values can contain Lua expressions in the form `$(some_lua_expression)`. The syntax is based on `request-transformer-advanced` templates.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "forward": {
                                  "type": "bool",
                                  "description": "If `false`, does not forward request query params to upstream request. Default: true",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Upstream request query param customizations.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Customizations to the upstream request.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRequestCallout Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_request_size_limiting": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allowed_payload_size": {
                      "type": "number",
                      "description": "Allowed request payload size in megabytes. Default is `128` megabytes (128000000 bytes). Default: 128",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "require_content_length": {
                      "type": "bool",
                      "description": "Set to `true` to ensure a valid `Content-Length` header exists before reading the request body. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "size_unit": {
                      "type": "string",
                      "description": "Size unit can be set either in `bytes`, `kilobytes`, or `megabytes` (default). This configuration is not available in versions prior to Kong Gateway 1.3 and Kong Gateway (OSS) 2.0. Default: \"megabytes\"; must be one of [\"bytes\", \"kilobytes\", \"megabytes\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRequestSizeLimiting Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_request_termination": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "body": {
                      "type": "string",
                      "description": "The raw response body to send. This is mutually exclusive with the `config.message` field.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "content_type": {
                      "type": "string",
                      "description": "Content type of the raw response configured with `config.body`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "echo": {
                      "type": "bool",
                      "description": "When set, the plugin will echo a copy of the request back to the client. The main usecase for this is debugging. It can be combined with `trigger` in order to debug requests on live systems without disturbing real traffic. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "message": {
                      "type": "string",
                      "description": "The message to send, if using the default response generator.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "status_code": {
                      "type": "number",
                      "description": "The response code to send. Must be an integer between 100 and 599. Default: 503",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "trigger": {
                      "type": "string",
                      "description": "A string representing an HTTP header name.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRequestTermination Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_request_transformer": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "add": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "append": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "http_method": {
                      "type": "string",
                      "description": "A string representing an HTTP method, such as GET, POST, PUT, or DELETE. The string must contain only uppercase letters.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "remove": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "rename": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "replace": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "uri": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRequestTransformer Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_request_transformer_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "add": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json_types": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "append": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json_types": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "dots_in_keys": {
                      "type": "bool",
                      "description": "Specify whether dots (for example, `customers.info.phone`) should be treated as part of a property name or used to descend into nested JSON objects.  See [Arrays and nested objects](#arrays-and-nested-objects). Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "http_method": {
                      "type": "string",
                      "description": "A string representing an HTTP method, such as GET, POST, PUT, or DELETE. The string must contain only uppercase letters.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "remove": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "rename": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "replace": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json_types": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "querystring": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "uri": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRequestTransformerAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_request_validator": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allowed_content_types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of allowed content types. The value can be configured with the `charset` parameter. For example, `application/json; charset=UTF-8`.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "body_schema": {
                      "type": "string",
                      "description": "The request body schema specification. One of `body_schema` or `parameter_schema` must be specified.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "content_type_parameter_validation": {
                      "type": "bool",
                      "description": "Determines whether to enable parameters validation of request content-type. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "parameter_schema": {
                      "nested_type": {
                        "attributes": {
                          "explode": {
                            "type": "bool",
                            "description": "Required when `schema` and `style` are set. When `explode` is `true`, parameter values of type `array` or `object` generate separate parameters for each value of the array or key-value pair of the map. For other types of parameters, this property has no effect.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "in": {
                            "type": "string",
                            "description": "The location of the parameter. Not Null; must be one of [\"header\", \"path\", \"query\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the parameter. Parameter names are case-sensitive, and correspond to the parameter name used by the `in` property. If `in` is `path`, the `name` field MUST correspond to the named capture group from the configured `route`. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "required": {
                            "type": "bool",
                            "description": "Determines whether this parameter is mandatory. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "schema": {
                            "type": "string",
                            "description": "Required when `style` and `explode` are set. This is the schema defining the type used for the parameter. It is validated using `draft4` for JSON Schema draft 4 compliant validator. In addition to being a valid JSON Schema, the parameter schema MUST have a top-level `type` property to enable proper deserialization before validating.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "style": {
                            "type": "string",
                            "description": "Required when `schema` and `explode` are set. Describes how the parameter value will be deserialized depending on the type of the parameter value. must be one of [\"deepObject\", \"form\", \"label\", \"matrix\", \"pipeDelimited\", \"simple\", \"spaceDelimited\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Array of parameter validator specification. One of `body_schema` or `parameter_schema` must be specified.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "verbose_response": {
                      "type": "bool",
                      "description": "If enabled, the plugin returns more verbose and detailed validation errors. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Which validator to use. Supported values are `kong` (default) for using Kong's own schema validator, or `draft4`, `draft7`, `draft201909`, and `draft202012` for using their respective JSON Schema Draft compliant validators. Default: \"kong\"; must be one of [\"draft201909\", \"draft202012\", \"draft4\", \"draft6\", \"draft7\", \"kong\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRequestValidator Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_response_ratelimiting": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "block_on_first_violation": {
                      "type": "bool",
                      "description": "A boolean value that determines if the requests should be blocked as soon as one limit is being exceeded. This will block requests that are supposed to consume other limits too. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "fault_tolerant": {
                      "type": "bool",
                      "description": "A boolean value that determines if the requests should be proxied even if Kong has troubles connecting a third-party datastore. If `true`, requests will be proxied anyway, effectively disabling the rate-limiting function until the datastore is working again. If `false`, then the clients will see `500` errors. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "header_name": {
                      "type": "string",
                      "description": "The name of the response header used to increment the counters. Default: \"x-kong-limit\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hide_client_headers": {
                      "type": "bool",
                      "description": "Optionally hide informative response headers. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "limit_by": {
                      "type": "string",
                      "description": "The entity that will be used when aggregating the limits: `consumer`, `credential`, `ip`. If the `consumer` or the `credential` cannot be determined, the system will always fallback to `ip`. Default: \"consumer\"; must be one of [\"consumer\", \"credential\", \"ip\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "limits": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A map that defines rate limits for the plugin.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "policy": {
                      "type": "string",
                      "description": "The rate-limiting policies to use for retrieving and incrementing the limits. Default: \"local\"; must be one of [\"cluster\", \"local\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Redis configuration",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginResponseRatelimiting Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_response_transformer": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "add": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json_types": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of JSON type names. Specify the types of the JSON values returned when appending\nJSON properties. Each string element can be one of: boolean, number, or string.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "append": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json_types": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of JSON type names. Specify the types of the JSON values returned when appending\nJSON properties. Each string element can be one of: boolean, number, or string.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "remove": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "rename": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "replace": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json_types": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of JSON type names. Specify the types of the JSON values returned when appending\nJSON properties. Each string element can be one of: boolean, number, or string.",
                            "description_kind": "markdown",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginResponseTransformer Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_response_transformer_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "add": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "if_status": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json_types": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allow": {
                      "nested_type": {
                        "attributes": {
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "append": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "if_status": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json_types": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "dots_in_keys": {
                      "type": "bool",
                      "description": "Whether dots (for example, `customers.info.phone`) should be treated as part of a property name or used to descend into nested JSON objects.. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "remove": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "if_status": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "rename": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "if_status": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "replace": {
                      "nested_type": {
                        "attributes": {
                          "body": {
                            "type": "string",
                            "description": "String with which to replace the entire response body.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "headers": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "if_status": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json_types": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "transform": {
                      "nested_type": {
                        "attributes": {
                          "functions": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "if_status": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "json": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginResponseTransformerAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_route_by_header": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "rules": {
                      "nested_type": {
                        "attributes": {
                          "condition": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "upstream_name": {
                            "type": "string",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "Route by header rules.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRouteByHeader Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_route_transformer_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "escape_path": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "host": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "port": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginRouteTransformerAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_saml": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer. If not set, a Kong Consumer must exist for the SAML IdP user credentials, mapping the username format to the Kong Consumer username.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "assertion_consumer_path": {
                      "type": "string",
                      "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
                      "description_kind": "plain",
                      "required": true
                    },
                    "idp_certificate": {
                      "type": "string",
                      "description": "The public certificate provided by the IdP. This is used to validate responses from the IdP.  Only include the contents of the certificate. Do not include the header (`BEGIN CERTIFICATE`) and footer (`END CERTIFICATE`) lines.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "idp_sso_url": {
                      "type": "string",
                      "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "issuer": {
                      "type": "string",
                      "description": "The unique identifier of the IdP application. Formatted as a URL containing information about the IdP so the SP can validate that the SAML assertions it receives are issued from the correct IdP.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "nameid_format": {
                      "type": "string",
                      "description": "The requested `NameId` format. Options available are: - `Unspecified` - `EmailAddress` - `Persistent` - `Transient`. Default: \"EmailAddress\"; must be one of [\"EmailAddress\", \"Persistent\", \"Transient\", \"Unspecified\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "prefix": {
                            "type": "string",
                            "description": "The Redis session key prefix.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "socket": {
                            "type": "string",
                            "description": "The Redis unix socket path.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "request_digest_algorithm": {
                      "type": "string",
                      "description": "The digest algorithm for Authn requests: - `SHA256` - `SHA1`. Default: \"SHA256\"; must be one of [\"SHA1\", \"SHA256\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "request_signature_algorithm": {
                      "type": "string",
                      "description": "The signature algorithm for signing Authn requests. Options available are: - `SHA256` - `SHA384` - `SHA512`. Default: \"SHA256\"; must be one of [\"SHA256\", \"SHA384\", \"SHA512\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "request_signing_certificate": {
                      "type": "string",
                      "description": "The certificate for signing requests.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "request_signing_key": {
                      "type": "string",
                      "description": "The private key for signing requests.  If this parameter is set, requests sent to the IdP are signed.  The `request_signing_certificate` parameter must be set as well.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "response_digest_algorithm": {
                      "type": "string",
                      "description": "The algorithm for verifying digest in SAML responses: - `SHA256` - `SHA1`. Default: \"SHA256\"; must be one of [\"SHA1\", \"SHA256\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "response_encryption_key": {
                      "type": "string",
                      "description": "The private encryption key required to decrypt encrypted assertions.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "response_signature_algorithm": {
                      "type": "string",
                      "description": "The algorithm for validating signatures in SAML responses. Options available are: - `SHA256` - `SHA384` - `SHA512`. Default: \"SHA256\"; must be one of [\"SHA256\", \"SHA384\", \"SHA512\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_absolute_timeout": {
                      "type": "number",
                      "description": "The session cookie absolute timeout in seconds. Specifies how long the session can be used until it is no longer valid. Default: 86400",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_audience": {
                      "type": "string",
                      "description": "The session audience, for example \"my-application\". Default: \"default\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_domain": {
                      "type": "string",
                      "description": "The session cookie domain flag.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_cookie_http_only": {
                      "type": "bool",
                      "description": "Forbids JavaScript from accessing the cookie, for example, through the `Document.cookie` property. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_name": {
                      "type": "string",
                      "description": "The session cookie name. Default: \"session\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_path": {
                      "type": "string",
                      "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes). Default: \"/\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_same_site": {
                      "type": "string",
                      "description": "Controls whether a cookie is sent with cross-origin requests, providing some protection against cross-site request forgery attacks. Default: \"Lax\"; must be one of [\"Default\", \"Lax\", \"None\", \"Strict\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_cookie_secure": {
                      "type": "bool",
                      "description": "The cookie is only sent to the server when a request is made with the https:scheme (except on localhost), and therefore is more resistant to man-in-the-middle attacks.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_enforce_same_subject": {
                      "type": "bool",
                      "description": "When set to `true`, audiences are forced to share the same subject. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_hash_storage_key": {
                      "type": "bool",
                      "description": "When set to `true`, the storage key (session ID) is hashed for extra security. Hashing the storage key means it is impossible to decrypt data from the storage without a cookie. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_hash_subject": {
                      "type": "bool",
                      "description": "When set to `true`, the value of subject is hashed before being stored. Only applies when `session_store_metadata` is enabled. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_idling_timeout": {
                      "type": "number",
                      "description": "The session cookie idle time in seconds. Default: 900",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_memcached_host": {
                      "type": "string",
                      "description": "The memcached host. Default: \"127.0.0.1\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_memcached_port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 11211",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_memcached_prefix": {
                      "type": "string",
                      "description": "The memcached session key prefix.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_memcached_socket": {
                      "type": "string",
                      "description": "The memcached unix socket path.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_remember": {
                      "type": "bool",
                      "description": "Enables or disables persistent sessions. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_remember_absolute_timeout": {
                      "type": "number",
                      "description": "Persistent session absolute timeout in seconds. Default: 2592000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_remember_cookie_name": {
                      "type": "string",
                      "description": "Persistent session cookie name. Default: \"remember\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_remember_rolling_timeout": {
                      "type": "number",
                      "description": "Persistent session rolling timeout in seconds. Default: 604800",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_request_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_response_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "optional": true
                    },
                    "session_rolling_timeout": {
                      "type": "number",
                      "description": "The session cookie absolute timeout in seconds. Specifies how long the session can be used until it is no longer valid. Default: 3600",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_secret": {
                      "type": "string",
                      "description": "The session secret. This must be a random string of 32 characters from the base64 alphabet (letters, numbers, `/`, `_` and `+`). It is used as the secret key for encrypting session data as well as state information that is sent to the IdP in the authentication exchange.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "session_storage": {
                      "type": "string",
                      "description": "The session storage for session data: - `cookie`: stores session data with the session cookie. The session cannot be invalidated or revoked without changing the session secret, but is stateless, and doesn't require a database. - `memcached`: stores session data in memcached - `redis`: stores session data in Redis. Default: \"cookie\"; must be one of [\"cookie\", \"memcache\", \"memcached\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "session_store_metadata": {
                      "type": "bool",
                      "description": "Configures whether or not session metadata should be stored. This includes information about the active sessions for the `specific_audience` belonging to a specific subject. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "validate_assertion_signature": {
                      "type": "bool",
                      "description": "Enable signature validation for SAML responses. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginSaml Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_service_protection": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "dictionary_name": {
                      "type": "string",
                      "description": "The shared dictionary where counters are stored. When the plugin is configured to synchronize counter data externally (that is `config.strategy` is `cluster` or `redis` and `config.sync_rate` isn't `-1`), this dictionary serves as a buffer to populate counters in the data store on each synchronization cycle. Default: \"kong_rate_limiting_counters\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "disable_penalty": {
                      "type": "bool",
                      "description": "If set to `true`, this doesn't count denied requests (status = `429`). If set to `false`, all requests, including denied ones, are counted. This parameter only affects the `sliding` window_type. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_code": {
                      "type": "number",
                      "description": "Set a custom error code to return when the rate limit is exceeded. Default: 429",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "error_message": {
                      "type": "string",
                      "description": "Set a custom error message to return when the rate limit is exceeded. Default: \"API rate limit exceeded\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hide_client_headers": {
                      "type": "bool",
                      "description": "Optionally hide informative response headers that would otherwise provide information about the current status of limits and counters. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "limit": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "One or more requests-per-window limits to apply. There must be a matching number of window limits and sizes specified.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "lock_dictionary_name": {
                      "type": "string",
                      "description": "The shared dictionary where concurrency control locks are stored. The default shared dictionary is `kong_locks`. The shared dictionary should be declared in nginx-kong.conf. Default: \"kong_locks\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "namespace": {
                      "type": "string",
                      "description": "The rate limiting library namespace to use for this plugin instance. Counter data and sync configuration is isolated in each namespace. NOTE: For the plugin instances sharing the same namespace, all the configurations that are required for synchronizing counters, e.g. `strategy`, `redis`, `sync_rate`, `dictionary_name`, need to be the same.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "redis": {
                      "nested_type": {
                        "attributes": {
                          "cluster_max_redirections": {
                            "type": "number",
                            "description": "Maximum retry attempts for redirection. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "cluster_nodes": {
                            "nested_type": {
                              "attributes": {
                                "ip": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connection_is_proxied": {
                            "type": "bool",
                            "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "database": {
                            "type": "number",
                            "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "keepalive_backlog": {
                            "type": "number",
                            "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keepalive_pool_size": {
                            "type": "number",
                            "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "port": {
                            "type": "number",
                            "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "read_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "send_timeout": {
                            "type": "number",
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_master": {
                            "type": "string",
                            "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_nodes": {
                            "nested_type": {
                              "attributes": {
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_password": {
                            "type": "string",
                            "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "sentinel_role": {
                            "type": "string",
                            "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sentinel_username": {
                            "type": "string",
                            "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "server_name": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl": {
                            "type": "bool",
                            "description": "If set to true, uses SSL to connect to Redis. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "retry_after_jitter_max": {
                      "type": "number",
                      "description": "The upper bound of a jitter (random delay) in seconds to be added to the `Retry-After` header of denied requests (status = `429`) in order to prevent all the clients from coming back at the same time. The lower bound of the jitter is `0`; in this case, the `Retry-After` header is equal to the `RateLimit-Reset` header. Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The rate-limiting strategy to use for retrieving and incrementing the limits. Available values are: `local` and `cluster`. Default: \"local\"; must be one of [\"cluster\", \"local\", \"redis\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "sync_rate": {
                      "type": "number",
                      "description": "How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 will sync the counters in the specified number of seconds. The minimum allowed interval is 0.02 seconds (20ms).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "window_size": {
                      "type": [
                        "list",
                        "number"
                      ],
                      "description": "One or more window sizes to apply a limit to (defined in seconds). There must be a matching number of window limits and sizes specified.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "window_type": {
                      "type": "string",
                      "description": "Sets the time window type to either `sliding` (default) or `fixed`. Sliding windows apply the rate limiting logic while taking into account previous hit rates (from the window that immediately precedes the current) using a dynamic weight. Fixed windows consist of buckets that are statically assigned to a definitive time range, each request is mapped to only one fixed window based on its timestamp and will affect only that window's counters. Default: \"sliding\"; must be one of [\"fixed\", \"sliding\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginServiceProtection Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_session": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "absolute_timeout": {
                      "type": "number",
                      "description": "The session cookie absolute timeout, in seconds. Specifies how long the session can be used until it is no longer valid. Default: 86400",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "audience": {
                      "type": "string",
                      "description": "The session audience, which is the intended target application. For example `\"my-application\"`. Default: \"default\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cookie_domain": {
                      "type": "string",
                      "description": "The domain with which the cookie is intended to be exchanged.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cookie_http_only": {
                      "type": "bool",
                      "description": "Applies the `HttpOnly` tag so that the cookie is sent only to a server. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cookie_name": {
                      "type": "string",
                      "description": "The name of the cookie. Default: \"session\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cookie_path": {
                      "type": "string",
                      "description": "The resource in the host where the cookie is available. Default: \"/\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cookie_same_site": {
                      "type": "string",
                      "description": "Determines whether and how a cookie may be sent with cross-site requests. Default: \"Strict\"; must be one of [\"Default\", \"Lax\", \"None\", \"Strict\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cookie_secure": {
                      "type": "bool",
                      "description": "Applies the Secure directive so that the cookie may be sent to the server only with an encrypted request over the HTTPS protocol. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hash_subject": {
                      "type": "bool",
                      "description": "Whether to hash or not the subject when store_metadata is enabled. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "idling_timeout": {
                      "type": "number",
                      "description": "The session cookie idle time, in seconds. Default: 900",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "logout_methods": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A set of HTTP methods that the plugin will respond to.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "logout_post_arg": {
                      "type": "string",
                      "description": "The POST argument passed to logout requests. Do not change this property. Default: \"session_logout\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "logout_query_arg": {
                      "type": "string",
                      "description": "The query argument passed to logout requests. Default: \"session_logout\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "read_body_for_logout": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "remember": {
                      "type": "bool",
                      "description": "Enables or disables persistent sessions. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "remember_absolute_timeout": {
                      "type": "number",
                      "description": "The persistent session absolute timeout limit, in seconds. Default: 2592000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "remember_cookie_name": {
                      "type": "string",
                      "description": "Persistent session cookie name. Use with the `remember` configuration parameter. Default: \"remember\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "remember_rolling_timeout": {
                      "type": "number",
                      "description": "The persistent session rolling timeout window, in seconds. Default: 604800",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "request_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of information to include, as headers, in the response to the downstream.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "response_headers": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of information to include, as headers, in the response to the downstream.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rolling_timeout": {
                      "type": "number",
                      "description": "The session cookie rolling timeout, in seconds. Specifies how long the session can be used until it needs to be renewed. Default: 3600",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "secret": {
                      "type": "string",
                      "description": "The secret that is used in keyed HMAC generation. Default: \"M5N0CyFrAZwpB7F72PpY3J4S5n3KL77fs6xMuY8b7SMc\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "stale_ttl": {
                      "type": "number",
                      "description": "The duration, in seconds, after which an old cookie is discarded, starting from the moment when the session becomes outdated and is replaced by a new one. Default: 10",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "storage": {
                      "type": "string",
                      "description": "Determines where the session data is stored. `kong`: Stores encrypted session data into Kong's current database strategy; the cookie will not contain any session data. `cookie`: Stores encrypted session data within the cookie itself. Default: \"cookie\"; must be one of [\"cookie\", \"kong\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "store_metadata": {
                      "type": "bool",
                      "description": "Whether to also store metadata of sessions, such as collecting data of sessions for a specific audience belonging to a specific subject. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginSession Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_solace_upstream": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "message": {
                      "nested_type": {
                        "attributes": {
                          "ack_timeout": {
                            "type": "number",
                            "description": "When using a non-DIRECT guaranteed delivery mode, this property sets the message acknowledgement timeout (waiting time). Default: 2000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "default_content": {
                            "type": "string",
                            "description": "When not using `forward_method`, `forward_uri`, `forward_headers` or `forward_body`, this sets the message content.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "delivery_mode": {
                            "type": "string",
                            "description": "Sets the message delivery mode. Default: \"DIRECT\"; must be one of [\"DIRECT\", \"PERSISTENT\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "destinations": {
                            "nested_type": {
                              "attributes": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the destination. You can use `$(uri_captures['topic_name']` in this field. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the destination. Default: \"QUEUE\"; must be one of [\"QUEUE\", \"TOPIC\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "The message destinations.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "dmq_eligible": {
                            "type": "bool",
                            "description": "Sets the dead message queue (DMQ) eligible property on the message. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "forward_body": {
                            "type": "bool",
                            "description": "Include the request body and the body arguments in the message. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "forward_headers": {
                            "type": "bool",
                            "description": "Include the request headers in the message. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "forward_method": {
                            "type": "bool",
                            "description": "Include the request method in the message. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "forward_uri": {
                            "type": "bool",
                            "description": "Include the request URI and the URI arguments (as in, query arguments) in the message. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "functions": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "The Lua functions that manipulates (or generates) the message being sent to Solace. The `message` variable can be used to access the current message content, and the function can return a new content.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "priority": {
                            "type": "number",
                            "description": "Sets the message priority. Default: 4",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sender_id": {
                            "type": "string",
                            "description": "Allows the application to set the content of the sender identifier. Default: \"kong\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "tracing": {
                            "type": "bool",
                            "description": "Enable or disable the tracing. This is primarily used for distributed tracing and message correlation, especially in debugging or tracking message flows across multiple systems. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "tracing_sampled": {
                            "type": "bool",
                            "description": "Indicates whether the message should be included in distributed tracing (i.e., if it should be \"sampled\" for the tracing). Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "ttl": {
                            "type": "number",
                            "description": "Sets the time to live (TTL) in milliseconds for the message. Setting the time to live to zero disables the TTL for the message. Default: 0",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The message related configuration.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "session": {
                      "nested_type": {
                        "attributes": {
                          "authentication": {
                            "nested_type": {
                              "attributes": {
                                "access_token": {
                                  "type": "string",
                                  "description": "The OAuth2 access token used with `OAUTH2` authentication scheme when connecting to an event broker.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "access_token_header": {
                                  "type": "string",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "id_token": {
                                  "type": "string",
                                  "description": "The OpenID Connect ID token used with `OAUTH2` authentication scheme when connecting to an event broker.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "id_token_header": {
                                  "type": "string",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "The password used with `BASIC` authentication scheme when connecting to an event broker.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "scheme": {
                                  "type": "string",
                                  "description": "The client authentication scheme used when connection to an event broker. Default: \"BASIC\"; must be one of [\"BASIC\", \"NONE\", \"OAUTH2\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "username": {
                                  "type": "string",
                                  "description": "The username used with `BASIC` authentication scheme when connecting to an event broker .",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "Session authentication related configuration.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "connect_timeout": {
                            "type": "number",
                            "description": "The timeout period (in milliseconds) for a connect operation to a given host (per host). Default: 3000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "host": {
                            "type": "string",
                            "description": "The IPv4 or IPv6 address or host name to connect to (see: https://docs.solace.com/API-Developer-Online-Ref-Documentation/c/index.html#host-entry).",
                            "description_kind": "plain",
                            "required": true
                          },
                          "properties": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Additional Solace session properties (each setting needs to have `SESSION_` prefix).",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl_validate_certificate": {
                            "type": "bool",
                            "description": "Indicates whether the API should validate server certificates with the trusted certificates. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "vpn_name": {
                            "type": "string",
                            "description": "The name of the Message VPN to attempt to join when connecting to an event broker.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Session related configuration.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginSolaceUpstream Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_standard_webhooks": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "secret_v1": {
                      "type": "string",
                      "description": "Webhook secret",
                      "description_kind": "plain",
                      "required": true
                    },
                    "tolerance_second": {
                      "type": "number",
                      "description": "Tolerance of the webhook timestamp in seconds. If the webhook timestamp is older than this number of seconds, it will be rejected with a '400' response. Default: 300",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginStandardWebhooks Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_statsd": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_status_codes": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of status code ranges that are allowed to be logged in metrics.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "consumer_identifier_default": {
                      "type": "string",
                      "description": "Default: \"custom_id\"; must be one of [\"consumer_id\", \"custom_id\", \"username\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "flush_timeout": {
                      "type": "number",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "The IP address or hostname of StatsD server to send data to. Default: \"localhost\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hostname_in_prefix": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "metrics": {
                      "nested_type": {
                        "attributes": {
                          "consumer_identifier": {
                            "type": "string",
                            "description": "Authenticated user detail. must be one of [\"consumer_id\", \"custom_id\", \"username\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "StatsD metric\u2019s name. Not Null; must be one of [\"cache_datastore_hits_total\", \"cache_datastore_misses_total\", \"kong_latency\", \"latency\", \"request_count\", \"request_per_user\", \"request_size\", \"response_size\", \"shdict_usage\", \"status_count\", \"status_count_per_user\", \"status_count_per_user_per_route\", \"status_count_per_workspace\", \"unique_users\", \"upstream_latency\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sample_rate": {
                            "type": "number",
                            "description": "Sampling rate",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "service_identifier": {
                            "type": "string",
                            "description": "Service detail. must be one of [\"service_host\", \"service_id\", \"service_name\", \"service_name_or_host\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "stat_type": {
                            "type": "string",
                            "description": "Determines what sort of event a metric represents. Not Null; must be one of [\"counter\", \"gauge\", \"histogram\", \"meter\", \"set\", \"timer\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "workspace_identifier": {
                            "type": "string",
                            "description": "Workspace detail. must be one of [\"workspace_id\", \"workspace_name\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of metrics to be logged.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The port of StatsD server to send data to. Default: 8125",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "prefix": {
                      "type": "string",
                      "description": "String to prefix to each metric's name. Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "queue": {
                      "nested_type": {
                        "attributes": {
                          "concurrency_limit": {
                            "type": "number",
                            "description": "The number of of queue delivery timers. -1 indicates unlimited. Default: 1; must be one of [\"-1\", \"1\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "initial_retry_delay": {
                            "type": "number",
                            "description": "Time in seconds before the initial retry is made for a failing batch. Default: 0.01",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_batch_size": {
                            "type": "number",
                            "description": "Maximum number of entries that can be processed at a time. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_bytes": {
                            "type": "number",
                            "description": "Maximum number of bytes that can be waiting on a queue, requires string content.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "max_coalescing_delay": {
                            "type": "number",
                            "description": "Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_entries": {
                            "type": "number",
                            "description": "Maximum number of entries that can be waiting on the queue. Default: 10000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_delay": {
                            "type": "number",
                            "description": "Maximum time in seconds between retries, caps exponential backoff. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_time": {
                            "type": "number",
                            "description": "Time in seconds before the queue gives up calling a failed handler for a batch. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "queue_size": {
                      "type": "number",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "retry_count": {
                      "type": "number",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "service_identifier_default": {
                      "type": "string",
                      "description": "Default: \"service_name_or_host\"; must be one of [\"service_host\", \"service_id\", \"service_name\", \"service_name_or_host\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "tag_style": {
                      "type": "string",
                      "description": "must be one of [\"dogstatsd\", \"influxdb\", \"librato\", \"signalfx\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "udp_packet_size": {
                      "type": "number",
                      "description": "Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "use_tcp": {
                      "type": "bool",
                      "description": "Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "workspace_identifier_default": {
                      "type": "string",
                      "description": "Default: \"workspace_id\"; must be one of [\"workspace_id\", \"workspace_name\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginStatsd Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_statsd_advanced": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_status_codes": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "List of status code ranges that are allowed to be logged in metrics.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "consumer_identifier_default": {
                      "type": "string",
                      "description": "The default consumer identifier for metrics. This will take effect when a metric's consumer identifier is omitted. Allowed values are `custom_id`, `consumer_id`, `username`. Default: \"custom_id\"; must be one of [\"consumer_id\", \"custom_id\", \"username\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com. Default: \"localhost\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hostname_in_prefix": {
                      "type": "bool",
                      "description": "Include the `hostname` in the `prefix` for each metric name. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "metrics": {
                      "nested_type": {
                        "attributes": {
                          "consumer_identifier": {
                            "type": "string",
                            "description": "must be one of [\"consumer_id\", \"custom_id\", \"username\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Not Null; must be one of [\"cache_datastore_hits_total\", \"cache_datastore_misses_total\", \"kong_latency\", \"latency\", \"request_count\", \"request_per_user\", \"request_size\", \"response_size\", \"shdict_usage\", \"status_count\", \"status_count_per_user\", \"status_count_per_user_per_route\", \"status_count_per_workspace\", \"unique_users\", \"upstream_latency\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "sample_rate": {
                            "type": "number",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "service_identifier": {
                            "type": "string",
                            "description": "must be one of [\"service_host\", \"service_id\", \"service_name\", \"service_name_or_host\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "stat_type": {
                            "type": "string",
                            "description": "Not Null; must be one of [\"counter\", \"gauge\", \"histogram\", \"meter\", \"set\", \"timer\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "workspace_identifier": {
                            "type": "string",
                            "description": "must be one of [\"workspace_id\", \"workspace_name\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of Metrics to be logged.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 8125",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "prefix": {
                      "type": "string",
                      "description": "String to prefix to each metric's name. Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "queue": {
                      "nested_type": {
                        "attributes": {
                          "concurrency_limit": {
                            "type": "number",
                            "description": "The number of of queue delivery timers. -1 indicates unlimited. Default: 1; must be one of [\"-1\", \"1\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "initial_retry_delay": {
                            "type": "number",
                            "description": "Time in seconds before the initial retry is made for a failing batch. Default: 0.01",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_batch_size": {
                            "type": "number",
                            "description": "Maximum number of entries that can be processed at a time. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_bytes": {
                            "type": "number",
                            "description": "Maximum number of bytes that can be waiting on a queue, requires string content.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "max_coalescing_delay": {
                            "type": "number",
                            "description": "Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_entries": {
                            "type": "number",
                            "description": "Maximum number of entries that can be waiting on the queue. Default: 10000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_delay": {
                            "type": "number",
                            "description": "Maximum time in seconds between retries, caps exponential backoff. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_time": {
                            "type": "number",
                            "description": "Time in seconds before the queue gives up calling a failed handler for a batch. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "service_identifier_default": {
                      "type": "string",
                      "description": "The default service identifier for metrics. This will take effect when a metric's service identifier is omitted. Allowed values are `service_name_or_host`, `service_id`, `service_name`, `service_host`. Default: \"service_name_or_host\"; must be one of [\"service_host\", \"service_id\", \"service_name\", \"service_name_or_host\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "udp_packet_size": {
                      "type": "number",
                      "description": "Combine UDP packet up to the size configured. If zero (0), don't combine the UDP packet. Must be a number between 0 and 65507 (inclusive). Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "use_tcp": {
                      "type": "bool",
                      "description": "Use TCP instead of UDP. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "workspace_identifier_default": {
                      "type": "string",
                      "description": "The default workspace identifier for metrics. This will take effect when a metric's workspace identifier is omitted. Allowed values are `workspace_id`, `workspace_name`. Default: \"workspace_id\"; must be one of [\"workspace_id\", \"workspace_name\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginStatsdAdvanced Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_syslog": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "client_errors_severity": {
                      "type": "string",
                      "description": "Default: \"info\"; must be one of [\"alert\", \"crit\", \"debug\", \"emerg\", \"err\", \"info\", \"notice\", \"warning\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "custom_fields_by_lua": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Lua code as a key-value map",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "facility": {
                      "type": "string",
                      "description": "The facility is used by the operating system to decide how to handle each log message. Default: \"user\"; must be one of [\"auth\", \"authpriv\", \"cron\", \"daemon\", \"ftp\", \"kern\", \"local0\", \"local1\", \"local2\", \"local3\", \"local4\", \"local5\", \"local6\", \"local7\", \"lpr\", \"mail\", \"news\", \"syslog\", \"user\", \"uucp\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "log_level": {
                      "type": "string",
                      "description": "Default: \"info\"; must be one of [\"alert\", \"crit\", \"debug\", \"emerg\", \"err\", \"info\", \"notice\", \"warning\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "server_errors_severity": {
                      "type": "string",
                      "description": "Default: \"info\"; must be one of [\"alert\", \"crit\", \"debug\", \"emerg\", \"err\", \"info\", \"notice\", \"warning\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "successful_severity": {
                      "type": "string",
                      "description": "Default: \"info\"; must be one of [\"alert\", \"crit\", \"debug\", \"emerg\", \"err\", \"info\", \"notice\", \"warning\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginSyslog Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_tcp_log": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "custom_fields_by_lua": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "A list of key-value pairs, where the key is the name of a log field and the value is a chunk of Lua code, whose return value sets or replaces the log field value.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "The IP address or host name to send data to.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "keepalive": {
                      "type": "number",
                      "description": "An optional value in milliseconds that defines how long an idle connection lives before being closed. Default: 60000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "port": {
                      "type": "number",
                      "description": "The port to send data to on the upstream server.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "An optional timeout in milliseconds when sending data to the upstream server. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "tls": {
                      "type": "bool",
                      "description": "Indicates whether to perform a TLS handshake against the remote server. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "tls_sni": {
                      "type": "string",
                      "description": "An optional string that defines the SNI (Server Name Indication) hostname to send in the TLS handshake.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginTCPLog Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_tls_handshake_modifier": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "tls_client_certificate": {
                      "type": "string",
                      "description": "TLS Client Certificate. Default: \"REQUEST\"; must be \"REQUEST\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginTLSHandshakeModifier Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_tls_metadata_headers": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "client_cert_fingerprint_header_name": {
                      "type": "string",
                      "description": "Define the HTTP header name used for the SHA1 fingerprint of the client certificate. Default: \"X-Client-Cert-Fingerprint\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "client_cert_header_name": {
                      "type": "string",
                      "description": "Define the HTTP header name used for the PEM format URL encoded client certificate. Default: \"X-Client-Cert\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "client_cert_issuer_dn_header_name": {
                      "type": "string",
                      "description": "Define the HTTP header name used for the issuer DN of the client certificate. Default: \"X-Client-Cert-Issuer-DN\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "client_cert_subject_dn_header_name": {
                      "type": "string",
                      "description": "Define the HTTP header name used for the subject DN of the client certificate. Default: \"X-Client-Cert-Subject-DN\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "client_serial_header_name": {
                      "type": "string",
                      "description": "Define the HTTP header name used for the serial number of the client certificate. Default: \"X-Client-Cert-Serial\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "inject_client_cert_details": {
                      "type": "bool",
                      "description": "Enables TLS client certificate metadata values to be injected into HTTP headers. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginTLSMetadataHeaders Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_udp_log": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "custom_fields_by_lua": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Lua code as a key-value map",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "host": {
                      "type": "string",
                      "description": "A string representing a host name, such as example.com.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "timeout": {
                      "type": "number",
                      "description": "An optional timeout in milliseconds when sending data to the upstream server. Default: 10000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginUDPLog Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_upstream_oauth": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "behavior": {
                      "nested_type": {
                        "attributes": {
                          "idp_error_response_body_template": {
                            "type": "string",
                            "description": "The template to use to create the body of the response to return to the consumer if Kong fails to obtain a token from the IdP. Default: \"{ \\\"code\\\": \\\"{{status}}\\\", \\\"message\\\": \\\"{{message}}\\\" }\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "idp_error_response_content_type": {
                            "type": "string",
                            "description": "The Content-Type of the response to return to the consumer if Kong fails to obtain a token from the IdP. Default: \"application/json; charset=utf-8\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "idp_error_response_message": {
                            "type": "string",
                            "description": "The message to embed in the body of the response to return to the consumer if Kong fails to obtain a token from the IdP. Default: \"Failed to authenticate request to upstream\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "idp_error_response_status_code": {
                            "type": "number",
                            "description": "The response code to return to the consumer if Kong fails to obtain a token from the IdP. Default: 502",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "purge_token_on_upstream_status_codes": {
                            "type": [
                              "list",
                              "number"
                            ],
                            "description": "An array of status codes which will force an access token to be purged when returned by the upstream. An empty array will disable this functionality.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "upstream_access_token_header_name": {
                            "type": "string",
                            "description": "The name of the header used to send the access token (obtained from the IdP) to the upstream service. Default: \"Authorization\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "cache": {
                      "nested_type": {
                        "attributes": {
                          "default_ttl": {
                            "type": "number",
                            "description": "The lifetime of a token without an explicit `expires_in` value. Default: 3600",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "eagerly_expire": {
                            "type": "number",
                            "description": "The number of seconds to eagerly expire a cached token. By default, a cached token expires 5 seconds before its lifetime as defined in `expires_in`. Default: 5",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "memory": {
                            "nested_type": {
                              "attributes": {
                                "dictionary_name": {
                                  "type": "string",
                                  "description": "The shared dictionary used by the plugin to cache tokens if `config.cache.strategy` is set to `memory`. Default: \"kong_db_cache\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "redis": {
                            "nested_type": {
                              "attributes": {
                                "cluster_max_redirections": {
                                  "type": "number",
                                  "description": "Maximum retry attempts for redirection. Default: 5",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "cluster_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "ip": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "connect_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "connection_is_proxied": {
                                  "type": "bool",
                                  "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "database": {
                                  "type": "number",
                                  "description": "Database to use for the Redis connection when using the `redis` strategy. Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "host": {
                                  "type": "string",
                                  "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "keepalive_backlog": {
                                  "type": "number",
                                  "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "keepalive_pool_size": {
                                  "type": "number",
                                  "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low. Default: 256",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "password": {
                                  "type": "string",
                                  "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "port": {
                                  "type": "number",
                                  "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "read_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "send_timeout": {
                                  "type": "number",
                                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_master": {
                                  "type": "string",
                                  "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_nodes": {
                                  "nested_type": {
                                    "attributes": {
                                      "host": {
                                        "type": "string",
                                        "description": "A string representing a host name, such as example.com. Default: \"127.0.0.1\"",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "port": {
                                        "type": "number",
                                        "description": "An integer representing a port number between 0 and 65535, inclusive. Default: 6379",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "list"
                                  },
                                  "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_password": {
                                  "type": "string",
                                  "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "sentinel_role": {
                                  "type": "string",
                                  "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel. must be one of [\"any\", \"master\", \"slave\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "sentinel_username": {
                                  "type": "string",
                                  "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "server_name": {
                                  "type": "string",
                                  "description": "A string representing an SNI (server name indication) value for TLS.",
                                  "description_kind": "plain",
                                  "optional": true
                                },
                                "ssl": {
                                  "type": "bool",
                                  "description": "If set to true, uses SSL to connect to Redis. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "ssl_verify": {
                                  "type": "bool",
                                  "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly. Default: false",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "username": {
                                  "type": "string",
                                  "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                                  "description_kind": "plain",
                                  "optional": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "strategy": {
                            "type": "string",
                            "description": "The method Kong should use to cache tokens issued by the IdP. Default: \"memory\"; must be one of [\"memory\", \"redis\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "client": {
                      "nested_type": {
                        "attributes": {
                          "auth_method": {
                            "type": "string",
                            "description": "The authentication method used in client requests to the IdP. Supported values are: `client_secret_basic` to send `client_id` and `client_secret` in the `Authorization: Basic` header, `client_secret_post` to send `client_id` and `client_secret` as part of the request body, or `client_secret_jwt` to send a JWT signed with the `client_secret` using the client assertion as part of the body. Default: \"client_secret_post\"; must be one of [\"client_secret_basic\", \"client_secret_jwt\", \"client_secret_post\", \"none\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "client_secret_jwt_alg": {
                            "type": "string",
                            "description": "The algorithm to use with JWT when using `client_secret_jwt` authentication. Default: \"HS512\"; must be one of [\"HS256\", \"HS512\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "http_proxy": {
                            "type": "string",
                            "description": "The proxy to use when making HTTP requests to the IdP.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "http_proxy_authorization": {
                            "type": "string",
                            "description": "The `Proxy-Authorization` header value to be used with `http_proxy`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "http_version": {
                            "type": "number",
                            "description": "The HTTP version used for requests made by this plugin. Supported values: `1.1` for HTTP 1.1 and `1.0` for HTTP 1.0.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "https_proxy": {
                            "type": "string",
                            "description": "The proxy to use when making HTTPS requests to the IdP.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "https_proxy_authorization": {
                            "type": "string",
                            "description": "The `Proxy-Authorization` header value to be used with `https_proxy`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "keep_alive": {
                            "type": "bool",
                            "description": "Whether to use keepalive connections to the IdP. Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "no_proxy": {
                            "type": "string",
                            "description": "A comma-separated list of hosts that should not be proxied.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ssl_verify": {
                            "type": "bool",
                            "description": "Whether to verify the certificate presented by the IdP when using HTTPS. Default: false",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "timeout": {
                            "type": "number",
                            "description": "Network I/O timeout for requests to the IdP in milliseconds. Default: 10000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "oauth": {
                      "nested_type": {
                        "attributes": {
                          "audience": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of audiences passed to the IdP when obtaining a new token.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "client_id": {
                            "type": "string",
                            "description": "The client ID for the application registration in the IdP.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "client_secret": {
                            "type": "string",
                            "description": "The client secret for the application registration in the IdP.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "grant_type": {
                            "type": "string",
                            "description": "The OAuth grant type to be used. Default: \"client_credentials\"; must be one of [\"client_credentials\", \"password\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "password": {
                            "type": "string",
                            "description": "The password to use if `config.oauth.grant_type` is set to `password`.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "scopes": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "List of scopes to request from the IdP when obtaining a new token.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "token_endpoint": {
                            "type": "string",
                            "description": "The token endpoint URI.",
                            "description_kind": "plain",
                            "required": true
                          },
                          "token_headers": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Extra headers to be passed in the token endpoint request.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "token_post_args": {
                            "type": [
                              "map",
                              "string"
                            ],
                            "description": "Extra post arguments to be passed in the token endpoint request.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "username": {
                            "type": "string",
                            "description": "The username to use if `config.oauth.grant_type` is set to `password`.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer_group": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginUpstreamOauth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_upstream_timeout": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "connect_timeout": {
                      "type": "number",
                      "description": "An integer representing a timeout in milliseconds. Must be between 1 and 2^31-2.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "read_timeout": {
                      "type": "number",
                      "description": "An integer representing a timeout in milliseconds. Must be between 1 and 2^31-2.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "send_timeout": {
                      "type": "number",
                      "description": "An integer representing a timeout in milliseconds. Must be between 1 and 2^31-2.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginUpstreamTimeout Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_vault_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "access_token_name": {
                      "type": "string",
                      "description": "Describes an array of comma-separated parameter names where the plugin looks for an access token. The client must send the access token in one of those key names, and the plugin will try to read the credential from a header or the querystring parameter with the same name. The key names can only contain [a-z], [A-Z], [0-9], [_], and [-]. Default: \"access_token\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "anonymous": {
                      "type": "string",
                      "description": "An optional string (consumer UUID or username) value to use as an \u201canonymous\u201d consumer if authentication fails. If empty (default null), the request fails with an authentication failure `4xx`. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "hide_credentials": {
                      "type": "bool",
                      "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If `true`, the plugin will strip the credential from the request (i.e. the header or querystring containing the key) before proxying it. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "run_on_preflight": {
                      "type": "bool",
                      "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests will always be allowed. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "secret_token_name": {
                      "type": "string",
                      "description": "Describes an array of comma-separated parameter names where the plugin looks for a secret token. The client must send the secret in one of those key names, and the plugin will try to read the credential from a header or the querystring parameter with the same name. The key names can only contain [a-z], [A-Z], [0-9], [_], and [-]. Default: \"secret_token\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "tokens_in_body": {
                      "type": "bool",
                      "description": "If enabled, the plugin will read the request body (if said request has one and its MIME type is supported) and try to find the key in it. Supported MIME types are `application/www-form-urlencoded`, `application/json`, and `multipart/form-data`. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "vault": {
                      "type": "string",
                      "description": "A reference to an existing `vault` object within the database. `vault` entities define the connection and authentication parameters used to connect to a Vault HTTP(S) API.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginVaultAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_websocket_size_limit": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "client_max_payload": {
                      "type": "number",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "upstream_max_payload": {
                      "type": "number",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginWebsocketSizeLimit Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_websocket_validator": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "client": {
                      "nested_type": {
                        "attributes": {
                          "binary": {
                            "nested_type": {
                              "attributes": {
                                "schema": {
                                  "type": "string",
                                  "description": "Schema used to validate upstream-originated binary frames. The semantics of this field depend on the validation type set by `config.upstream.binary.type`.",
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The corresponding validation library for `config.upstream.binary.schema`. Currently, only `draft4` is supported. must be \"draft4\"",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "text": {
                            "nested_type": {
                              "attributes": {
                                "schema": {
                                  "type": "string",
                                  "description": "Schema used to validate upstream-originated binary frames. The semantics of this field depend on the validation type set by `config.upstream.binary.type`.",
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The corresponding validation library for `config.upstream.binary.schema`. Currently, only `draft4` is supported. must be \"draft4\"",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "upstream": {
                      "nested_type": {
                        "attributes": {
                          "binary": {
                            "nested_type": {
                              "attributes": {
                                "schema": {
                                  "type": "string",
                                  "description": "Schema used to validate upstream-originated binary frames. The semantics of this field depend on the validation type set by `config.upstream.binary.type`.",
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The corresponding validation library for `config.upstream.binary.schema`. Currently, only `draft4` is supported. must be \"draft4\"",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "text": {
                            "nested_type": {
                              "attributes": {
                                "schema": {
                                  "type": "string",
                                  "description": "Schema used to validate upstream-originated binary frames. The semantics of this field depend on the validation type set by `config.upstream.binary.type`.",
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The corresponding validation library for `config.upstream.binary.schema`. Currently, only `draft4` is supported. must be \"draft4\"",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginWebsocketValidator Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_xml_threat_protection": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "allow_dtd": {
                      "type": "bool",
                      "description": "Indicates whether an XML Document Type Definition (DTD) section is allowed. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "allowed_content_types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of Content-Type values with payloads that are allowed, but aren't validated.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "attribute": {
                      "type": "number",
                      "description": "Maximum size of the attribute value. Default: 1048576",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "bla_max_amplification": {
                      "type": "number",
                      "description": "Sets the maximum allowed amplification. This protects against the Billion Laughs Attack. Default: 100",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "bla_threshold": {
                      "type": "number",
                      "description": "Sets the threshold after which the protection starts. This protects against the Billion Laughs Attack. Default: 8388608",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "buffer": {
                      "type": "number",
                      "description": "Maximum size of the unparsed buffer (see below). Default: 1048576",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "checked_content_types": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A list of Content-Type values with payloads that must be validated.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "comment": {
                      "type": "number",
                      "description": "Maximum size of comments. Default: 1024",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "document": {
                      "type": "number",
                      "description": "Maximum size of the entire document. Default: 10485760",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "entity": {
                      "type": "number",
                      "description": "Maximum size of entity values in EntityDecl. Default: 1024",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "entityname": {
                      "type": "number",
                      "description": "Maximum size of entity names in EntityDecl. Default: 1024",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "entityproperty": {
                      "type": "number",
                      "description": "Maximum size of systemId, publicId, or notationName in EntityDecl. Default: 1024",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "localname": {
                      "type": "number",
                      "description": "Maximum size of the localname. This applies to tags and attributes. Default: 1024",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_attributes": {
                      "type": "number",
                      "description": "Maximum number of attributes allowed on a tag, including default ones. Note: If namespace-aware parsing is disabled, then the namespaces definitions are counted as attributes. Default: 100",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_children": {
                      "type": "number",
                      "description": "Maximum number of children allowed (Element, Text, Comment, ProcessingInstruction, CDATASection). Note: Adjacent text and CDATA sections are counted as one. For example, text-cdata-text-cdata is one child. Default: 100",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_depth": {
                      "type": "number",
                      "description": "Maximum depth of tags. Child elements such as Text or Comments are not counted as another level. Default: 50",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "max_namespaces": {
                      "type": "number",
                      "description": "Maximum number of namespaces defined on a tag. This value is required if parsing is namespace-aware. Default: 20",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "namespace_aware": {
                      "type": "bool",
                      "description": "If not parsing namespace aware, all prefixes and namespace attributes will be counted as regular attributes and element names, and validated as such. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "namespaceuri": {
                      "type": "number",
                      "description": "Maximum size of the namespace URI. This value is required if parsing is namespace-aware. Default: 1024",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "pidata": {
                      "type": "number",
                      "description": "Maximum size of processing instruction data. Default: 1024",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "pitarget": {
                      "type": "number",
                      "description": "Maximum size of processing instruction targets. Default: 1024",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "prefix": {
                      "type": "number",
                      "description": "Maximum size of the prefix. This applies to tags and attributes. This value is required if parsing is namespace-aware. Default: 1024",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "text": {
                      "type": "number",
                      "description": "Maximum text inside tags (counted over all adjacent text/CDATA elements combined). Default: 1048576",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing HTTP protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginXMLThreatProtection Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_plugin_zipkin": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "connect_timeout": {
                      "type": "number",
                      "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 2000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "default_header_type": {
                      "type": "string",
                      "description": "Allows specifying the type of header to be added to requests with no pre-existing tracing headers and when `config.header_type` is set to `\"preserve\"`. When `header_type` is set to any other value, `default_header_type` is ignored. Default: \"b3\"; must be one of [\"aws\", \"b3\", \"b3-single\", \"datadog\", \"gcp\", \"instana\", \"jaeger\", \"ot\", \"w3c\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "default_service_name": {
                      "type": "string",
                      "description": "Set a default service name to override `unknown-service-name` in the Zipkin spans.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "header_type": {
                      "type": "string",
                      "description": "All HTTP requests going through the plugin are tagged with a tracing HTTP request. This property codifies what kind of tracing header the plugin expects on incoming requests. Default: \"preserve\"; must be one of [\"aws\", \"b3\", \"b3-single\", \"datadog\", \"gcp\", \"ignore\", \"instana\", \"jaeger\", \"ot\", \"preserve\", \"w3c\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "http_endpoint": {
                      "type": "string",
                      "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_response_header_for_traceid": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "http_span_name": {
                      "type": "string",
                      "description": "Specify whether to include the HTTP path in the span name. Default: \"method\"; must be one of [\"method\", \"method_path\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "include_credential": {
                      "type": "bool",
                      "description": "Specify whether the credential of the currently authenticated consumer should be included in metadata sent to the Zipkin server. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "local_service_name": {
                      "type": "string",
                      "description": "The name of the service as displayed in Zipkin. Default: \"kong\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "phase_duration_flavor": {
                      "type": "string",
                      "description": "Specify whether to include the duration of each phase as an annotation or a tag. Default: \"annotations\"; must be one of [\"annotations\", \"tags\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "propagation": {
                      "nested_type": {
                        "attributes": {
                          "clear": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Header names to clear after context extraction. This allows to extract the context from a certain header and then remove it from the request, useful when extraction and injection are performed on different header formats and the original header should not be sent to the upstream. If left empty, no headers are cleared.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "default_format": {
                            "type": "string",
                            "description": "The default header format to use when extractors did not match any format in the incoming headers and `inject` is configured with the value: `preserve`. This can happen when no tracing header was found in the request, or the incoming tracing header formats were not included in `extract`. Default: \"b3\"; must be one of [\"aws\", \"b3\", \"b3-single\", \"datadog\", \"gcp\", \"instana\", \"jaeger\", \"ot\", \"w3c\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "extract": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Header formats used to extract tracing context from incoming requests. If multiple values are specified, the first one found will be used for extraction. If left empty, Kong will not extract any tracing context information from incoming requests and generate a trace with no parent and a new trace ID.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "inject": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Header formats used to inject tracing context. The value `preserve` will use the same header format as the incoming request. If multiple values are specified, all of them will be used during injection. If left empty, Kong will not inject any tracing context information in outgoing requests.",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "queue": {
                      "nested_type": {
                        "attributes": {
                          "concurrency_limit": {
                            "type": "number",
                            "description": "The number of of queue delivery timers. -1 indicates unlimited. Default: 1; must be one of [\"-1\", \"1\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "initial_retry_delay": {
                            "type": "number",
                            "description": "Time in seconds before the initial retry is made for a failing batch. Default: 0.01",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_batch_size": {
                            "type": "number",
                            "description": "Maximum number of entries that can be processed at a time. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_bytes": {
                            "type": "number",
                            "description": "Maximum number of bytes that can be waiting on a queue, requires string content.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "max_coalescing_delay": {
                            "type": "number",
                            "description": "Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler. Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_entries": {
                            "type": "number",
                            "description": "Maximum number of entries that can be waiting on the queue. Default: 10000",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_delay": {
                            "type": "number",
                            "description": "Maximum time in seconds between retries, caps exponential backoff. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "max_retry_time": {
                            "type": "number",
                            "description": "Time in seconds before the queue gives up calling a failed handler for a batch. Default: 60",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "read_timeout": {
                      "type": "number",
                      "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 5000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "sample_ratio": {
                      "type": "number",
                      "description": "How often to sample requests that do not contain trace IDs. Set to `0` to turn sampling off, or to `1` to sample **all** requests. Default: 0.001",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "send_timeout": {
                      "type": "number",
                      "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2. Default: 5000",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "static_tags": {
                      "nested_type": {
                        "attributes": {
                          "name": {
                            "type": "string",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "value": {
                            "type": "string",
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "The tags specified on this property will be added to the generated request traces.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "tags_header": {
                      "type": "string",
                      "description": "The Zipkin plugin will add extra headers to the tags associated with any HTTP requests that come with a header named as configured by this property. Default: \"Zipkin-Tags\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "traceid_byte_count": {
                      "type": "number",
                      "description": "The length in bytes of each request's Trace ID. Default: 16; must be one of [\"8\", \"16\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "consumer": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the plugin is applied. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "instance_name": {
                "type": "string",
                "description": "A unique string representing a UTF-8 encoded name.",
                "description_kind": "plain",
                "optional": true
              },
              "ordering": {
                "nested_type": {
                  "attributes": {
                    "after": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "before": {
                      "nested_type": {
                        "attributes": {
                          "access": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "partials": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "A string representing a UUID (universally unique identifier).",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "A unique string representing a UTF-8 encoded name.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "path": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of partials to be used by the plugin.",
                "description_kind": "plain",
                "optional": true
              },
              "protocols": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A set of strings representing protocols.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "route": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Plugin for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayPluginZipkin Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_route": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "destinations": {
                "nested_type": {
                  "attributes": {
                    "ip": {
                      "type": "string",
                      "description": "A string representing an IP address or CIDR block, such as 192.168.1.1 or 192.168.0.0/16.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of IP destinations of incoming connections that match this Route when using stream routing. Each entry is an object with fields \"ip\" (optionally in CIDR range notation) and/or \"port\".",
                "description_kind": "plain",
                "optional": true
              },
              "headers": {
                "type": [
                  "map",
                  [
                    "list",
                    "string"
                  ]
                ],
                "description": "One or more lists of values indexed by header name that will cause this Route to match if present in the request. The `Host` header cannot be used with this attribute: hosts should be specified using the `hosts` attribute. When `headers` contains only one value and that value starts with the special prefix `~*`, the value is interpreted as a regular expression.",
                "description_kind": "plain",
                "optional": true
              },
              "hosts": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of domain names that match this Route. Note that the hosts value is case sensitive.",
                "description_kind": "plain",
                "optional": true
              },
              "https_redirect_status_code": {
                "type": "number",
                "description": "The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is `HTTP` instead of `HTTPS`. `Location` header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the `https` protocol. Default: 426; must be one of [\"426\", \"301\", \"302\", \"307\", \"308\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "methods": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of HTTP methods that match this Route.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named \"test\" and \"Test\".",
                "description_kind": "plain",
                "optional": true
              },
              "path_handling": {
                "type": "string",
                "description": "Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. Default: \"v0\"; must be one of [\"v0\", \"v1\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "paths": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of paths that match this Route.",
                "description_kind": "plain",
                "optional": true
              },
              "preserve_host": {
                "type": "bool",
                "description": "When matching a Route via one of the `hosts` domain names, use the request `Host` header in the upstream request headers. If set to `false`, the upstream `Host` header will be that of the Service's `host`. Default: false",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "protocols": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An array of the protocols this Route should allow. See the [Route Object](#route-object) section for a list of accepted protocols. When set to only `\"https\"`, HTTP requests are answered with an upgrade error. When set to only `\"http\"`, HTTPS requests are answered with an error.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "regex_priority": {
                "type": "number",
                "description": "A number used to choose which route resolves a given request when several routes match it using regexes simultaneously. When two routes match the path and have the same `regex_priority`, the older one (lowest `created_at`) is used. Note that the priority for non-regex routes is different (longer non-regex routes are matched before shorter ones). Default: 0",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "request_buffering": {
                "type": "bool",
                "description": "Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "response_buffering": {
                "type": "bool",
                "description": "Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "The Service this Route is associated to. This is where the Route proxies traffic to.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "snis": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of SNIs that match this Route when using stream routing.",
                "description_kind": "plain",
                "optional": true
              },
              "sources": {
                "nested_type": {
                  "attributes": {
                    "ip": {
                      "type": "string",
                      "description": "A string representing an IP address or CIDR block, such as 192.168.1.1 or 192.168.0.0/16.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "port": {
                      "type": "number",
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of IP sources of incoming connections that match this Route when using stream routing. Each entry is an object with fields \"ip\" (optionally in CIDR range notation) and/or \"port\".",
                "description_kind": "plain",
                "optional": true
              },
              "strip_path": {
                "type": "bool",
                "description": "When matching a Route via one of the `paths`, strip the matching prefix from the upstream request URL. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Route for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayRoute Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_route_expression": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "expression": {
                "type": "string",
                "description": "Use Router Expression to perform route match. This option is only available when `router_flavor` is set to `expressions`.",
                "description_kind": "plain",
                "optional": true
              },
              "https_redirect_status_code": {
                "type": "number",
                "description": "The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is `HTTP` instead of `HTTPS`. `Location` header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the `https` protocol. Default: 426; must be one of [\"426\", \"301\", \"302\", \"307\", \"308\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named \"test\" and \"Test\".",
                "description_kind": "plain",
                "optional": true
              },
              "path_handling": {
                "type": "string",
                "description": "Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. Default: \"v0\"; must be one of [\"v0\", \"v1\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "preserve_host": {
                "type": "bool",
                "description": "When matching a Route via one of the `hosts` domain names, use the request `Host` header in the upstream request headers. If set to `false`, the upstream `Host` header will be that of the Service's `host`. Default: false",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "priority": {
                "type": "number",
                "description": "A number used to specify the matching order for expression routes. The higher the `priority`, the sooner an route will be evaluated. This field is ignored unless `expression` field is set. Default: 0",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "protocols": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An array of the protocols this Route should allow. See the [Route Object](#route-object) section for a list of accepted protocols. When set to only `\"https\"`, HTTP requests are answered with an upgrade error. When set to only `\"http\"`, HTTPS requests are answered with an error.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "request_buffering": {
                "type": "bool",
                "description": "Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "response_buffering": {
                "type": "bool",
                "description": "Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "service": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "The Service this Route is associated to. This is where the Route proxies traffic to.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "strip_path": {
                "type": "bool",
                "description": "When matching a Route via one of the `paths`, strip the matching prefix from the upstream request URL. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Route for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayRouteExpression Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_service": {
          "version": 0,
          "block": {
            "attributes": {
              "ca_certificates": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "Array of `CA Certificate` object UUIDs that are used to build the trust store while verifying upstream server's TLS certificate. If set to `null` when Nginx default is respected. If default CA list in Nginx are not specified and TLS verification is enabled, then handshake with upstream server will always fail (because no CA are trusted).",
                "description_kind": "plain",
                "optional": true
              },
              "client_certificate": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Certificate to be used as client certificate while TLS handshaking to the upstream server.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "connect_timeout": {
                "type": "number",
                "description": "The timeout in milliseconds for establishing a connection to the upstream server. Default: 60000",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description": "Whether the Service is active. If set to `false`, the proxy behavior will be as if any routes attached to it do not exist (404). Default: `true`. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "host": {
                "type": "string",
                "description": "The host of the upstream server. Note that the host value is case sensitive.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The Service name.",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "The path to be used in requests to the upstream server.",
                "description_kind": "plain",
                "optional": true
              },
              "port": {
                "type": "number",
                "description": "The upstream server port. Default: 80",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "protocol": {
                "type": "string",
                "description": "The protocol used to communicate with the upstream. Default: \"http\"; must be one of [\"grpc\", \"grpcs\", \"http\", \"https\", \"tcp\", \"tls\", \"tls_passthrough\", \"udp\", \"ws\", \"wss\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "read_timeout": {
                "type": "number",
                "description": "The timeout in milliseconds between two successive read operations for transmitting a request to the upstream server. Default: 60000",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "retries": {
                "type": "number",
                "description": "The number of retries to execute upon failure to proxy. Default: 5",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Service for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "tls_sans": {
                "nested_type": {
                  "attributes": {
                    "dnsnames": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "A dnsName for TLS verification.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "uris": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description": "An URI for TLS verification.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tls_verify": {
                "type": "bool",
                "description": "Whether to enable verification of upstream server TLS certificate. If set to `null`, then the Nginx default is respected.",
                "description_kind": "plain",
                "optional": true
              },
              "tls_verify_depth": {
                "type": "number",
                "description": "Maximum depth of chain while verifying Upstream server's TLS certificate. If set to `null`, then the Nginx default is respected.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "write_timeout": {
                "type": "number",
                "description": "The timeout in milliseconds between two successive write operations for transmitting a request to the upstream server. Default: 60000",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayService Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_sni": {
          "version": 0,
          "block": {
            "attributes": {
              "certificate": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "The id (a UUID) of the certificate with which to associate the SNI hostname. The Certificate must have a valid private key associated with it to be used by the SNI object.",
                "description_kind": "plain",
                "required": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The SNI name to associate with the given certificate.",
                "description_kind": "plain",
                "required": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the SNIs for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewaySNI Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_target": {
          "version": 0,
          "block": {
            "attributes": {
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier). Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Target for grouping and filtering. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "target": {
                "type": "string",
                "description": "The target address (ip or hostname) and port. If the hostname resolves to an SRV record, the `port` value will be overridden by the value from the DNS record. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "upstream": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "The unique identifier or the name of the upstream for which to update the target. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "upstream_id": {
                "type": "string",
                "description": "ID or target of the Target to lookup. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "weight": {
                "type": "number",
                "description": "The weight this target gets within the upstream loadbalancer (`0`-`65535`). If the hostname resolves to an SRV record, the `weight` value will be overridden by the value from the DNS record. Default: 100; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayTarget Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_upstream": {
          "version": 0,
          "block": {
            "attributes": {
              "algorithm": {
                "type": "string",
                "description": "Which load balancing algorithm to use. Default: \"round-robin\"; must be one of [\"consistent-hashing\", \"least-connections\", \"round-robin\", \"latency\", \"sticky-sessions\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "client_certificate": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "If set, the certificate to be used as client certificate while TLS handshaking to the upstream server.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "hash_fallback": {
                "type": "string",
                "description": "What to use as hashing input if the primary `hash_on` does not return a hash (eg. header is missing, or no Consumer identified). Not available if `hash_on` is set to `cookie`. Default: \"none\"; must be one of [\"none\", \"consumer\", \"ip\", \"header\", \"cookie\", \"path\", \"query_arg\", \"uri_capture\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "hash_fallback_header": {
                "type": "string",
                "description": "The header name to take the value from as hash input. Only required when `hash_fallback` is set to `header`.",
                "description_kind": "plain",
                "optional": true
              },
              "hash_fallback_query_arg": {
                "type": "string",
                "description": "The name of the query string argument to take the value from as hash input. Only required when `hash_fallback` is set to `query_arg`.",
                "description_kind": "plain",
                "optional": true
              },
              "hash_fallback_uri_capture": {
                "type": "string",
                "description": "The name of the route URI capture to take the value from as hash input. Only required when `hash_fallback` is set to `uri_capture`.",
                "description_kind": "plain",
                "optional": true
              },
              "hash_on": {
                "type": "string",
                "description": "What to use as hashing input. Using `none` results in a weighted-round-robin scheme with no hashing. Default: \"none\"; must be one of [\"none\", \"consumer\", \"ip\", \"header\", \"cookie\", \"path\", \"query_arg\", \"uri_capture\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "hash_on_cookie": {
                "type": "string",
                "description": "The cookie name to take the value from as hash input. Only required when `hash_on` or `hash_fallback` is set to `cookie`. If the specified cookie is not in the request, Kong will generate a value and set the cookie in the response.",
                "description_kind": "plain",
                "optional": true
              },
              "hash_on_cookie_path": {
                "type": "string",
                "description": "The cookie path to set in the response headers. Only required when `hash_on` or `hash_fallback` is set to `cookie`. Default: \"/\"",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "hash_on_header": {
                "type": "string",
                "description": "The header name to take the value from as hash input. Only required when `hash_on` is set to `header`.",
                "description_kind": "plain",
                "optional": true
              },
              "hash_on_query_arg": {
                "type": "string",
                "description": "The name of the query string argument to take the value from as hash input. Only required when `hash_on` is set to `query_arg`.",
                "description_kind": "plain",
                "optional": true
              },
              "hash_on_uri_capture": {
                "type": "string",
                "description": "The name of the route URI capture to take the value from as hash input. Only required when `hash_on` is set to `uri_capture`.",
                "description_kind": "plain",
                "optional": true
              },
              "healthchecks": {
                "nested_type": {
                  "attributes": {
                    "active": {
                      "nested_type": {
                        "attributes": {
                          "concurrency": {
                            "type": "number",
                            "description": "Default: 10",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "headers": {
                            "type": [
                              "map",
                              [
                                "list",
                                "string"
                              ]
                            ],
                            "description": "A map of header names to arrays of header values.",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "healthy": {
                            "nested_type": {
                              "attributes": {
                                "http_statuses": {
                                  "type": [
                                    "list",
                                    "number"
                                  ],
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "interval": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "successes": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "http_path": {
                            "type": "string",
                            "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes). Default: \"/\"",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "https_sni": {
                            "type": "string",
                            "description": "A string representing an SNI (server name indication) value for TLS.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "https_verify_certificate": {
                            "type": "bool",
                            "description": "Default: true",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "timeout": {
                            "type": "number",
                            "description": "Default: 1",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Default: \"http\"; must be one of [\"tcp\", \"http\", \"https\", \"grpc\", \"grpcs\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "unhealthy": {
                            "nested_type": {
                              "attributes": {
                                "http_failures": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "http_statuses": {
                                  "type": [
                                    "list",
                                    "number"
                                  ],
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "interval": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "tcp_failures": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "timeouts": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "passive": {
                      "nested_type": {
                        "attributes": {
                          "healthy": {
                            "nested_type": {
                              "attributes": {
                                "http_statuses": {
                                  "type": [
                                    "list",
                                    "number"
                                  ],
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "successes": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Default: \"http\"; must be one of [\"tcp\", \"http\", \"https\", \"grpc\", \"grpcs\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "unhealthy": {
                            "nested_type": {
                              "attributes": {
                                "http_failures": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "http_statuses": {
                                  "type": [
                                    "list",
                                    "number"
                                  ],
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "tcp_failures": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "timeouts": {
                                  "type": "number",
                                  "description": "Default: 0",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "threshold": {
                      "type": "number",
                      "description": "Default: 0",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "host_header": {
                "type": "string",
                "description": "The hostname to be used as `Host` header when proxying requests through Kong.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "This is a hostname, which must be equal to the `host` of a Service.",
                "description_kind": "plain",
                "required": true
              },
              "slots": {
                "type": "number",
                "description": "The number of slots in the load balancer algorithm. If `algorithm` is set to `round-robin`, this setting determines the maximum number of slots. If `algorithm` is set to `consistent-hashing`, this setting determines the actual number of slots in the algorithm. Accepts an integer in the range `10`-`65536`. Default: 10000",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "sticky_sessions_cookie": {
                "type": "string",
                "description": "The cookie name to keep sticky sessions.",
                "description_kind": "plain",
                "optional": true
              },
              "sticky_sessions_cookie_path": {
                "type": "string",
                "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes). Default: \"/\"",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Upstream for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "use_srv_name": {
                "type": "bool",
                "description": "If set, the balancer will use SRV hostname(if DNS Answer has SRV record) as the proxy upstream `Host`. Default: false",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayUpstream Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_vault": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "type": "string",
                "description": "The configuration properties for the Vault which can be found on the vaults' documentation page. Parsed as JSON.",
                "description_kind": "plain",
                "optional": true
              },
              "control_plane_id": {
                "type": "string",
                "description": "The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "number",
                "description": "Unix epoch when the resource was created.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The description of the Vault entity.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "A string representing a UUID (universally unique identifier).",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the Vault that's going to be added. Currently, the Vault implementation must be installed in every Kong instance.",
                "description_kind": "plain",
                "required": true
              },
              "prefix": {
                "type": "string",
                "description": "The unique prefix (or identifier) for this Vault configuration. The prefix is used to load the right Vault configuration and implementation when referencing secrets with the other entities.",
                "description_kind": "plain",
                "required": true
              },
              "tags": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "An optional set of strings associated with the Vault for grouping and filtering.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "number",
                "description": "Unix epoch when the resource was last updated.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "GatewayVault Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_integration_instance": {
          "version": 0,
          "block": {
            "attributes": {
              "authorized": {
                "type": "bool",
                "description": "Denotes whether the integration instance has been authorized within the catalog.",
                "description_kind": "plain",
                "computed": true
              },
              "config": {
                "type": "string",
                "description": "JSON object representing configuration specific to the integration instance.\nThe expected schema depends on the integration type and is dynamically registered at runtime.\nParsed as JSON.",
                "description_kind": "markdown",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Optionally provide a description of the integration instance.",
                "description_kind": "plain",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "The display name of the integration instance.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "The integration instance ID.",
                "description_kind": "plain",
                "computed": true
              },
              "integration": {
                "nested_type": {
                  "attributes": {
                    "display_name": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Short-hand descriptor of an integration that omits instance metadata.",
                "description_kind": "plain",
                "computed": true
              },
              "integration_name": {
                "type": "string",
                "description": "The type of integration instance to create. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "name": {
                "type": "string",
                "description": "The machine name of the integration instance that uniquely identifies it within the catalog.",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "IntegrationInstance Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_integration_instance_auth_config": {
          "version": 0,
          "block": {
            "attributes": {
              "authorization_endpoint": {
                "type": "string",
                "description": "The URL where users are redirected to authorize access.",
                "description_kind": "plain",
                "computed": true
              },
              "client_id": {
                "type": "string",
                "description": "The OAuth client identifier.",
                "description_kind": "plain",
                "computed": true
              },
              "integration_instance_id": {
                "type": "string",
                "description": "The `id` of the integration instance.",
                "description_kind": "plain",
                "required": true
              },
              "oauth_auth_config": {
                "nested_type": {
                  "attributes": {
                    "authorization_endpoint": {
                      "type": "string",
                      "description": "The URL where users are redirected to authorize access.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "client_id": {
                      "type": "string",
                      "description": "The OAuth client identifier.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "token_endpoint": {
                      "type": "string",
                      "description": "The URL used to retrieve access tokens.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "computed": true
              },
              "oauth_config": {
                "nested_type": {
                  "attributes": {
                    "authorization_endpoint": {
                      "type": "string",
                      "description": "The URL where users are redirected to authorize access.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "client_id": {
                      "type": "string",
                      "description": "The OAuth client identifier.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The OAuth client secret.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "token_endpoint": {
                      "type": "string",
                      "description": "The URL used to retrieve access tokens.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true
              },
              "token_endpoint": {
                "type": "string",
                "description": "The URL used to retrieve access tokens.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "IntegrationInstanceAuthConfig Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_integration_instance_auth_credential": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "expires_at": {
                "type": "string",
                "description": "Timestamp denoting when the when the credential will expire in RFC-3339 format with a \"T\" character separating date from time within the field value.\nWhen expired, the credential must be replaced with a new valid credential to re-enable full functionality for the given integration instance.\n\nA `null` value indicates no known expiration time.",
                "description_kind": "markdown",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "integration_instance": {
                "nested_type": {
                  "attributes": {
                    "display_name": {
                      "type": "string",
                      "description": "The display name of the integration instance.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The integration instance ID.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The machine name of the integration instance that uniquely identifies it within the catalog.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Short-hand descriptor of an integration instance.",
                "description_kind": "plain",
                "computed": true
              },
              "integration_instance_id": {
                "type": "string",
                "description": "The `id` of the integration instance. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "missing_permissions": {
                "nested_type": {
                  "attributes": {
                    "message": {
                      "type": "string",
                      "description": "Describes the degraded experience of the integration instance due to the missing permission.\nMay also include a message on how to resolve the missing permission.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "scopes": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "List of detected missing permissions required to enable the full functionality of the given integration instance.",
                "description_kind": "plain",
                "computed": true
              },
              "multi_key_auth": {
                "nested_type": {
                  "attributes": {
                    "config": {
                      "nested_type": {
                        "attributes": {
                          "headers": {
                            "nested_type": {
                              "attributes": {
                                "key": {
                                  "type": "string",
                                  "description": "The key used to populate the request header. Requires replacement if changed.",
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the request header. Requires replacement if changed.",
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "A list of header key/value pairs used to transmit API credentials to the integration's external API.\nHeader names are defined by the integration within its `Multi Key` authorization strategy definition.\nRequires replacement if changed.",
                            "description_kind": "markdown",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Payload used to create an `Multi Key` credential for an integration instance. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "multi_key_auth_credential": {
                "nested_type": {
                  "attributes": {
                    "created_at": {
                      "type": "string",
                      "description": "An ISO-8601 timestamp representation of entity creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "expires_at": {
                      "type": "string",
                      "description": "Timestamp denoting when the when the credential will expire in RFC-3339 format with a \"T\" character separating date from time within the field value.\nWhen expired, the credential must be replaced with a new valid credential to re-enable full functionality for the given integration instance.\n\nA `null` value indicates no known expiration time.",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "integration_instance": {
                      "nested_type": {
                        "attributes": {
                          "display_name": {
                            "type": "string",
                            "description": "The display name of the integration instance.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "id": {
                            "type": "string",
                            "description": "The integration instance ID.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The machine name of the integration instance that uniquely identifies it within the catalog.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Short-hand descriptor of an integration instance.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "missing_permissions": {
                      "nested_type": {
                        "attributes": {
                          "message": {
                            "type": "string",
                            "description": "Describes the degraded experience of the integration instance due to the missing permission.\nMay also include a message on how to resolve the missing permission.",
                            "description_kind": "markdown",
                            "computed": true
                          },
                          "scopes": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "List of detected missing permissions required to enable the full functionality of the given integration instance.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "tainted": {
                      "type": "bool",
                      "description": "Indicates that the credential is no longer valid and must be replaced with a new valid credential.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Represents a credential scoped to an integration instance that supports the `Multi Key` authorization strategy.",
                "description_kind": "plain",
                "computed": true
              },
              "tainted": {
                "type": "bool",
                "description": "Indicates that the credential is no longer valid and must be replaced with a new valid credential.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "IntegrationInstanceAuthCredential Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_mesh_control_plane": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "features": {
                "nested_type": {
                  "attributes": {
                    "hostname_generator_creation": {
                      "nested_type": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "description": "Not Null; Requires replacement if changed.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "mesh_creation": {
                      "nested_type": {
                        "attributes": {
                          "enabled": {
                            "type": "bool",
                            "description": "Not Null; Requires replacement if changed.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Not Null; must be one of [\"MeshCreation\", \"HostnameGeneratorCreation\"]; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "ID of the control plane.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels to facilitate tagged search on control planes. Keys must be of length 1-63 characters.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the control plane.",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "MeshControlPlane Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal": {
          "version": 0,
          "block": {
            "attributes": {
              "authentication_enabled": {
                "type": "bool",
                "description": "Whether the portal supports developer authentication. If disabled, developers cannot register for accounts or create applications. Default: true",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "auto_approve_applications": {
                "type": "bool",
                "description": "Whether requests from applications to register for APIs will be automatically approved, or if they will be set to pending until approved by an admin. Default: false",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "auto_approve_developers": {
                "type": "bool",
                "description": "Whether developer account registrations will be automatically approved, or if they will be set to pending until approved by an admin. Default: false",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "canonical_domain": {
                "type": "string",
                "description": "The canonical domain of the developer portal",
                "description_kind": "plain",
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "default_api_visibility": {
                "type": "string",
                "description": "The default visibility of APIs in the portal. If set to `public`, newly published APIs are visible to unauthenticated developers. If set to `private`, newly published APIs are hidden from unauthenticated developers. must be one of [\"public\", \"private\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_application_auth_strategy_id": {
                "type": "string",
                "description": "The default authentication strategy for APIs published to the portal. Newly published APIs will use this authentication strategy unless overridden during publication. If set to `null`, API publications will not use an authentication strategy unless set during publication.",
                "description_kind": "plain",
                "optional": true
              },
              "default_domain": {
                "type": "string",
                "description": "The domain assigned to the portal by Konnect. This is the default place to access the portal and its API if not using a `custom_domain``.",
                "description_kind": "plain",
                "computed": true
              },
              "default_page_visibility": {
                "type": "string",
                "description": "The default visibility of pages in the portal. If set to `public`, newly created pages are visible to unauthenticated developers. If set to `private`, newly created pages are hidden from unauthenticated developers. must be one of [\"public\", \"private\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "A description of the portal.",
                "description_kind": "plain",
                "optional": true
              },
              "display_name": {
                "type": "string",
                "description": "The display name of the portal. This value will be the portal's `name` in Portal API.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "force_destroy": {
                "type": "string",
                "description": "If set to \"true\", the portal and all child entities will be deleted when running `terraform destroy`.\nIf set to \"false\", the portal will not be deleted until all child entities are manually removed.\nThis will IRREVERSIBLY DELETE ALL REGISTERED DEVELOPERS AND THEIR CREDENTIALS. Only set to \"true\" if you want this behavior.\nDefault: \"false\"; must be one of [\"true\", \"false\"]",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nLabels are intended to store **INTERNAL** metadata.\n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the portal, used to distinguish it from other portals. Name must be unique.",
                "description_kind": "plain",
                "required": true
              },
              "rbac_enabled": {
                "type": "bool",
                "description": "Whether the portal resources are protected by Role Based Access Control (RBAC). If enabled, developers view or register for APIs until unless assigned to teams with access to view and consume specific APIs. Authentication must be enabled to use RBAC. Default: false",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Portal Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_appearance": {
          "version": 0,
          "block": {
            "attributes": {
              "custom_fonts": {
                "nested_type": {
                  "attributes": {
                    "base": {
                      "type": "string",
                      "description": "The name of the font to render in the browser. must be one of [\"Roboto\", \"Inter\", \"Open Sans\", \"Lato\", \"Slabo 27px\", \"Slabo 13px\", \"Oswald\", \"Source Sans Pro\", \"Montserrat\", \"Raleway\", \"PT Sans\", \"Lora\", \"Roboto Mono\", \"Inconsolata\", \"Source Code Pro\", \"PT Mono\", \"Ubuntu Mono\", \"IBM Plex Mono\"]",
                      "description_kind": "plain",
                      "required": true
                    },
                    "code": {
                      "type": "string",
                      "description": "The name of the font to render in the browser. must be one of [\"Roboto\", \"Inter\", \"Open Sans\", \"Lato\", \"Slabo 27px\", \"Slabo 13px\", \"Oswald\", \"Source Sans Pro\", \"Montserrat\", \"Raleway\", \"PT Sans\", \"Lora\", \"Roboto Mono\", \"Inconsolata\", \"Source Code Pro\", \"PT Mono\", \"Ubuntu Mono\", \"IBM Plex Mono\"]",
                      "description_kind": "plain",
                      "required": true
                    },
                    "headings": {
                      "type": "string",
                      "description": "The name of the font to render in the browser. must be one of [\"Roboto\", \"Inter\", \"Open Sans\", \"Lato\", \"Slabo 27px\", \"Slabo 13px\", \"Oswald\", \"Source Sans Pro\", \"Montserrat\", \"Raleway\", \"PT Sans\", \"Lora\", \"Roboto Mono\", \"Inconsolata\", \"Source Code Pro\", \"PT Mono\", \"Ubuntu Mono\", \"IBM Plex Mono\"]",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Font selections to render text in the portal user interface. Must set use_custom_fonts to true to enable using custom font values.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "custom_theme": {
                "nested_type": {
                  "attributes": {
                    "colors": {
                      "nested_type": {
                        "attributes": {
                          "button": {
                            "nested_type": {
                              "attributes": {
                                "primary_fill": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "primary_text": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          },
                          "section": {
                            "nested_type": {
                              "attributes": {
                                "accent": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "body": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "footer": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "header": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "hero": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "stroke": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "tertiary": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          },
                          "text": {
                            "nested_type": {
                              "attributes": {
                                "accent": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "footer": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "header": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "headings": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "hero": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "link": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "primary": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                },
                                "secondary": {
                                  "nested_type": {
                                    "attributes": {
                                      "description": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "optional": true
                                      },
                                      "value": {
                                        "type": "string",
                                        "description_kind": "plain",
                                        "required": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description_kind": "plain",
                                  "required": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Groups of variables for configuring visual details of the portal user interface. Set theme_name to 'custom' to use custom values for theme variables.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "images": {
                "nested_type": {
                  "attributes": {
                    "catalog_cover": {
                      "nested_type": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "description": "must be a data URL with base64 image data, e.g., data:image/jpeg;base64,<BASE64_IMAGE_DATA>. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "filename": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The image data to upload, along with an optional filename. Images must be a data URL with binary image data in base 64 format. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "favicon": {
                      "nested_type": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "description": "must be a data URL with base64 image data, e.g., data:image/jpeg;base64,<BASE64_IMAGE_DATA>. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "filename": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The image data to upload, along with an optional filename. Images must be a data URL with binary image data in base 64 format. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "logo": {
                      "nested_type": {
                        "attributes": {
                          "data": {
                            "type": "string",
                            "description": "must be a data URL with base64 image data, e.g., data:image/jpeg;base64,<BASE64_IMAGE_DATA>. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "filename": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "The image data to upload, along with an optional filename. Images must be a data URL with binary image data in base 64 format. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "A collection of binary image data to customize images in the portal",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              },
              "text": {
                "nested_type": {
                  "attributes": {
                    "catalog": {
                      "nested_type": {
                        "attributes": {
                          "primary_header": {
                            "type": "string",
                            "description_kind": "plain",
                            "required": true
                          },
                          "welcome_message": {
                            "type": "string",
                            "description_kind": "plain",
                            "required": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Values to display for customizable text in the portal user interface",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "theme_name": {
                "type": "string",
                "description": "Select a pre-existing default theme or specify 'custom' to use custom_theme variables. must be one of [\"mint_rocket\", \"dark_mode\", \"custom\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "use_custom_fonts": {
                "type": "bool",
                "description": "If true, fonts in custom_fonts will be used over the theme's default fonts",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "PortalAppearance Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_auth": {
          "version": 0,
          "block": {
            "attributes": {
              "basic_auth_enabled": {
                "type": "bool",
                "description": "The organization has basic auth enabled.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "idp_mapping_enabled": {
                "type": "bool",
                "description": "Whether IdP groups determine the Konnect Portal teams a developer has. This will soon replace oidc_team_mapping_enabled.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "konnect_mapping_enabled": {
                "type": "bool",
                "description": "Whether a Konnect Identity Admin assigns teams to a developer.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "oidc_auth_enabled": {
                "type": "bool",
                "description": "The organization has OIDC disabled.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "oidc_claim_mappings": {
                "nested_type": {
                  "attributes": {
                    "email": {
                      "type": "string",
                      "description": "Default: \"email\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "groups": {
                      "type": "string",
                      "description": "Default: \"groups\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Default: \"name\"",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Mappings from a portal developer atribute to an Identity Provider claim.",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_client_id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_client_secret": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_config": {
                "nested_type": {
                  "attributes": {
                    "claim_mappings": {
                      "nested_type": {
                        "attributes": {
                          "email": {
                            "type": "string",
                            "description": "Default: \"email\"",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "groups": {
                            "type": "string",
                            "description": "Default: \"groups\"",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Default: \"name\"",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Mappings from a portal developer atribute to an Identity Provider claim.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "client_id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "issuer": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "scopes": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Configuration properties for an OpenID Connect Identity Provider.",
                "description_kind": "plain",
                "computed": true
              },
              "oidc_issuer": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "oidc_scopes": {
                "type": [
                  "list",
                  "string"
                ],
                "description_kind": "plain",
                "optional": true
              },
              "oidc_team_mapping_enabled": {
                "type": "bool",
                "description": "Whether IdP groups determine the Konnect Portal teams a developer has.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              },
              "saml_auth_enabled": {
                "type": "bool",
                "description": "The portal has SAML enabled or disabled.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "PortalAuth Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_classic": {
          "version": 0,
          "block": {
            "attributes": {
              "application_count": {
                "type": "number",
                "description": "Number of applications created in the portal.",
                "description_kind": "plain",
                "computed": true
              },
              "auto_approve_applications": {
                "type": "bool",
                "description": "Whether the requests from applications to register for products will be automatically approved, or if they will be set to pending until approved by an admin.",
                "description_kind": "plain",
                "optional": true
              },
              "auto_approve_developers": {
                "type": "bool",
                "description": "Whether the developer account registrations will be automatically approved, or if they will be set to pending until approved by an admin.",
                "description_kind": "plain",
                "optional": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "custom_client_domain": {
                "type": "string",
                "description": "The custom domain to access a self-hosted customized developer portal client. If this is set, the Konnect-hosted portal will no longer be available.  `custom_domain` must be also set for this value to be set. See https://github.com/Kong/konnect-portal for information on how to get started deploying and customizing your own Konnect portal.",
                "description_kind": "plain",
                "optional": true
              },
              "custom_domain": {
                "type": "string",
                "description": "The custom domain to access the developer portal. A CNAME for the portal's default domain must be able to be set for the custom domain for it to be valid. After setting a valid CNAME, an SSL/TLS certificate will be automatically manged for the custom domain, and traffic will be able to use the custom domain to route to the portal's web client and API.",
                "description_kind": "plain",
                "optional": true
              },
              "default_application_auth_strategy_id": {
                "type": "string",
                "description": "Default strategy ID applied on applications for the portal",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "default_domain": {
                "type": "string",
                "description": "The domain assigned to the portal by Konnect. This is the default place to access the portal and its API if not using a `custom_domain``.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The description of the portal.",
                "description_kind": "plain",
                "optional": true
              },
              "developer_count": {
                "type": "number",
                "description": "Number of developers using the portal.",
                "description_kind": "plain",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description": "The display name of the portal. This value will be the portal's `name` in Portal API.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "force": {
                "type": "string",
                "description": "If true, delete specified portal and all related entities, even if there are developers registered to portal or if there are portal product versions with application registration enabled. If false, do not allow deletion if there are developers registered to portal or if there are portal product versions with application registration enabled. Default: \"false\"; must be one of [\"true\", \"false\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "is_public": {
                "type": "bool",
                "description": "Whether the portal catalog can be accessed publicly without any developer authentication. Developer accounts and applications cannot be created if the portal is public.",
                "description_kind": "plain",
                "optional": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the portal, used to distinguish it from other portals. Name must be unique.",
                "description_kind": "plain",
                "required": true
              },
              "published_product_count": {
                "type": "number",
                "description": "Number of api products published to the portal",
                "description_kind": "plain",
                "computed": true
              },
              "rbac_enabled": {
                "type": "bool",
                "description": "Whether the portal resources are protected by Role Based Access Control (RBAC). If enabled, developers view or register for products until unless assigned to teams with access to view and consume specific products.",
                "description_kind": "plain",
                "optional": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "PortalClassic Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_custom_domain": {
          "version": 0,
          "block": {
            "attributes": {
              "cname_status": {
                "type": "string",
                "description": "must be one of [\"verified\", \"pending\"]",
                "description_kind": "plain",
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "enabled": {
                "type": "bool",
                "description_kind": "plain",
                "required": true
              },
              "hostname": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              },
              "ssl": {
                "nested_type": {
                  "attributes": {
                    "custom_certificate": {
                      "type": "string",
                      "description": "Custom certificate to be used for the SSL termination. Only used when domain_verification_method == \"custom_certificate\". Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "custom_private_key": {
                      "type": "string",
                      "description": "Custom certificate private key to be used for the SSL termination. Only used when domain_verification_method == \"custom_certificate\". Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "domain_verification_method": {
                      "type": "string",
                      "description": "must be one of [\"custom_certificate\", \"http\"]; Requires replacement if changed.",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "validation_errors": {
                      "type": [
                        "list",
                        "string"
                      ],
                      "description_kind": "plain",
                      "computed": true
                    },
                    "verification_status": {
                      "type": "string",
                      "description": "must be one of [\"verified\", \"pending\", \"error\"]",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "PortalCustomDomain Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_customization": {
          "version": 0,
          "block": {
            "attributes": {
              "css": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "layout": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "menu": {
                "nested_type": {
                  "attributes": {
                    "footer_bottom": {
                      "nested_type": {
                        "attributes": {
                          "external": {
                            "type": "bool",
                            "description": "When clicked, open the link in a new window. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "path": {
                            "type": "string",
                            "description": "The absolute path of a page in a portal with a leading slash. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "title": {
                            "type": "string",
                            "description": "The link display text. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "visibility": {
                            "type": "string",
                            "description": "Whether a menu item is public or private. Private menu items are only accessible to authenticated users. Not Null; must be one of [\"public\", \"private\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description_kind": "plain",
                      "optional": true
                    },
                    "footer_sections": {
                      "nested_type": {
                        "attributes": {
                          "items": {
                            "nested_type": {
                              "attributes": {
                                "external": {
                                  "type": "bool",
                                  "description": "When clicked, open the link in a new window. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "path": {
                                  "type": "string",
                                  "description": "The absolute path of a page in a portal with a leading slash. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The link display text. Not Null",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                },
                                "visibility": {
                                  "type": "string",
                                  "description": "Whether a menu item is public or private. Private menu items are only accessible to authenticated users. Not Null; must be one of [\"public\", \"private\"]",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "list"
                            },
                            "description": "Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "title": {
                            "type": "string",
                            "description": "The footer menu section title. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description_kind": "plain",
                      "optional": true
                    },
                    "main": {
                      "nested_type": {
                        "attributes": {
                          "external": {
                            "type": "bool",
                            "description": "When clicked, open the link in a new window. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "path": {
                            "type": "string",
                            "description": "The absolute path of a page in a portal with a leading slash. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "title": {
                            "type": "string",
                            "description": "The link display text. Not Null",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "visibility": {
                            "type": "string",
                            "description": "Whether a menu item is public or private. Private menu items are only accessible to authenticated users. Not Null; must be one of [\"public\", \"private\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              },
              "robots": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "spec_renderer": {
                "nested_type": {
                  "attributes": {
                    "allow_custom_server_urls": {
                      "type": "bool",
                      "description": "Let users define a custom server URL for endpoints. This will be used to generate code snippets and to test the API. The URL is client-side only and is not saved. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hide_deprecated": {
                      "type": "bool",
                      "description": "Manage visibility of deprecated endpoints and models. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "hide_internal": {
                      "type": "bool",
                      "description": "Manage visibility of internal endpoints and models. Default: false",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "infinite_scroll": {
                      "type": "bool",
                      "description": "Display the full spec on a single, scrollable page. If disabled, documentation, endpoints, and schemas appear on separate pages. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "show_schemas": {
                      "type": "bool",
                      "description": "Control whether schemas are visible in your API specs. When enabled, schemas appear in the side navigation below the endpoints. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "try_it_insomnia": {
                      "type": "bool",
                      "description": "Enables users to open the API spec in Insomnia to explore and send requests with the native client. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "try_it_ui": {
                      "type": "bool",
                      "description": "Enable in-browser testing for your APIs. All linked gateways must have the CORS plugin configured. Default: true",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "theme": {
                "nested_type": {
                  "attributes": {
                    "colors": {
                      "nested_type": {
                        "attributes": {
                          "primary": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "mode": {
                      "type": "string",
                      "description": "must be one of [\"light\", \"dark\", \"system\"]",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description_kind": "plain",
                      "optional": true,
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "PortalCustomization Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_favicon": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "type": "string",
                "description": "must be a data URL with base64 image data, e.g., data:image/jpeg;base64,<BASE64_IMAGE_DATA>",
                "description_kind": "plain",
                "required": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "PortalFavicon Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_logo": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "type": "string",
                "description": "must be a data URL with base64 image data, e.g., data:image/jpeg;base64,<BASE64_IMAGE_DATA>",
                "description_kind": "plain",
                "required": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "PortalLogo Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_page": {
          "version": 0,
          "block": {
            "attributes": {
              "content": {
                "type": "string",
                "description": "The renderable markdown content of a page in a portal.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "parent_page_id": {
                "type": "string",
                "description": "Pages may be rendered as a tree of files.\n\nSpecify the `id` of another page as the `parent_page_id` to add some hierarchy to your pages.",
                "description_kind": "markdown",
                "optional": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              },
              "slug": {
                "type": "string",
                "description": "The slug of a page in a portal, used to compute its full URL path within the portal hierarchy. \nWhen a page has a `parent_page_id`, its full path is built by joining the parent\u2019s slug with its own. \nFor example, if a parent page has the slug `slug1` and this page\u2019s slug is `slug2`, the resulting path will be `/slug1/slug2`. \nThis enables nested page structures like `/slug1/slug2/slug3`.",
                "description_kind": "markdown",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Whether the resource is visible on a given portal. Defaults to unpublished. must be one of [\"published\", \"unpublished\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "title": {
                "type": "string",
                "description": "The title of a page in a portal.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              },
              "visibility": {
                "type": "string",
                "description": "Whether a page is publicly accessible to non-authenticated users.\nIf not provided, the default_page_visibility value of the portal will be used.\nmust be one of [\"public\", \"private\"]",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "description": "PortalPage Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_product_version": {
          "version": 0,
          "block": {
            "attributes": {
              "application_registration_enabled": {
                "type": "bool",
                "description": "Whether the application registration on this portal for the api product version is enabled",
                "description_kind": "plain",
                "required": true
              },
              "auth_strategies": {
                "nested_type": {
                  "attributes": {
                    "client_credentials": {
                      "nested_type": {
                        "attributes": {
                          "auth_methods": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "computed": true
                          },
                          "available_scopes": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description": "Possible developer selectable scopes for an application. Only present when using DCR Provider that supports it.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "credential_type": {
                            "type": "string",
                            "description": "must be one of [\"client_credentials\", \"self_managed_client_credentials\"]",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "id": {
                            "type": "string",
                            "description": "The Application Auth Strategy ID.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Default: \"name\"",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Client Credential Auth strategy that the application uses.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "key_auth": {
                      "nested_type": {
                        "attributes": {
                          "credential_type": {
                            "type": "string",
                            "description": "must be \"key_auth\"",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "id": {
                            "type": "string",
                            "description": "The Application Auth Strategy ID.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "key_names": {
                            "type": [
                              "list",
                              "string"
                            ],
                            "description_kind": "plain",
                            "computed": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Default: \"name\"",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "KeyAuth Auth strategy that the application uses.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description": "A list of authentication strategies",
                "description_kind": "plain",
                "computed": true
              },
              "auth_strategy_ids": {
                "type": [
                  "list",
                  "string"
                ],
                "description": "A list of authentication strategy IDs",
                "description_kind": "plain",
                "required": true
              },
              "auto_approve_registration": {
                "type": "bool",
                "description": "Whether the application registration auto approval on this portal for the api product version is enabled",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "deprecated": {
                "type": "bool",
                "description": "Whether the api product version on the portal is deprecated",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "notify_developers": {
                "type": "bool",
                "description": "Whether to notify developers who are affected by this change",
                "description_kind": "plain",
                "optional": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              },
              "product_version_id": {
                "type": "string",
                "description": "API product version identifier",
                "description_kind": "plain",
                "required": true
              },
              "publish_status": {
                "type": "string",
                "description": "Publication status of the API product version on the portal. must be one of [\"published\", \"unpublished\"]",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "PortalProductVersion Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_snippet": {
          "version": 0,
          "block": {
            "attributes": {
              "content": {
                "type": "string",
                "description": "The renderable markdown content of a page in a portal.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The unique name of a snippet in a portal.",
                "description_kind": "plain",
                "required": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              },
              "status": {
                "type": "string",
                "description": "Whether the resource is visible on a given portal. Defaults to unpublished. must be one of [\"published\", \"unpublished\"]",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "title": {
                "type": "string",
                "description": "The display title of a snippet in a portal.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              },
              "visibility": {
                "type": "string",
                "description": "Whether a snippet is publicly accessible to non-authenticated users.\nIf not provided, the default_page_visibility value of the portal will be used.\nmust be one of [\"public\", \"private\"]",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              }
            },
            "description": "PortalSnippet Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_team": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "portal_id": {
                "type": "string",
                "description": "The Portal identifier",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "PortalTeam Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_realm": {
          "version": 0,
          "block": {
            "attributes": {
              "allow_all_control_planes": {
                "type": "bool",
                "description": "Allow all control planes to use the realm. When this value is set it takes precedence on `allowed_control_planes`.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "allowed_control_planes": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of control plane ids that are allowed to use the realm. This is used when `allow_all_control_planes` value\nis set to false.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "consumer_groups": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "A list of consumer groups to automatically add to any consumers created within this Realm.\nIf `consumer_groups` are provided on the Consumer object _and_ on the Realm, the Consumer will be placed in all defined consumer groups.",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "force_destroy": {
                "type": "string",
                "description": "If set to \"true\", the realm and all consumers and credentials will be deleted when running `terraform destroy`.\nIf set to \"false\", the realm will not be deleted until all child entities are manually removed.\nThis will IRREVERSIBLY DELETE ALL REGISTERED CONSUMERS AND THEIR CREDENTIALS. Only set to \"true\" if you want this behavior.\nDefault: \"false\"; must be one of [\"true\", \"false\"]",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "required": true
              },
              "negative_ttl": {
                "type": "number",
                "description": "If a running Gateway triggers a lookup for a Consumer that cannot be authenticated this realm, a `negative_ttl`\nis set. The Gateway will not try to lookup the Consumer in Konnect for `negative_ttl` minutes.\n\nA Consumer will be cached for `negative_ttl` if they do not exist in the Realm, or if the provided credentials\nare invalid.\nDefault: 10",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "ttl": {
                "type": "number",
                "description": "The time in minutes that the Consumer will be cached in memory on a running Gateway if it is\nsuccessfully loaded from Konnect.\nDefault: 10",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Realm Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_serverless_cloud_gateway": {
          "version": 0,
          "block": {
            "attributes": {
              "cluster_cert": {
                "type": "string",
                "description": "The cluster certificate (public key). Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "cluster_cert_key": {
                "type": "string",
                "description": "The cluster certificate key (private key). Requires replacement if changed.",
                "description_kind": "plain",
                "required": true,
                "sensitive": true
              },
              "control_plane": {
                "nested_type": {
                  "attributes": {
                    "id": {
                      "type": "string",
                      "description": "ID of the serverless cloud gateway CP. Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "prefix": {
                      "type": "string",
                      "description": "The prefix of the serverless cloud gateway CP. Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    },
                    "region": {
                      "type": "string",
                      "description": "The control plane region. must be one of [\"us\", \"eu\", \"au\"]; Requires replacement if changed.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "gateway_endpoint": {
                "type": "string",
                "description": "Endpoint for the serverless cloud gateway.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "ServerlessCloudGateway Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_system_account": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "Timestamp of when the system account was created.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "Description of the system account. Useful when the system account name is not sufficient to differentiate one system account from another.",
                "description_kind": "plain",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "ID of the system account.",
                "description_kind": "plain",
                "computed": true
              },
              "konnect_managed": {
                "type": "bool",
                "description": "The system account is managed by Konnect (true/false). Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "name": {
                "type": "string",
                "description": "Name of the system account.",
                "description_kind": "plain",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "Timestamp of when the system account was last updated.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "SystemAccount Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_system_account_access_token": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "description": "ID of the system account.",
                "description_kind": "plain",
                "required": true
              },
              "created_at": {
                "type": "string",
                "description": "Timestamp of when the system account access token was created.",
                "description_kind": "plain",
                "computed": true
              },
              "expires_at": {
                "type": "string",
                "description": "Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "ID of the system account access token.",
                "description_kind": "plain",
                "computed": true
              },
              "last_used_at": {
                "type": "string",
                "description": "Timestamp of when the system account access token was last used.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description_kind": "plain",
                "optional": true
              },
              "token": {
                "type": "string",
                "description": "The token of the system account access token.",
                "description_kind": "plain",
                "computed": true,
                "sensitive": true
              },
              "updated_at": {
                "type": "string",
                "description": "Timestamp of when the system account access token was last updated.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "SystemAccountAccessToken Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_system_account_role": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "description": "ID of the system account. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "entity_id": {
                "type": "string",
                "description": "The ID of the entity. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "entity_region": {
                "type": "string",
                "description": "Region of the team. must be one of [\"us\", \"eu\", \"au\", \"me\", \"in\", \"*\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "entity_type_name": {
                "type": "string",
                "description": "The type of entity. must be one of [\"APIs\", \"API Products\", \"Application Auth Strategies\", \"Audit Logs\", \"Control Planes\", \"Dashboards\", \"DCR Providers\", \"Identity\", \"Mesh Control Planes\", \"Networks\", \"Portals\", \"Service Hub\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the role assignment.",
                "description_kind": "plain",
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description": "The desired role. must be one of [\"Admin\", \"Appearance Maintainer\", \"Application Registration\", \"Certificate Admin\", \"Cloud Gateway Cluster Admin\", \"Cloud Gateway Cluster Viewer\", \"Consumer Admin\", \"Connector\", \"Creator\", \"Deployer\", \"Discovery Admin\", \"Discovery Viewer\", \"Gateway Service Admin\", \"Integration Admin\", \"Integration Viewer\", \"Key Admin\", \"Maintainer\", \"Network Admin\", \"Network Creator\", \"Network Viewer\", \"Plugin Admin\", \"Plugins Admin\", \"Product Publisher\", \"Publisher\", \"Route Admin\", \"SNI Admin\", \"Scorecard Admin\", \"Scorecard Viewer\", \"Service Admin\", \"Service Creator\", \"Service Viewer\", \"Upstream Admin\", \"Vault Admin\", \"Viewer\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "SystemAccountRole Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_system_account_team": {
          "version": 0,
          "block": {
            "attributes": {
              "account_id": {
                "type": "string",
                "description": "ID of the system account. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "team_id": {
                "type": "string",
                "description": "ID of the team. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "SystemAccountTeam Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_team": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "A Unix timestamp representation of team creation.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The description of the new team.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The team ID.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "A name for the team being created.",
                "description_kind": "plain",
                "required": true
              },
              "system_team": {
                "type": "bool",
                "description": "Returns True if a user belongs to a `system_team`. System teams are teams that can manage Konnect objects, like \"Organization Admin\", or \"Service\". Default: false",
                "description_kind": "plain",
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "A Unix timestamp representation of the most recent change to the team object in Konnect.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Team Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_team_role": {
          "version": 0,
          "block": {
            "attributes": {
              "entity_id": {
                "type": "string",
                "description": "The ID of the entity. Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "entity_region": {
                "type": "string",
                "description": "Region of the team. must be one of [\"us\", \"eu\", \"au\", \"me\", \"in\", \"*\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "entity_type_name": {
                "type": "string",
                "description": "The type of entity. must be one of [\"APIs\", \"API Products\", \"Application Auth Strategies\", \"Audit Logs\", \"Control Planes\", \"Dashboards\", \"DCR Providers\", \"Identity\", \"Mesh Control Planes\", \"Networks\", \"Portals\", \"Service Hub\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The ID of the role assignment.",
                "description_kind": "plain",
                "computed": true
              },
              "role_name": {
                "type": "string",
                "description": "The desired role. must be one of [\"Admin\", \"Appearance Maintainer\", \"Application Registration\", \"Certificate Admin\", \"Cloud Gateway Cluster Admin\", \"Cloud Gateway Cluster Viewer\", \"Consumer Admin\", \"Connector\", \"Creator\", \"Deployer\", \"Discovery Admin\", \"Discovery Viewer\", \"Gateway Service Admin\", \"Integration Admin\", \"Integration Viewer\", \"Key Admin\", \"Maintainer\", \"Network Admin\", \"Network Creator\", \"Network Viewer\", \"Plugin Admin\", \"Plugins Admin\", \"Product Publisher\", \"Publisher\", \"Route Admin\", \"SNI Admin\", \"Scorecard Admin\", \"Scorecard Viewer\", \"Service Admin\", \"Service Creator\", \"Service Viewer\", \"Upstream Admin\", \"Vault Admin\", \"Viewer\"]; Requires replacement if changed.",
                "description_kind": "plain",
                "optional": true
              },
              "team_id": {
                "type": "string",
                "description": "The team ID. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "TeamRole Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_team_user": {
          "version": 0,
          "block": {
            "attributes": {
              "team_id": {
                "type": "string",
                "description": "ID of the team. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              },
              "user_id": {
                "type": "string",
                "description": "The user ID for the user being added to a team. Requires replacement if changed.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "TeamUser Resource",
            "description_kind": "markdown"
          }
        },
        "konnect_dashboard": {
          "version": 0,
          "block": {
            "attributes": {
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "created_by": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "definition": {
                "nested_type": {
                  "attributes": {
                    "preset_filters": {
                      "nested_type": {
                        "attributes": {
                          "field": {
                            "type": "string",
                            "description": "Not Null; must be one of [\"ai_plugin\", \"ai_provider\", \"ai_request_model\", \"ai_response_model\", \"api\", \"api_product\", \"api_product_version\", \"application\", \"consumer\", \"control_plane\", \"control_plane_group\", \"data_plane_node\", \"data_plane_node_version\", \"gateway_service\", \"llm_cache_status\", \"llm_embeddings_model\", \"llm_embeddings_provider\", \"portal\", \"realm\", \"response_source\", \"route\", \"status_code\", \"status_code_grouped\", \"upstream_status_code\", \"upstream_status_code_grouped\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "operator": {
                            "type": "string",
                            "description": "Not Null; must be one of [\"in\", \"not_in\", \"empty\", \"not_empty\"]",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          },
                          "value": {
                            "type": "string",
                            "description": "Parsed as JSON.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "An optional array of filters that are applied globally to all relevant tiles in the dashboard.\n\nWhether or not a preset filter applies to a tile depends on the filter's dimension.  Some dimensions, like `control_plane`, are common to all datasources; other dimensions may only apply to one datasource.",
                      "description_kind": "markdown",
                      "optional": true,
                      "computed": true
                    },
                    "tiles": {
                      "nested_type": {
                        "attributes": {
                          "chart": {
                            "nested_type": {
                              "attributes": {
                                "definition": {
                                  "nested_type": {
                                    "attributes": {
                                      "chart": {
                                        "nested_type": {
                                          "attributes": {
                                            "donut": {
                                              "nested_type": {
                                                "attributes": {
                                                  "chart_title": {
                                                    "type": "string",
                                                    "description": "The title of the chart, which is displayed in the tile's header.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Not Null; must be \"donut\"",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                },
                                                "nesting_mode": "single"
                                              },
                                              "description": "A chart that can display one-dimensional data in a hollow, segmented circle.  To use this chart, ensure that\nthe query includes only one dimension (not `time`).",
                                              "description_kind": "markdown",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "horizontal_bar": {
                                              "nested_type": {
                                                "attributes": {
                                                  "chart_title": {
                                                    "type": "string",
                                                    "description": "The title of the chart, which is displayed in the tile's header.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "stacked": {
                                                    "type": "bool",
                                                    "description": "Whether to stack the bars (implicitly adding them together to form a total), or leave them independent from each other.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Not Null; must be one of [\"horizontal_bar\", \"vertical_bar\"]",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                },
                                                "nesting_mode": "single"
                                              },
                                              "description": "A chart that can display non-timeseries data as bars.  This type of chart supports up to 2 dimensions (not `time`).\nTo render a bar chart of timeseries data, use a `timeseries_bar` chart instead.",
                                              "description_kind": "markdown",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "single_value": {
                                              "nested_type": {
                                                "attributes": {
                                                  "chart_title": {
                                                    "type": "string",
                                                    "description": "The title of the chart, which is displayed in the tile's header.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "decimal_points": {
                                                    "type": "number",
                                                    "description": "The number of figures to render after the decimal.  Most metrics only support up to 2 decimals, but some may support more.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Not Null; must be \"single_value\"",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                },
                                                "nesting_mode": "single"
                                              },
                                              "description": "A chart that can render a single number.  This chart works with a single metric and no dimensions.",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "timeseries_line": {
                                              "nested_type": {
                                                "attributes": {
                                                  "chart_title": {
                                                    "type": "string",
                                                    "description": "The title of the chart, which is displayed in the tile's header.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "stacked": {
                                                    "type": "bool",
                                                    "description": "Whether to stack the bars or lines (implicitly adding them together to form a total), or leave them independent from each other.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Not Null; must be one of [\"timeseries_line\", \"timeseries_bar\"]",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                },
                                                "nesting_mode": "single"
                                              },
                                              "description": "A chart that can render timeseries data -- data from a query that has `time` as a dimension -- as lines or bars.\n\nThis type of chart can support:\n\n- One or more metrics: `{ metrics: [\"response_latency_p99\", \"response_latency_p95\"], dimensions: [\"time\"] }`\n- One metric plus one non-time dimension: `{ metrics: [\"request_count\"], dimensions: [\"time\", \"gateway_service\"] }` \n\nEither way, ensure that `time` is in the list of query dimensions.",
                                              "description_kind": "markdown",
                                              "optional": true,
                                              "computed": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description": "The type of chart to render. Not Null",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "query": {
                                        "nested_type": {
                                          "attributes": {
                                            "api_usage": {
                                              "nested_type": {
                                                "attributes": {
                                                  "datasource": {
                                                    "type": "string",
                                                    "description": "Not Null; must be \"api_usage\"",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "dimensions": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "List of attributes or entity types to group by.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "filters": {
                                                    "nested_type": {
                                                      "attributes": {
                                                        "field": {
                                                          "type": "string",
                                                          "description": "Not Null; must be one of [\"api\", \"api_product\", \"api_product_version\", \"application\", \"consumer\", \"control_plane\", \"control_plane_group\", \"data_plane_node\", \"data_plane_node_version\", \"gateway_service\", \"portal\", \"realm\", \"response_source\", \"route\", \"status_code\", \"status_code_grouped\", \"upstream_status_code\", \"upstream_status_code_grouped\"]",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        },
                                                        "operator": {
                                                          "type": "string",
                                                          "description": "Not Null; must be one of [\"in\", \"not_in\", \"empty\", \"not_empty\"]",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "Parsed as JSON.",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        }
                                                      },
                                                      "nesting_mode": "list"
                                                    },
                                                    "description": "A list of filters to apply to the query.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "granularity": {
                                                    "type": "string",
                                                    "description": "Force time grouping into buckets of the specified duration.  Only has an effect if \"time\" is in the \"dimensions\" list.\n\nThe granularity of the result may be coarser than requested.  The finest allowed granularity depends on the query's time range: data farther in the past may have coarser granularity.  The exact result granularity will be reported in the response `meta.granularity_ms` field.\n\nIf granularity is not specified and \"time\" is in the dimensions list, a default will be chosen based on the time range requested.\n\nDifferent relative times support different granularities:\n\n  - 15m => tenSecondly, thirtySecondly, minutely\n  - 1h  => tenSecondly, thirtySecondly, minutely, fiveMinutely, tenMinutely\n  - 6h  => thirtySecondly, minutely, fiveMinutely, tenMinutely, thirtyMinutely, hourly\n  - 12h => minutely, fiveMinutely, tenMinutely, thirtyMinutely, hourly\n  - 24h => fiveMinutely, tenMinutely, thirtyMinutely, hourly\n  - 7d  => thirtyMinutely, hourly, twoHourly, twelveHourly, daily\n  - 30d => hourly, twoHourly, twelveHourly, daily, weekly\n\nFor special time ranges:\n\n  - current_week, previous_week   => thirtyMinutely, hourly, twoHourly, twelveHourly, daily\n  - current_month, previous_month => hourly, twoHourly, twelveHourly, daily, weekly\n\nFor absolute time ranges, daily will be used.\nmust be one of [\"tenSecondly\", \"thirtySecondly\", \"minutely\", \"fiveMinutely\", \"tenMinutely\", \"thirtyMinutely\", \"hourly\", \"twoHourly\", \"twelveHourly\", \"daily\", \"weekly\"]",
                                                    "description_kind": "markdown",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "metrics": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "List of aggregated metrics to collect across the requested time span. If no metrics are specified, request_count will be computed by default.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "time_range": {
                                                    "nested_type": {
                                                      "attributes": {
                                                        "absolute": {
                                                          "nested_type": {
                                                            "attributes": {
                                                              "end": {
                                                                "type": "string",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "start": {
                                                                "type": "string",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "description": "Not Null; must be \"absolute\"",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "tz": {
                                                                "type": "string",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              }
                                                            },
                                                            "nesting_mode": "single"
                                                          },
                                                          "description": "A duration representing an exact start and end time.",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        },
                                                        "relative": {
                                                          "nested_type": {
                                                            "attributes": {
                                                              "time_range": {
                                                                "type": "string",
                                                                "description": "Not Null; must be one of [\"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"7d\", \"30d\", \"current_week\", \"current_month\", \"previous_week\", \"previous_month\"]",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "description": "Not Null; must be \"relative\"",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "tz": {
                                                                "type": "string",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              }
                                                            },
                                                            "nesting_mode": "single"
                                                          },
                                                          "description": "A duration representing a relative-to-now span of time. Generally the start time is floored to the requested granularity. Eg 7d from now, with 1day granularity initiated at 2024-01-08T17:11:00+05:00 will query for the time range from 2024-01-01T00:00:00+05:00 to 2024-01-08T17:11:00+05:00. The exact start and end timestamps are returned in the result query in the meta.start and meta.end fields. If the granularity for the previous query was 1hour, it would query a time range from 2024-01-01T17:00:00+05:00 to 2024-01-08T17:11:00+05:00.",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        }
                                                      },
                                                      "nesting_mode": "single"
                                                    },
                                                    "description": "The time range to query.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                },
                                                "nesting_mode": "single"
                                              },
                                              "description": "A query targeting the API usage analytics datasource.",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "llm_usage": {
                                              "nested_type": {
                                                "attributes": {
                                                  "datasource": {
                                                    "type": "string",
                                                    "description": "Not Null; must be \"llm_usage\"",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "dimensions": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "List of attributes or entity types to group by.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "filters": {
                                                    "nested_type": {
                                                      "attributes": {
                                                        "field": {
                                                          "type": "string",
                                                          "description": "Not Null; must be one of [\"ai_plugin\", \"ai_provider\", \"ai_request_model\", \"ai_response_model\", \"application\", \"consumer\", \"control_plane\", \"control_plane_group\", \"gateway_service\", \"llm_cache_status\", \"llm_embeddings_model\", \"llm_embeddings_provider\", \"realm\", \"route\", \"status_code\", \"status_code_grouped\"]",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        },
                                                        "operator": {
                                                          "type": "string",
                                                          "description": "Not Null; must be one of [\"in\", \"not_in\", \"empty\", \"not_empty\"]",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "Parsed as JSON.",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        }
                                                      },
                                                      "nesting_mode": "list"
                                                    },
                                                    "description": "A list of filters to apply to the query.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "granularity": {
                                                    "type": "string",
                                                    "description": "Force time grouping into buckets of the specified duration.  Only has an effect if \"time\" is in the \"dimensions\" list.\n\nThe granularity of the result may be coarser than requested.  The finest allowed granularity depends on the query's time range: data farther in the past may have coarser granularity.  The exact result granularity will be reported in the response `meta.granularity_ms` field.\n\nIf granularity is not specified and \"time\" is in the dimensions list, a default will be chosen based on the time range requested.\n\nDifferent relative times support different granularities:\n\n  - 15m => tenSecondly, thirtySecondly, minutely\n  - 1h  => tenSecondly, thirtySecondly, minutely, fiveMinutely, tenMinutely\n  - 6h  => thirtySecondly, minutely, fiveMinutely, tenMinutely, thirtyMinutely, hourly\n  - 12h => minutely, fiveMinutely, tenMinutely, thirtyMinutely, hourly\n  - 24h => fiveMinutely, tenMinutely, thirtyMinutely, hourly\n  - 7d  => thirtyMinutely, hourly, twoHourly, twelveHourly, daily\n  - 30d => hourly, twoHourly, twelveHourly, daily, weekly\n\nFor special time ranges:\n\n  - current_week, previous_week   => thirtyMinutely, hourly, twoHourly, twelveHourly, daily\n  - current_month, previous_month => hourly, twoHourly, twelveHourly, daily, weekly\n\nFor absolute time ranges, daily will be used.\nmust be one of [\"tenSecondly\", \"thirtySecondly\", \"minutely\", \"fiveMinutely\", \"tenMinutely\", \"thirtyMinutely\", \"hourly\", \"twoHourly\", \"twelveHourly\", \"daily\", \"weekly\"]",
                                                    "description_kind": "markdown",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "metrics": {
                                                    "type": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "description": "List of aggregated metrics to collect across the requested time span.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  },
                                                  "time_range": {
                                                    "nested_type": {
                                                      "attributes": {
                                                        "absolute": {
                                                          "nested_type": {
                                                            "attributes": {
                                                              "end": {
                                                                "type": "string",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "start": {
                                                                "type": "string",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "description": "Not Null; must be \"absolute\"",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "tz": {
                                                                "type": "string",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              }
                                                            },
                                                            "nesting_mode": "single"
                                                          },
                                                          "description": "A duration representing an exact start and end time.",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        },
                                                        "relative": {
                                                          "nested_type": {
                                                            "attributes": {
                                                              "time_range": {
                                                                "type": "string",
                                                                "description": "Not Null; must be one of [\"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"7d\", \"30d\", \"current_week\", \"current_month\", \"previous_week\", \"previous_month\"]",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "description": "Not Null; must be \"relative\"",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              },
                                                              "tz": {
                                                                "type": "string",
                                                                "description_kind": "plain",
                                                                "optional": true,
                                                                "computed": true
                                                              }
                                                            },
                                                            "nesting_mode": "single"
                                                          },
                                                          "description": "A duration representing a relative-to-now span of time. Generally the start time is floored to the requested granularity. Eg 7d from now, with 1day granularity initiated at 2024-01-08T17:11:00+05:00 will query for the time range from 2024-01-01T00:00:00+05:00 to 2024-01-08T17:11:00+05:00. The exact start and end timestamps are returned in the result query in the meta.start and meta.end fields. If the granularity for the previous query was 1hour, it would query a time range from 2024-01-01T17:00:00+05:00 to 2024-01-08T17:11:00+05:00.",
                                                          "description_kind": "plain",
                                                          "optional": true,
                                                          "computed": true
                                                        }
                                                      },
                                                      "nesting_mode": "single"
                                                    },
                                                    "description": "The time range to query.",
                                                    "description_kind": "plain",
                                                    "optional": true,
                                                    "computed": true
                                                  }
                                                },
                                                "nesting_mode": "single"
                                              },
                                              "description": "A query targeting the LLM usage analytics datasource.",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description": "Not Null",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "The tile's definition, which consists of a query to fetch data and a chart to render the data.\nNote that some charts expect certain types of queries to render properly.  The documentation for the individual chart types has more information.\nNot Null",
                                  "description_kind": "markdown",
                                  "optional": true,
                                  "computed": true
                                },
                                "layout": {
                                  "nested_type": {
                                    "attributes": {
                                      "position": {
                                        "nested_type": {
                                          "attributes": {
                                            "col": {
                                              "type": "number",
                                              "description": "Not Null",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "row": {
                                              "type": "number",
                                              "description": "Not Null",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description": "Position of the tile in the dashboard's grid.  Numbering starts at 0, so a tile in the upper left of the dashboard will be at column 0, row 0. Not Null",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      },
                                      "size": {
                                        "nested_type": {
                                          "attributes": {
                                            "cols": {
                                              "type": "number",
                                              "description": "Not Null",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            },
                                            "rows": {
                                              "type": "number",
                                              "description": "Not Null",
                                              "description_kind": "plain",
                                              "optional": true,
                                              "computed": true
                                            }
                                          },
                                          "nesting_mode": "single"
                                        },
                                        "description": "Number of columns and rows the tile occupies.  A dashboard always has 6 columns, but has as many rows as needed to accommodate the given tiles. Not Null",
                                        "description_kind": "plain",
                                        "optional": true,
                                        "computed": true
                                      }
                                    },
                                    "nesting_mode": "single"
                                  },
                                  "description": "Information about how the tile is placed on the dashboard.\n\nExamples:\n- a tile occupying the first half of the top row: `{ \"position\": { \"col\": 0, \"row\": 0 }, size: { \"cols\": 3, \"rows\": 1 } }`\n- a tile occupying the second half of the top row: `{ \"position\": { \"col\": 3, \"row\": 0 }, size: { \"cols\": 3, \"rows\": 1 } }`\nNot Null",
                                  "description_kind": "markdown",
                                  "optional": true,
                                  "computed": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of tile.  Chart tiles must have type 'chart'. Not Null; must be \"chart\"",
                                  "description_kind": "plain",
                                  "optional": true,
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description": "A tile that queries data and renders a chart.",
                            "description_kind": "plain",
                            "optional": true,
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description": "The array of tiles.  We currently support up to 102 tiles, which is 17 rows of 6x1 tiles.",
                      "description_kind": "plain",
                      "required": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "A JSON object describing a dashboard.\n\nA dashboard is an array of tiles.  All tiles are of type 'chart', which query data and render a chart displaying that data.\n\nDashboards have 6 columns and as many rows as necessary to display their tiles.",
                "description_kind": "markdown",
                "required": true
              },
              "id": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "optional": true,
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The dashboard name, which is displayed at the top of the dashboard and in lists.\nIt does not need to be unique.",
                "description_kind": "markdown",
                "required": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Dashboard Resource",
            "description_kind": "markdown"
          }
        }
      },
      "data_source_schemas": {
        "konnect_cloud_gateway_provider_account_list": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "nested_type": {
                  "attributes": {
                    "created_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of provider account creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "provider": {
                      "type": "string",
                      "description": "Name of cloud provider.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "provider_account_id": {
                      "type": "string",
                      "description": "ID of the cloud provider account.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An RFC-3339 timestamp representation of provider account update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description_kind": "plain",
                "computed": true
              },
              "meta": {
                "nested_type": {
                  "attributes": {
                    "page": {
                      "nested_type": {
                        "attributes": {
                          "number": {
                            "type": "number",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "size": {
                            "type": "number",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "total": {
                            "type": "number",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Contains pagination query parameters and the total number of objects returned.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "returns the pagination information",
                "description_kind": "plain",
                "computed": true
              },
              "page_number": {
                "type": "number",
                "description": "Determines which page of the entities to retrieve.",
                "description_kind": "plain",
                "optional": true
              },
              "page_size": {
                "type": "number",
                "description": "The maximum number of items to include per page. The last page of a collection may include fewer items.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "CloudGatewayProviderAccountList DataSource",
            "description_kind": "markdown"
          }
        },
        "konnect_gateway_control_plane": {
          "version": 0,
          "block": {
            "attributes": {
              "config": {
                "nested_type": {
                  "attributes": {
                    "auth_type": {
                      "type": "string",
                      "description": "The auth type value of the cluster associated with the Runtime Group.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "cloud_gateway": {
                      "type": "bool",
                      "description": "Whether the Control Plane can be used for cloud-gateways.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "cluster_type": {
                      "type": "string",
                      "description": "The ClusterType value of the cluster associated with the Control Plane.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "control_plane_endpoint": {
                      "type": "string",
                      "description": "Control Plane Endpoint.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "proxy_urls": {
                      "nested_type": {
                        "attributes": {
                          "host": {
                            "type": "string",
                            "description": "Hostname of the proxy URL.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "port": {
                            "type": "number",
                            "description": "Port of the proxy URL.",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Protocol of the proxy URL.",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "set"
                      },
                      "description": "Array of proxy URLs associated with reaching the data-planes connected to a control-plane.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "telemetry_endpoint": {
                      "type": "string",
                      "description": "Telemetry Endpoint.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "CP configuration object for related access endpoints.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "The description of the control plane in Konnect.",
                "description_kind": "plain",
                "computed": true
              },
              "filter": {
                "nested_type": {
                  "attributes": {
                    "cloud_gateway": {
                      "type": "bool",
                      "description": "Filter by a boolean value (true/false).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "cluster_type": {
                      "nested_type": {
                        "attributes": {
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "id": {
                      "nested_type": {
                        "attributes": {
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oeq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Returns entities that exact match any of the comma-delimited phrases in the filter string.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "nested_type": {
                        "attributes": {
                          "contains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Filters a collection of control-planes.",
                "description_kind": "plain",
                "optional": true
              },
              "filter_labels": {
                "type": "string",
                "description": "Filter control planes in the response by associated labels.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "The control plane ID.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the control plane.",
                "description_kind": "plain",
                "computed": true
              },
              "number": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              },
              "page_number": {
                "type": "number",
                "description": "Determines which page of the entities to retrieve.",
                "description_kind": "plain",
                "optional": true
              },
              "page_size": {
                "type": "number",
                "description": "The maximum number of items to include per page. The last page of a collection may include fewer items.",
                "description_kind": "plain",
                "optional": true
              },
              "size": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              },
              "sort": {
                "type": "string",
                "description": "Sorts a collection of control-planes. Supported sort attributes are:\n  - created_at",
                "description_kind": "markdown",
                "optional": true
              },
              "total": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "GatewayControlPlane DataSource",
            "description_kind": "markdown"
          }
        },
        "konnect_mesh_control_planes": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "nested_type": {
                  "attributes": {
                    "created_at": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "description": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "features": {
                      "nested_type": {
                        "attributes": {
                          "hostname_generator_creation": {
                            "nested_type": {
                              "attributes": {
                                "enabled": {
                                  "type": "bool",
                                  "description_kind": "plain",
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "computed": true
                          },
                          "mesh_creation": {
                            "nested_type": {
                              "attributes": {
                                "enabled": {
                                  "type": "bool",
                                  "description_kind": "plain",
                                  "computed": true
                                }
                              },
                              "nesting_mode": "single"
                            },
                            "description_kind": "plain",
                            "computed": true
                          },
                          "type": {
                            "type": "string",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "list"
                      },
                      "description_kind": "plain",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "ID of the control plane.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Labels to facilitate tagged search on control planes. Keys must be of length 1-63 characters.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the control plane.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description_kind": "plain",
                "computed": true
              },
              "meta": {
                "nested_type": {
                  "attributes": {
                    "page": {
                      "nested_type": {
                        "attributes": {
                          "number": {
                            "type": "number",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "size": {
                            "type": "number",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "total": {
                            "type": "number",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Contains pagination query parameters and the total number of objects returned.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "returns the pagination information",
                "description_kind": "plain",
                "computed": true
              },
              "page_number": {
                "type": "number",
                "description": "Determines which page of the entities to retrieve.",
                "description_kind": "plain",
                "optional": true
              },
              "page_size": {
                "type": "number",
                "description": "The maximum number of items to include per page. The last page of a collection may include fewer items.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "MeshControlPlanes DataSource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal": {
          "version": 0,
          "block": {
            "attributes": {
              "authentication_enabled": {
                "type": "bool",
                "description": "Whether the portal supports developer authentication. If disabled, developers cannot register for accounts or create applications.",
                "description_kind": "plain",
                "computed": true
              },
              "auto_approve_applications": {
                "type": "bool",
                "description": "Whether requests from applications to register for APIs will be automatically approved, or if they will be set to pending until approved by an admin.",
                "description_kind": "plain",
                "computed": true
              },
              "auto_approve_developers": {
                "type": "bool",
                "description": "Whether developer account registrations will be automatically approved, or if they will be set to pending until approved by an admin.",
                "description_kind": "plain",
                "computed": true
              },
              "canonical_domain": {
                "type": "string",
                "description": "The canonical domain of the developer portal",
                "description_kind": "plain",
                "computed": true
              },
              "created_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity creation date.",
                "description_kind": "plain",
                "computed": true
              },
              "default_api_visibility": {
                "type": "string",
                "description": "The default visibility of APIs in the portal. If set to `public`, newly published APIs are visible to unauthenticated developers. If set to `private`, newly published APIs are hidden from unauthenticated developers.",
                "description_kind": "plain",
                "computed": true
              },
              "default_application_auth_strategy_id": {
                "type": "string",
                "description": "The default authentication strategy for APIs published to the portal. Newly published APIs will use this authentication strategy unless overridden during publication. If set to `null`, API publications will not use an authentication strategy unless set during publication.",
                "description_kind": "plain",
                "computed": true
              },
              "default_domain": {
                "type": "string",
                "description": "The domain assigned to the portal by Konnect. This is the default place to access the portal and its API if not using a `custom_domain``.",
                "description_kind": "plain",
                "computed": true
              },
              "default_page_visibility": {
                "type": "string",
                "description": "The default visibility of pages in the portal. If set to `public`, newly created pages are visible to unauthenticated developers. If set to `private`, newly created pages are hidden from unauthenticated developers.",
                "description_kind": "plain",
                "computed": true
              },
              "description": {
                "type": "string",
                "description": "A description of the portal.",
                "description_kind": "plain",
                "computed": true
              },
              "display_name": {
                "type": "string",
                "description": "The display name of the portal. This value will be the portal's `name` in Portal API.",
                "description_kind": "plain",
                "computed": true
              },
              "filter": {
                "nested_type": {
                  "attributes": {
                    "authentication_enabled": {
                      "type": "bool",
                      "description": "Filter by a boolean value (true/false).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "auto_approve_applications": {
                      "type": "bool",
                      "description": "Filter by a boolean value (true/false).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "auto_approve_developers": {
                      "type": "bool",
                      "description": "Filter by a boolean value (true/false).",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "canonical_domain": {
                      "nested_type": {
                        "attributes": {
                          "contains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ocontains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oeq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "default_api_visibility": {
                      "nested_type": {
                        "attributes": {
                          "contains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ocontains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oeq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "default_application_auth_strategy_id": {
                      "nested_type": {
                        "attributes": {
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oeq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "default_domain": {
                      "nested_type": {
                        "attributes": {
                          "contains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ocontains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oeq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "default_page_visibility": {
                      "nested_type": {
                        "attributes": {
                          "contains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ocontains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oeq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "description": {
                      "nested_type": {
                        "attributes": {
                          "contains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ocontains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oeq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "id": {
                      "nested_type": {
                        "attributes": {
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oeq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "name": {
                      "nested_type": {
                        "attributes": {
                          "contains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "eq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "neq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "ocontains": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          },
                          "oeq": {
                            "type": "string",
                            "description_kind": "plain",
                            "optional": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Filters on the given string field value by exact match inequality.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "rbac_enabled": {
                      "type": "bool",
                      "description": "Filter by a boolean value (true/false).",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "Filter portals returned in the response.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description": "Contains a unique identifier used for this resource.",
                "description_kind": "plain",
                "computed": true
              },
              "labels": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                "description_kind": "markdown",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The name of the portal, used to distinguish it from other portals. Name must be unique.",
                "description_kind": "plain",
                "computed": true
              },
              "number": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              },
              "page_number": {
                "type": "number",
                "description": "Determines which page of the entities to retrieve.",
                "description_kind": "plain",
                "optional": true
              },
              "page_size": {
                "type": "number",
                "description": "The maximum number of items to include per page. The last page of a collection may include fewer items.",
                "description_kind": "plain",
                "optional": true
              },
              "rbac_enabled": {
                "type": "bool",
                "description": "Whether the portal resources are protected by Role Based Access Control (RBAC). If enabled, developers view or register for APIs until unless assigned to teams with access to view and consume specific APIs. Authentication must be enabled to use RBAC.",
                "description_kind": "plain",
                "computed": true
              },
              "size": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              },
              "sort": {
                "type": "string",
                "description": "Sorts a collection of portals. Supported sort attributes are:\n  - name\n  - description\n  - authentication_enabled\n  - rbac_enabled\n  - auto_approve_applications\n  - auto_approve_developers\n  - default_domain\n  - canonical_domain\n  - created_at\n  - updated_at",
                "description_kind": "markdown",
                "optional": true
              },
              "total": {
                "type": "number",
                "description_kind": "plain",
                "computed": true
              },
              "updated_at": {
                "type": "string",
                "description": "An ISO-8601 timestamp representation of entity update date.",
                "description_kind": "plain",
                "computed": true
              }
            },
            "description": "Portal DataSource",
            "description_kind": "markdown"
          }
        },
        "konnect_portal_classic_list": {
          "version": 0,
          "block": {
            "attributes": {
              "data": {
                "nested_type": {
                  "attributes": {
                    "application_count": {
                      "type": "number",
                      "description": "Number of applications created in the portal.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "auto_approve_applications": {
                      "type": "bool",
                      "description": "Whether the requests from applications to register for products will be automatically approved, or if they will be set to pending until approved by an admin.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "auto_approve_developers": {
                      "type": "bool",
                      "description": "Whether the developer account registrations will be automatically approved, or if they will be set to pending until approved by an admin.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "An ISO-8601 timestamp representation of entity creation date.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "custom_client_domain": {
                      "type": "string",
                      "description": "The custom domain to access a self-hosted customized developer portal client. If this is set, the Konnect-hosted portal client will no longer be available. `custom_domain` must be also set for this value to be set. See https://github.com/Kong/konnect-portal for information on how to get started deploying and customizing your own Konnect portal.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "custom_domain": {
                      "type": "string",
                      "description": "The custom domain to access the developer portal. A CNAME for the portal's default domain must be able to be set for the custom domain for it to be valid. After setting a valid CNAME, an SSL/TLS certificate will be automatically manged for the custom domain, and traffic will be able to use the custom domain to route to the portal's web client and API.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "default_application_auth_strategy_id": {
                      "type": "string",
                      "description": "Default strategy ID applied on applications for the portal",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "default_domain": {
                      "type": "string",
                      "description": "The domain assigned to the portal by Konnect. This is the default place to access the portal and its API if not using a `custom_domain``.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the portal.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "developer_count": {
                      "type": "number",
                      "description": "Number of developers using the portal.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The display name of the portal. This value will be the portal's `name` in Portal API.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "id": {
                      "type": "string",
                      "description": "Contains a unique identifier used for this resource.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "is_public": {
                      "type": "bool",
                      "description": "Whether the portal catalog can be accessed publicly without any developer authentication. Developer accounts and applications cannot be created if the portal is public.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "labels": {
                      "type": [
                        "map",
                        "string"
                      ],
                      "description": "Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. \n\nKeys must be of length 1-63 characters, and cannot start with \"kong\", \"konnect\", \"mesh\", \"kic\", or \"_\".",
                      "description_kind": "markdown",
                      "computed": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the portal, used to distinguish it from other portals. Name must be unique.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "published_product_count": {
                      "type": "number",
                      "description": "Number of api products published to the portal",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "rbac_enabled": {
                      "type": "bool",
                      "description": "Whether the portal resources are protected by Role Based Access Control (RBAC). If enabled, developers view or register for products until unless assigned to teams with access to view and consume specific products.",
                      "description_kind": "plain",
                      "computed": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "An ISO-8601 timestamp representation of entity update date.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "list"
                },
                "description_kind": "plain",
                "computed": true
              },
              "meta": {
                "nested_type": {
                  "attributes": {
                    "page": {
                      "nested_type": {
                        "attributes": {
                          "number": {
                            "type": "number",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "size": {
                            "type": "number",
                            "description_kind": "plain",
                            "computed": true
                          },
                          "total": {
                            "type": "number",
                            "description_kind": "plain",
                            "computed": true
                          }
                        },
                        "nesting_mode": "single"
                      },
                      "description": "Contains pagination query parameters and the total number of objects returned.",
                      "description_kind": "plain",
                      "computed": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description": "returns the pagination information",
                "description_kind": "plain",
                "computed": true
              },
              "page_number": {
                "type": "number",
                "description": "Determines which page of the entities to retrieve.",
                "description_kind": "plain",
                "optional": true
              },
              "page_size": {
                "type": "number",
                "description": "The maximum number of items to include per page. The last page of a collection may include fewer items.",
                "description_kind": "plain",
                "optional": true
              },
              "sort": {
                "type": "string",
                "description": "Sorts a collection of portals. Supported sort attributes are:\n  - name\n  - description\n  - is_public\n  - rbac_enabled\n  - auto_approve_applications\n  - auto_approve_developers\n  - default_domain\n  - custom_domain\n  - custom_client_domain\n  - created_at\n  - updated_at",
                "description_kind": "markdown",
                "optional": true
              }
            },
            "description": "PortalClassicList DataSource",
            "description_kind": "markdown"
          }
        }
      }
    }
  }
}
