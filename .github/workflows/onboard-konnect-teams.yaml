name: Onboard Konnect Teams

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "teams/resources.yaml"

env:
  TF_VAR_config_file: ${{ github.workspace }}/teams/resources.yaml
  TERRAFORM_DIR: ${{ github.workspace }}/terraform/konnect-teams

jobs:
  onboard-konnect-teams:
    runs-on: ubuntu-latest
    env:
      # Konnect related variables
      # Used for configuring TF Konnect provider
      KONNECT_SERVER_URL: ${{ vars.KONNECT_SERVER_URL }}
      KONNECT_TOKEN: ${{ secrets.KONNECT_TOKEN }}

      # Hashicorp Vault related variables
      # Used for configuring TF Vault provider
      VAULT_ADDR: ${{ vars.VAULT_ADDR }}
      VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

      # S3 related variables (for MinIO)
      # Used for configuring TF backend
      BUCKET_NAME: "kw.konnect.teams"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "latest"

      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Validate config
        run: |
          config=$( cat ${{ env.TF_VAR_config_file }} | yq -r . )

          # Validate metadata.type. Should be 'konnect.teams'
          metadata_type=$(echo "$config" | yq -r '.metadata.type')
          if [ "$metadata_type" != "konnect.teams" ]; then
            echo "Invalid metadata.type: $metadata_type. Expected 'konnect.teams'"
            exit 1
          fi

          # Validate resources is an array.
          resources_type=$(echo "$config" | yq -r '.resources | type')
          if [ "$resources_type" != "!!seq" ]; then
            echo "Invalid resources type: $resources_type. Expected '!!seq' (array)"
            exit 1
          fi

          # Every resource must have a name and the name must be lowercase alphanumeric with hyphens
          invalid_names=$(echo "$config" | yq -r '.resources[] | select(.name == null or (.name | test("[^a-z0-9-]"))) | .name')
          if [ -n "$invalid_names" ]; then
            echo "Invalid resource names found: $invalid_names. Names must be lowercase alphanumeric with hyphens."
            exit 1
          fi

          # Validate each resource type. Should be 'konnect.team'.
          invalid_resources=$(echo "$config" | yq '[.resources[] | select(.type != "konnect.team")]')
          if [ "$(echo "$invalid_resources" | yq 'length')" -ne 0 ]; then
            echo "Invalid resource types found: $(echo "$invalid_resources" | yq -c '.[]')"
            exit 1
          fi

          echo "Config validation passed"
        shell: bash

      - name: Ensure TF state S3 bucket exists
        shell: bash
        run: |
          ./create-s3-bucket.sh ${{ env.BUCKET_NAME }}
        working-directory: ${{ github.workspace }}/scripts

      - name: Terraform Init
        shell: bash
        run: |
          terraform init -upgrade \
            -backend-config=config.s3.tfbackend \
            -backend-config="bucket=${{ env.BUCKET_NAME }}" \
            -backend-config="key=tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
        working-directory: ${{env.TERRAFORM_DIR}}

      - name: Terraform Plan
        shell: bash
        run: |
          terraform plan -out=tfplan
        working-directory: ${{env.TERRAFORM_DIR}}

      - name: Terraform Apply
        shell: bash
        run: |
          terraform apply -auto-approve tfplan
        working-directory: ${{env.TERRAFORM_DIR}}
